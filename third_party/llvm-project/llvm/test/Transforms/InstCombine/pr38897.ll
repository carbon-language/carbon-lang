; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

define i32 @sharpening(i32 %b340, i1 %c, i1 %d, i32 %e, i32 %f, i32 %g, i32 %h) {
; CHECK-LABEL: @sharpening(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[SMAX58:%.*]] = select i1 [[C:%.*]], i32 [[E:%.*]], i32 [[F:%.*]]
; CHECK-NEXT:    [[SMAX59:%.*]] = select i1 [[D:%.*]], i32 [[G:%.*]], i32 [[H:%.*]]
; CHECK-NEXT:    [[TMP0:%.*]] = add i32 [[SMAX59]], 1
; CHECK-NEXT:    [[TMP1:%.*]] = call i32 @llvm.smin.i32(i32 [[TMP0]], i32 -1)
; CHECK-NEXT:    [[TMP2:%.*]] = call i32 @llvm.smax.i32(i32 [[SMAX58]], i32 [[TMP1]])
; CHECK-NEXT:    [[TMP14:%.*]] = xor i32 [[TMP2]], -1
; CHECK-NEXT:    ret i32 [[TMP14]]
;
entry:
  %smax58 = select i1 %c, i32 %e, i32 %f
  %smax59 = select i1 %d, i32 %g, i32 %h
  %tmp10 = sub i32 -2, %smax59
  %tmp11 = icmp sgt i32 %tmp10, 0
  %smax60 = select i1 %tmp11, i32 %tmp10, i32 0
  %tmp12 = xor i32 %smax60, -1
  %tmp13 = icmp sgt i32 %smax58, %tmp12
  %smax61 = select i1 %tmp13, i32 %smax58, i32 %tmp12
  %tmp14 = xor i32 %smax61, -1
  ret i32 %tmp14
}
