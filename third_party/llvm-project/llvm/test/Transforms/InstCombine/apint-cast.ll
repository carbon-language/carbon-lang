; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128"

; Tests to make sure elimination of casts is working correctly

define i17 @test1(i17 %a) {
; CHECK-LABEL: @test1(
; CHECK-NEXT:    [[C:%.*]] = lshr i17 [[A:%.*]], 8
; CHECK-NEXT:    [[D:%.*]] = shl i17 [[A]], 8
; CHECK-NEXT:    [[E:%.*]] = or i17 [[C]], [[D]]
; CHECK-NEXT:    ret i17 [[E]]
;
  %b = zext i17 %a to i37    ; <i37> [#uses=2]
  %c = lshr i37 %b, 8        ; <i37> [#uses=1]
  %d = shl i37 %b, 8         ; <i37> [#uses=1]
  %e = or i37 %c, %d         ; <i37> [#uses=1]
  %f = trunc i37 %e to i17   ; <i17> [#uses=1]
  ret i17 %f
}

define i167 @test2(i167 %a) {
; CHECK-LABEL: @test2(
; CHECK-NEXT:    [[C:%.*]] = lshr i167 [[A:%.*]], 9
; CHECK-NEXT:    [[D:%.*]] = shl i167 [[A]], 8
; CHECK-NEXT:    [[E:%.*]] = or i167 [[C]], [[D]]
; CHECK-NEXT:    ret i167 [[E]]
;
  %b = zext i167 %a to i577   ; <i577> [#uses=2]
  %c = lshr i577 %b, 9        ; <i577> [#uses=1]
  %d = shl i577 %b, 8         ; <i577> [#uses=1]
  %e = or i577 %c, %d         ; <i577> [#uses=1]
  %f = trunc i577 %e to i167  ; <i167> [#uses=1]
  ret i167 %f
}
