; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=rewrite-statepoints-for-gc -S < %s | FileCheck %s

define void @test() gc "statepoint-example" personality i32* ()* @zot{
; CHECK-LABEL: @test(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP:%.*]] = freeze i8 addrspace(1)* undef
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds i8, i8 addrspace(1)* [[TMP]], i64 16
; CHECK-NEXT:    [[TMP4:%.*]] = bitcast i8 addrspace(1)* [[TMP3]] to i32 addrspace(1)*
; CHECK-NEXT:    [[STATEPOINT_TOKEN:%.*]] = call token (i64, i32, void ()*, i32, i32, ...) @llvm.experimental.gc.statepoint.p0f_isVoidf(i64 2882400000, i32 0, void ()* elementtype(void ()) @wibble, i32 0, i32 0, i32 0, i32 0) [ "deopt"() ]
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds i32, i32 addrspace(1)* [[TMP4]], i64 undef
; CHECK-NEXT:    ret void
;
bb:
  %tmp = freeze i8 addrspace(1)* undef
  %tmp3 = getelementptr inbounds i8, i8 addrspace(1)* %tmp, i64 16
  %tmp4 = bitcast i8 addrspace(1)* %tmp3 to i32 addrspace(1)*
  call void @wibble() #3 [ "deopt"() ]
  %tmp5 = getelementptr inbounds i32, i32 addrspace(1)* %tmp4, i64 undef
  ret void
}

declare i32* @zot()

declare void @wibble()
