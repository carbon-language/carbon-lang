; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -mergeicmps -opaque-pointers < %s | FileCheck %s

target triple = "x86_64-unknown-unknown"

%S = type { i32, i32 }

define i1 @test(ptr dereferenceable(8) %a, ptr dereferenceable(8) %b) {
; CHECK-LABEL: @test(
; CHECK-NEXT:  "entry+land.rhs.i":
; CHECK-NEXT:    [[MEMCMP:%.*]] = call i32 @memcmp(ptr [[A:%.*]], ptr [[B:%.*]], i64 8)
; CHECK-NEXT:    [[TMP0:%.*]] = icmp eq i32 [[MEMCMP]], 0
; CHECK-NEXT:    br label [[OPEQ1_EXIT:%.*]]
; CHECK:       opeq1.exit:
; CHECK-NEXT:    ret i1 [[TMP0]]
;
entry:
  %v0 = load i32, ptr %a, align 4
  %v1 = load i32, ptr %b, align 4
  %cmp.i = icmp eq i32 %v0, %v1
  br i1 %cmp.i, label %land.rhs.i, label %opeq1.exit

land.rhs.i:                                       ; preds = %entry
  %second.i = getelementptr inbounds %S, ptr %a, i64 0, i32 1
  %v2 = load i32, ptr %second.i, align 4
  %second2.i = getelementptr inbounds %S, ptr %b, i64 0, i32 1
  %v3 = load i32, ptr %second2.i, align 4
  %cmp3.i = icmp eq i32 %v2, %v3
  br label %opeq1.exit

opeq1.exit:                                       ; preds = %land.rhs.i, %entry
  %phi = phi i1 [ false, %entry ], [ %cmp3.i, %land.rhs.i ]
  ret i1 %phi
}
