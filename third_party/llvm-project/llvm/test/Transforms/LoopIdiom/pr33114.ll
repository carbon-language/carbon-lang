; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; Check that we're not crashing while looking at the recurrence variable.
; RUN: opt -S -loop-idiom %s | FileCheck %s

define void @tinkywinky() {
; CHECK-LABEL: @tinkywinky(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br i1 true, label [[EXIT:%.*]], label [[PH:%.*]]
; CHECK:       ph:
; CHECK-NEXT:    [[MYPHI:%.*]] = phi i32 [ 1, [[ENTRY:%.*]] ]
; CHECK-NEXT:    br label [[IF_END:%.*]]
; CHECK:       if.end:
; CHECK-NEXT:    [[PATATINO:%.*]] = ashr i32 [[MYPHI]], undef
; CHECK-NEXT:    [[TOBOOL:%.*]] = icmp eq i32 [[PATATINO]], 0
; CHECK-NEXT:    br i1 [[TOBOOL]], label [[EXIT_LOOPEXIT:%.*]], label [[IF_END]]
; CHECK:       exit.loopexit:
; CHECK-NEXT:    br label [[EXIT]]
; CHECK:       exit:
; CHECK-NEXT:    ret void
;
entry:
  br i1 true, label %exit, label %ph

ph:
  %myphi = phi i32 [ 1, %entry ]
  br label %if.end

if.end:
  %patatino = ashr i32 %myphi, undef
  %tobool = icmp eq i32 %patatino, 0
  br i1 %tobool, label %exit, label %if.end

exit:
  ret void
}
