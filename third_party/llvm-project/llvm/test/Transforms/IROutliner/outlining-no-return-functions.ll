; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs
; RUN: opt -S -verify -iroutliner -ir-outlining-no-cost < %s | FileCheck %s

; Make sure that we outline safely from functions with no return instructions.

; The code extractor will insert return instructions in the outer function
; due to assumptions about the contents of the outlined region.

define void @f1() {
bb:
  br label %bb1
bb1:
  br label %bb1
}

define void @f2() {
bb:
  br label %bb1
bb1:
  br label %bb1
}

define void @f3() {
bb:
  br label %bb1
bb1:
  br label %bb1
}
; CHECK-LABEL: @f1(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    call void @outlined_ir_func_0()
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: @f2(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    call void @outlined_ir_func_0()
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: @f3(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    call void @outlined_ir_func_0()
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define internal void @outlined_ir_func_0(
; CHECK-NEXT:  newFuncRoot:
; CHECK-NEXT:    br label [[BB_TO_OUTLINE:%.*]]
; CHECK:       bb_to_outline:
; CHECK-NEXT:    br label [[BB1:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    br label [[BB1]]
;
