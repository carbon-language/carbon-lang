; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: -p
; RUN: opt -S -passes="simplifycfg<switch-to-lookup>" < %s | FileCheck %s

target triple = "x86_64-unknown-linux-gnu"

%struct.ham = type <{ i32, i32, i32, i8, i8, [2 x i8] }>

@global = external constant [75 x { i32, i32, i32, i8, i8 }]

define i1 @zot(i32 %arg) {
; CHECK-LABEL: @zot(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    %0 = icmp ult i32 %arg, 3
; CHECK-NEXT:    br i1 %0, label %switch.lookup, label %bb6
; CHECK:       switch.lookup:
; CHECK-NEXT:    %switch.gep = getelementptr inbounds [3 x %struct.ham*], [3 x %struct.ham*]* @switch.table.zot, i32 0, i32 %arg
; CHECK-NEXT:    %switch.load = load %struct.ham*, %struct.ham** %switch.gep, align 8
; CHECK-NEXT:    br label %bb6
; CHECK:       bb6:
; CHECK-NEXT:    %tmp7 = phi %struct.ham* [ %switch.load, %switch.lookup ], [ null, %bb ]
; CHECK-NEXT:    %tmp8 = icmp eq %struct.ham* %tmp7, bitcast (i32* getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], [75 x { i32, i32, i32, i8, i8 }]* @global, i64 1, i64 0, i32 0) to %struct.ham*)
; CHECK-NEXT:    ret i1 %tmp8
;
bb:
  %tmp = icmp eq i32 %arg, 1
  br i1 %tmp, label %bb6, label %bb1

bb1:                                              ; preds = %bb
  %tmp2 = icmp eq i32 %arg, 2
  br i1 %tmp2, label %bb6, label %bb3

bb3:                                              ; preds = %bb1
  %tmp4 = icmp eq i32 %arg, 0
  br i1 %tmp4, label %bb6, label %bb5

bb5:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3, %bb1, %bb
  %tmp7 = phi %struct.ham* [ null, %bb5 ], [ bitcast (i32* getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], [75 x { i32, i32, i32, i8, i8 }]* @global, i64 0, i64 6, i32 0) to %struct.ham*), %bb ], [ null, %bb1 ], [ null, %bb3 ]
  %tmp8 = icmp eq %struct.ham* %tmp7, bitcast (i32* getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], [75 x { i32, i32, i32, i8, i8 }]* @global, i64 1, i64 0, i32 0) to %struct.ham*)
  ret i1 %tmp8
}
