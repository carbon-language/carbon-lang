; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=sroa -S | FileCheck %s

source_filename = "tmp.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.n.2 = type { i8 }
%struct.bi = type { %class.as }
%class.as = type { %class.ao }
%class.ao = type { %class.ai }
%class.ai = type { i32, i32 }

define linkonce_odr dso_local void @_ZN2bg2baIiEC2ES_() unnamed_addr align 2 {
; CHECK-LABEL: @_ZN2bg2baIiEC2ES_(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @llvm.assume(i1 true) [ "ignore"(%struct.bi* undef) ]
; CHECK-NEXT:    ret void
;
entry:
  %y = alloca i64, align 8
  store i64 undef, i64* %y, align 8
  %0 = bitcast i64* %y to %struct.n.2*
  %1 = bitcast %struct.n.2* %0 to %struct.bi*
  call void @llvm.assume(i1 true) [ "nonnull"(%struct.bi* %1) ]
  ret void
}

; Function Attrs: nofree norecurse nounwind willreturn
declare void @llvm.assume(i1) #0

attributes #0 = { nofree norecurse nounwind willreturn }
