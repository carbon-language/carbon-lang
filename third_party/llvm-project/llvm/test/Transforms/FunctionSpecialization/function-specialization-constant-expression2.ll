; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -function-specialization -force-function-specialization -S < %s | FileCheck %s

; Check that we don't crash and specialise on a constant expression.

%struct.pluto = type { %struct.spam }
%struct.quux = type { i16 }
%struct.spam = type { i16 }

@global.5 = external dso_local global [4 x %struct.pluto], align 1
@global.12 = external global %struct.quux, align 1

define internal i16 @wobble.972(%struct.quux* byval(%struct.quux) align 1 %arg, i16 %arg1, %struct.spam* byval(%struct.spam) align 1 %arg2, %struct.quux* byval(%struct.quux) align 1 %arg3) #4 {
; CHECK-LABEL: @wobble.972(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP34:%.*]] = bitcast %struct.spam* [[ARG2:%.*]] to i16*
; CHECK-NEXT:    unreachable
;
bb:
  %tmp34 = bitcast %struct.spam* %arg2 to i16*
  unreachable
}

define internal i16 @snork() {
; CHECK-LABEL: @snork(
; CHECK-NEXT:  bb4:
; CHECK-NEXT:    [[TMP:%.*]] = call i16 @wobble.972(%struct.quux* byval([[STRUCT_QUUX:%.*]]) align 1 undef, i16 undef, %struct.spam* byval([[STRUCT_SPAM:%.*]]) align 1 getelementptr inbounds ([4 x %struct.pluto], [4 x %struct.pluto]* @global.5, i32 0, i32 3, i32 0), %struct.quux* byval([[STRUCT_QUUX]]) align 1 @global.12)
; CHECK-NEXT:    unreachable
;
bb4:
  %tmp = call i16 @wobble.972(%struct.quux* byval(%struct.quux) align 1 undef, i16 undef, %struct.spam* byval(%struct.spam) align 1 getelementptr inbounds ([4 x %struct.pluto], [4 x %struct.pluto]* @global.5, i32 0, i32 3, i32 0), %struct.quux* byval(%struct.quux) align 1 @global.12)
  unreachable
}

define i16 @main() {
; CHECK-LABEL: @main(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP:%.*]] = call i16 @snork()
; CHECK-NEXT:    unreachable
;
bb:
  %tmp = call i16 @snork()
  unreachable
}
