# RUN: llvm-mc -arch=amdgcn -mcpu=gfx900 -disassemble -show-encoding < %s | FileCheck %s -check-prefix=GFX9

#===------------------------------------------------------------------------===#
# s_scratch
#===------------------------------------------------------------------------===#

# GFX9: s_scratch_load_dword s5, s[2:3], s101 ; encoding: [0x41,0x01,0x14,0xc0,0x65,0x00,0x00,0x00]
0x41,0x01,0x14,0xc0,0x65,0x00,0x00,0x00

# GFX9: s_scratch_load_dword s5, s[2:3], s0 glc ; encoding: [0x41,0x01,0x15,0xc0,0x00,0x00,0x00,0x00]
0x41,0x01,0x15,0xc0,0x00,0x00,0x00,0x00

# GFX9: s_scratch_load_dwordx2 s[100:101], s[2:3], s0 ; encoding: [0x01,0x19,0x18,0xc0,0x00,0x00,0x00,0x00]
0x01,0x19,0x18,0xc0,0x00,0x00,0x00,0x00

# GFX9: s_scratch_load_dwordx2 s[10:11], s[2:3], 0x1 glc ; encoding: [0x81,0x02,0x1b,0xc0,0x01,0x00,0x00,0x00]
0x81,0x02,0x1b,0xc0,0x01,0x00,0x00,0x00

# GFX9: s_scratch_load_dwordx4 s[20:23], s[4:5], s0 ; encoding: [0x02,0x05,0x1c,0xc0,0x00,0x00,0x00,0x00]
0x02,0x05,0x1c,0xc0,0x00,0x00,0x00,0x00

# GFX9: s_scratch_store_dword s101, s[4:5], s0 ; encoding: [0x42,0x19,0x54,0xc0,0x00,0x00,0x00,0x00]
0x42,0x19,0x54,0xc0,0x00,0x00,0x00,0x00

# GFX9: s_scratch_store_dword s1, s[4:5], 0x123 glc ; encoding: [0x42,0x00,0x57,0xc0,0x23,0x01,0x00,0x00]
0x42,0x00,0x57,0xc0,0x23,0x01,0x00,0x00

# GFX9: s_scratch_store_dwordx2 s[2:3], s[4:5], s101 glc ; encoding: [0x82,0x00,0x59,0xc0,0x65,0x00,0x00,0x00]
0x82,0x00,0x59,0xc0,0x65,0x00,0x00,0x00

# GFX9: s_scratch_store_dwordx4 s[4:7], s[4:5], s0 glc ; encoding: [0x02,0x01,0x5d,0xc0,0x00,0x00,0x00,0x00]
0x02,0x01,0x5d,0xc0,0x00,0x00,0x00,0x00

#===------------------------------------------------------------------------===#
# s_dcache_discard
#===------------------------------------------------------------------------===#

# GFX9: s_dcache_discard s[100:101], s0 ; encoding: [0x32,0x00,0xa0,0xc0,0x00,0x00,0x00,0x00]
0x32,0x00,0xa0,0xc0,0x00,0x00,0x00,0x00

# The SGRP variants can alternatively be encoded with imm=0, soffset_en=1
# and the offset register encoded in the soffset field with the offset
# field being disregarded.
# GFX9: s_dcache_discard s[100:101], s64 ; encoding: [0x32,0x40,0xa0,0xc0,0x00,0x00,0x00,0x80]
0x32,0x40,0xa0,0xc0,0x25,0x00,0x00,0x80

# GFX9: s_dcache_discard s[2:3], 0x0 ; encoding: [0x01,0x00,0xa2,0xc0,0x00,0x00,0x00,0x00]
0x01,0x00,0xa2,0xc0,0x00,0x00,0x00,0x00

# GFX9: s_dcache_discard s[2:3], s2 offset:0x12345 ; encoding: [0x01,0x40,0xa2,0xc0,0x45,0x23,0x01,0x04]
0x01,0x40,0xa2,0xc0,0x45,0x23,0x01,0x04

# GFX9: s_dcache_discard_x2 s[2:3], s101 ; encoding: [0x01,0x00,0xa4,0xc0,0x65,0x00,0x00,0x00]
0x01,0x00,0xa4,0xc0,0x65,0x00,0x00,0x00

# GFX9: s_dcache_discard_x2 s[2:3], 0x0 ; encoding: [0x01,0x00,0xa6,0xc0,0x00,0x00,0x00,0x00]
0x01,0x00,0xa6,0xc0,0x00,0x00,0x00,0x00

# GFX9: s_dcache_discard_x2 s[2:3], s2 offset:0x12345 ; encoding: [0x01,0x40,0xa6,0xc0,0x45,0x23,0x01,0x04]
0x01,0x40,0xa6,0xc0,0x45,0x23,0x01,0x04

#===------------------------------------------------------------------------===#
# s_atomic
#===------------------------------------------------------------------------===#

# GFX9: s_atomic_add s5, s[2:3], s101    ; encoding: [0x41,0x01,0x08,0xc2,0x65,0x00,0x00,0x00]
0x41,0x01,0x08,0xc2,0x65,0x00,0x00,0x00

# The SGRP variants can alternatively be encoded with imm=0, soffset_en=1
# and the offset register encoded in the soffset field with the offset
# field being disregarded.
# GFX9: s_atomic_add s5, s[2:3], s101    ; encoding: [0x41,0x41,0x08,0xc2,0x00,0x00,0x00,0xca]
0x41,0x41,0x08,0xc2,0x2e,0x00,0x00,0xca

# The SGRP variants can alternatively be encoded with imm=0, soffset_en=1
# and the offset register encoded in the soffset field with the offset
# field being disregarded.
# GFX9: s_atomic_add s5, s[2:3], s101 glc ; encoding: [0x41,0x41,0x09,0xc2,0x00,0x00,0x00,0xca]
0x41,0x41,0x09,0xc2,0x2e,0x00,0x00,0xca

# GFX9: s_atomic_add_x2 s[10:11], s[2:3], s101    ; encoding: [0x81,0x02,0x88,0xc2,0x65,0x00,0x00,0x00]
0x81,0x02,0x88,0xc2,0x65,0x00,0x00,0x00

# GFX9: s_atomic_add s5, s[2:3], s7 offset:0x12345 ; encoding: [0x41,0x41,0x0a,0xc2,0x45,0x23,0x01,0x0e]
0x41,0x41,0x0a,0xc2,0x45,0x23,0x01,0x0e

# GFX9: s_atomic_add s5, s[2:3], s7 offset:0x12345 glc ; encoding: [0x41,0x41,0x0b,0xc2,0x45,0x23,0x01,0x0e]
0x41,0x41,0x0b,0xc2,0x45,0x23,0x01,0x0e

# GFX9: s_atomic_and s101, s[2:3], s0    ; encoding: [0x41,0x19,0x20,0xc2,0x00,0x00,0x00,0x00]
0x41,0x19,0x20,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_and_x2 s[12:13], s[2:3], s0    ; encoding: [0x01,0x03,0xa0,0xc2,0x00,0x00,0x00,0x00]
0x01,0x03,0xa0,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_cmpswap s[10:11], s[2:3], s101    ; encoding: [0x81,0x02,0x04,0xc2,0x65,0x00,0x00,0x00]
0x81,0x02,0x04,0xc2,0x65,0x00,0x00,0x00

# GFX9: s_atomic_cmpswap s[10:11], s[2:3], 0x0    ; encoding: [0x81,0x02,0x06,0xc2,0x00,0x00,0x00,0x00]
0x81,0x02,0x06,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_cmpswap s[10:11], s[2:3], s0 glc    ; encoding: [0x81,0x02,0x05,0xc2,0x00,0x00,0x00,0x00]
0x81,0x02,0x05,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_cmpswap_x2 s[20:23], s[2:3], s101    ; encoding: [0x01,0x05,0x84,0xc2,0x65,0x00,0x00,0x00]
0x01,0x05,0x84,0xc2,0x65,0x00,0x00,0x00

# GFX9: s_atomic_cmpswap_x2 s[20:23], s[2:3], 0x0    ; encoding: [0x01,0x05,0x86,0xc2,0x00,0x00,0x00,0x00]
0x01,0x05,0x86,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_cmpswap_x2 s[20:23], s[2:3], s0 glc    ; encoding: [0x01,0x05,0x85,0xc2,0x00,0x00,0x00,0x00]
0x01,0x05,0x85,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_dec s5, s[4:5], s0    ; encoding: [0x42,0x01,0x30,0xc2,0x00,0x00,0x00,0x00]
0x42,0x01,0x30,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_dec_x2 s[100:101], s[2:3], s0    ; encoding: [0x01,0x19,0xb0,0xc2,0x00,0x00,0x00,0x00]
0x01,0x19,0xb0,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_inc s5, s[100:101], s0    ; encoding: [0x72,0x01,0x2c,0xc2,0x00,0x00,0x00,0x00]
0x72,0x01,0x2c,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_inc_x2 s[10:11], s[4:5], s0    ; encoding: [0x82,0x02,0xac,0xc2,0x00,0x00,0x00,0x00]
0x82,0x02,0xac,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_or s5, s[2:3], s101    ; encoding: [0x41,0x01,0x24,0xc2,0x65,0x00,0x00,0x00]
0x41,0x01,0x24,0xc2,0x65,0x00,0x00,0x00

# GFX9: s_atomic_or_x2 s[10:11], s[2:3], s101    ; encoding: [0x81,0x02,0xa4,0xc2,0x65,0x00,0x00,0x00]
0x81,0x02,0xa4,0xc2,0x65,0x00,0x00,0x00

# GFX9: s_atomic_smax s5, s[2:3], 0x0    ; encoding: [0x41,0x01,0x1a,0xc2,0x00,0x00,0x00,0x00]
0x41,0x01,0x1a,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_smax_x2 s[10:11], s[2:3], 0x0    ; encoding: [0x81,0x02,0x9a,0xc2,0x00,0x00,0x00,0x00]
0x81,0x02,0x9a,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_smin s5, s[2:3], s0 glc    ; encoding: [0x41,0x01,0x11,0xc2,0x00,0x00,0x00,0x00]
0x41,0x01,0x11,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_smin_x2 s[10:11], s[2:3], s0 glc    ; encoding: [0x81,0x02,0x91,0xc2,0x00,0x00,0x00,0x00]
0x81,0x02,0x91,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_sub s5, s[2:3], s0    ; encoding: [0x41,0x01,0x0c,0xc2,0x00,0x00,0x00,0x00]
0x41,0x01,0x0c,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_sub_x2 s[10:11], s[2:3], s0    ; encoding: [0x81,0x02,0x8c,0xc2,0x00,0x00,0x00,0x00]
0x81,0x02,0x8c,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_swap s101, s[2:3], s0    ; encoding: [0x41,0x19,0x00,0xc2,0x00,0x00,0x00,0x00]
0x41,0x19,0x00,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_swap_x2 s[12:13], s[2:3], s0    ; encoding: [0x01,0x03,0x80,0xc2,0x00,0x00,0x00,0x00]
0x01,0x03,0x80,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_umax s5, s[4:5], s0    ; encoding: [0x42,0x01,0x1c,0xc2,0x00,0x00,0x00,0x00]
0x42,0x01,0x1c,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_umax_x2 s[100:101], s[2:3], s0    ; encoding: [0x01,0x19,0x9c,0xc2,0x00,0x00,0x00,0x00]
0x01,0x19,0x9c,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_umin s5, s[100:101], s0    ; encoding: [0x72,0x01,0x14,0xc2,0x00,0x00,0x00,0x00]
0x72,0x01,0x14,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_umin_x2 s[10:11], s[4:5], s0    ; encoding: [0x82,0x02,0x94,0xc2,0x00,0x00,0x00,0x00]
0x82,0x02,0x94,0xc2,0x00,0x00,0x00,0x00

# GFX9: s_atomic_xor s5, s[2:3], s101    ; encoding: [0x41,0x01,0x28,0xc2,0x65,0x00,0x00,0x00]
0x41,0x01,0x28,0xc2,0x65,0x00,0x00,0x00

# GFX9: s_atomic_xor_x2 s[10:11], s[2:3], s101    ; encoding: [0x81,0x02,0xa8,0xc2,0x65,0x00,0x00,0x00]
0x81,0x02,0xa8,0xc2,0x65,0x00,0x00,0x00

#===------------------------------------------------------------------------===#
# s_buffer_atomic
#===------------------------------------------------------------------------===#

# GFX9: s_buffer_atomic_add s5, s[4:7], 0x0    ; encoding: [0x42,0x01,0x0a,0xc1,0x00,0x00,0x00,0x00]
0x42,0x01,0x0a,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_add_x2 s[10:11], s[4:7], s0 glc    ; encoding: [0x82,0x02,0x89,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0x89,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_and s5, s[4:7], s0 glc    ; encoding: [0x42,0x01,0x21,0xc1,0x00,0x00,0x00,0x00]
0x42,0x01,0x21,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_and_x2 s[10:11], s[4:7], s0 glc    ; encoding: [0x82,0x02,0xa1,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0xa1,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_cmpswap s[10:11], s[4:7], s101    ; encoding: [0x82,0x02,0x04,0xc1,0x65,0x00,0x00,0x00]
0x82,0x02,0x04,0xc1,0x65,0x00,0x00,0x00

# GFX9: s_buffer_atomic_cmpswap s[10:11], s[4:7], 0x0    ; encoding: [0x82,0x02,0x06,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0x06,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_cmpswap s[10:11], s[4:7], s0 glc    ; encoding: [0x82,0x02,0x05,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0x05,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_cmpswap_x2 s[20:23], s[4:7], s101    ; encoding: [0x02,0x05,0x84,0xc1,0x65,0x00,0x00,0x00]
0x02,0x05,0x84,0xc1,0x65,0x00,0x00,0x00

# GFX9: s_buffer_atomic_cmpswap_x2 s[20:23], s[4:7], 0x0    ; encoding: [0x02,0x05,0x86,0xc1,0x00,0x00,0x00,0x00]
0x02,0x05,0x86,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_cmpswap_x2 s[20:23], s[4:7], s0 glc    ; encoding: [0x02,0x05,0x85,0xc1,0x00,0x00,0x00,0x00]
0x02,0x05,0x85,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_dec s5, s[4:7], s0    ; encoding: [0x42,0x01,0x30,0xc1,0x00,0x00,0x00,0x00]
0x42,0x01,0x30,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_dec_x2 s[10:11], s[4:7], s0    ; encoding: [0x82,0x02,0xb0,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0xb0,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_inc s101, s[4:7], s0    ; encoding: [0x42,0x19,0x2c,0xc1,0x00,0x00,0x00,0x00]
0x42,0x19,0x2c,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_inc_x2 s[12:13], s[4:7], s0    ; encoding: [0x02,0x03,0xac,0xc1,0x00,0x00,0x00,0x00]
0x02,0x03,0xac,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_or s5, s[8:11], s0    ; encoding: [0x44,0x01,0x24,0xc1,0x00,0x00,0x00,0x00]
0x44,0x01,0x24,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_or_x2 s[100:101], s[4:7], s0    ; encoding: [0x02,0x19,0xa4,0xc1,0x00,0x00,0x00,0x00]
0x02,0x19,0xa4,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_smax s5, s[96:99], s0    ; encoding: [0x70,0x01,0x18,0xc1,0x00,0x00,0x00,0x00]
0x70,0x01,0x18,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_smax_x2 s[10:11], s[96:99], s0    ; encoding: [0xb0,0x02,0x98,0xc1,0x00,0x00,0x00,0x00]
0xb0,0x02,0x98,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_smin s5, s[4:7], s101    ; encoding: [0x42,0x01,0x10,0xc1,0x65,0x00,0x00,0x00]
0x42,0x01,0x10,0xc1,0x65,0x00,0x00,0x00

# GFX9: s_buffer_atomic_smin_x2 s[10:11], s[4:7], s101    ; encoding: [0x82,0x02,0x90,0xc1,0x65,0x00,0x00,0x00]
0x82,0x02,0x90,0xc1,0x65,0x00,0x00,0x00

# GFX9: s_buffer_atomic_sub s5, s[4:7], 0x0    ; encoding: [0x42,0x01,0x0e,0xc1,0x00,0x00,0x00,0x00]
0x42,0x01,0x0e,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_sub_x2 s[10:11], s[4:7], 0x0    ; encoding: [0x82,0x02,0x8e,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0x8e,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_swap s5, s[4:7], s0 glc    ; encoding: [0x42,0x01,0x01,0xc1,0x00,0x00,0x00,0x00]
0x42,0x01,0x01,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_swap_x2 s[10:11], s[4:7], s0 glc    ; encoding: [0x82,0x02,0x81,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0x81,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_umax s5, s[4:7], s0    ; encoding: [0x42,0x01,0x1c,0xc1,0x00,0x00,0x00,0x00]
0x42,0x01,0x1c,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_umax_x2 s[10:11], s[4:7], s0    ; encoding: [0x82,0x02,0x9c,0xc1,0x00,0x00,0x00,0x00]
0x82,0x02,0x9c,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_umin s101, s[4:7], s0    ; encoding: [0x42,0x19,0x14,0xc1,0x00,0x00,0x00,0x00]
0x42,0x19,0x14,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_umin_x2 s[12:13], s[4:7], s0    ; encoding: [0x02,0x03,0x94,0xc1,0x00,0x00,0x00,0x00]
0x02,0x03,0x94,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_xor s5, s[8:11], s0    ; encoding: [0x44,0x01,0x28,0xc1,0x00,0x00,0x00,0x00]
0x44,0x01,0x28,0xc1,0x00,0x00,0x00,0x00

# GFX9: s_buffer_atomic_xor_x2 s[100:101], s[4:7], s0    ; encoding: [0x02,0x19,0xa8,0xc1,0x00,0x00,0x00,0x00]
0x02,0x19,0xa8,0xc1,0x00,0x00,0x00,0x00

#===------------------------------------------------------------------------===#
# Unsigned 20-bit offsets
#===------------------------------------------------------------------------===#

# GFX9: s_atc_probe 7, s[4:5], 0xfffff ; encoding: [0xc2,0x01,0x9a,0xc0,0xff,0xff,0x0f,0x00]
0xc2,0x01,0x9a,0xc0,0xff,0xff,0x0f,0x00

# GFX9: s_atc_probe_buffer 1, s[8:11], 0xfffff ; encoding: [0x44,0x00,0x9e,0xc0,0xff,0xff,0x0f,0x00]
0x44,0x00,0x9e,0xc0,0xff,0xff,0x0f,0x00

# GFX9: s_store_dword s1, s[2:3], 0xfffff ; encoding: [0x41,0x00,0x42,0xc0,0xff,0xff,0x0f,0x00]
0x41,0x00,0x42,0xc0,0xff,0xff,0x0f,0x00

# GFX9: s_buffer_store_dword s10, s[92:95], 0xfffff ; encoding: [0xae,0x02,0x62,0xc0,0xff,0xff,0x0f,0x00]
0xae,0x02,0x62,0xc0,0xff,0xff,0x0f,0x00

# GFX9: s_atomic_swap s5, s[2:3], 0xfffff ; encoding: [0x41,0x01,0x02,0xc2,0xff,0xff,0x0f,0x00]
0x41,0x01,0x02,0xc2,0xff,0xff,0x0f,0x00

# GFX9: s_buffer_atomic_swap s5, s[4:7], 0xfffff ; encoding: [0x42,0x01,0x02,0xc1,0xff,0xff,0x0f,0x00]
0x42,0x01,0x02,0xc1,0xff,0xff,0x0f,0x00

#===------------------------------------------------------------------------===#
# Signed 20-bit offsets
#===------------------------------------------------------------------------===#

# GFX9: s_atc_probe 7, s[4:5], -0x1 ; encoding: [0xc2,0x01,0x9a,0xc0,0xff,0xff,0x1f,0x00]
0xc2,0x01,0x9a,0xc0,0xff,0xff,0x1f,0x00

# GFX9: s_store_dword s1, s[2:3], -0x1 ; encoding: [0x41,0x00,0x42,0xc0,0xff,0xff,0x1f,0x00]
0x41,0x00,0x42,0xc0,0xff,0xff,0x1f,0x00

# GFX9: s_load_dword s1, s[2:3], -0x1 ; encoding: [0x41,0x00,0x02,0xc0,0xff,0xff,0x1f,0x00]
0x41,0x00,0x02,0xc0,0xff,0xff,0x1f,0x00

# GFX9: s_atomic_swap s5, s[2:3], -0x1 ; encoding: [0x41,0x01,0x02,0xc2,0xff,0xff,0x1f,0x00]
0x41,0x01,0x02,0xc2,0xff,0xff,0x1f,0x00

# GFX9: s_atc_probe 7, s[4:5], -0x100000 ; encoding: [0xc2,0x01,0x9a,0xc0,0x00,0x00,0x10,0x00]
0xc2,0x01,0x9a,0xc0,0x00,0x00,0x10,0x00

# GFX9: s_store_dword s1, s[2:3], -0x100000 ; encoding: [0x41,0x00,0x42,0xc0,0x00,0x00,0x10,0x00]
0x41,0x00,0x42,0xc0,0x00,0x00,0x10,0x00

# GFX9: s_load_dword s1, s[2:3], -0x100000 ; encoding: [0x41,0x00,0x02,0xc0,0x00,0x00,0x10,0x00]
0x41,0x00,0x02,0xc0,0x00,0x00,0x10,0x00

# GFX9: s_atomic_swap s5, s[2:3], -0x100000 ; encoding: [0x41,0x01,0x02,0xc2,0x00,0x00,0x10,0x00]
0x41,0x01,0x02,0xc2,0x00,0x00,0x10,0x00

#===------------------------------------------------------------------------===#
# Decoding of invalid buffer offsets
#===------------------------------------------------------------------------===#

# GFX9: s_atc_probe_buffer 1, s[8:11], -0x1 ; encoding: [0x44,0x00,0x9e,0xc0,0xff,0xff,0x1f,0x00]
0x44,0x00,0x9e,0xc0,0xff,0xff,0x1f,0x00

#===------------------------------------------------------------------------===#
# Decoding of OFFSET>127 with IMM=0
#===------------------------------------------------------------------------===#

# GFX9: s_atomic_or s5, s[2:3], s15             ; encoding: [0x41,0x01,0x24,0xc2,0x0f,0x00,0x00,0x00]
0x41,0x01,0x24,0xc2,0x8f,0x00,0x00,0x00

# GFX9: s_atomic_or s5, s[2:3], exec_hi         ; encoding: [0x41,0x01,0x24,0xc2,0x7f,0x00,0x00,0x00]
0x41,0x01,0x24,0xc2,0xff,0xff,0x00,0x00

# GFX9: s_atomic_add_x2 s[34:35], exec, s11 glc ; encoding: [0xbf,0x08,0x89,0xc2,0x0b,0x00,0x00,0x00]
0xbf,0x08,0x89,0xc2,0x0b,0x00,0x00,0x00

#===------------------------------------------------------------------------===#
# s_atc_probe
#===------------------------------------------------------------------------===#

# GFX9: s_atc_probe 7, s[4:5], s9               ; encoding: [0xc2,0x01,0x98,0xc0,0x09,0x00,0x00,0x00]
0xc2,0x01,0x98,0xc0,0x09,0x00,0x00,0x00

# The SGRP variants can alternatively be encoded with imm=0, soffset_en=1
# and the offset register encoded in the soffset field with the offset
# field being disregarded.
# GFX9: s_atc_probe 7, s[4:5], s9               ; encoding: [0xc2,0x41,0x98,0xc0,0x00,0x00,0x00,0x12]
0xc2,0x41,0x98,0xc0,0x2e,0x00,0x00,0x12

# GFX9: s_atc_probe 7, s[4:5], s9 offset:0x64   ; encoding: [0xc2,0x41,0x9a,0xc0,0x64,0x00,0x00,0x12]
0xc2,0x41,0x9a,0xc0,0x64,0x00,0x00,0x12

# GFX9: s_atc_probe_buffer 7, s[8:11], s9 offset:0x64 ; encoding: [0xc4,0x41,0x9e,0xc0,0x64,0x00,0x00,0x12]
0xc4,0x41,0x9e,0xc0,0x64,0x00,0x00,0x12
