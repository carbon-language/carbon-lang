# RUN: llvm-mc %s -disassemble -triple=mips-unknown-linux -mcpu=mips64r6 | FileCheck %s
0x00 0x00 0x00 0x0e # CHECK: sdbbp
0x00 0x00 0x00 0x0f # CHECK: sync
0x00 0x00 0x00 0x40 # CHECK: ssnop
0x00 0x00 0x00 0x4f # CHECK: sync 1
0x00 0x00 0x00 0xc0 # CHECK: ehb
0x00 0x00 0x01 0x40 # CHECK: pause
0x00 0x00 0x08 0x8e # CHECK: sdbbp 34
0x00 0x03 0x00 0x34 # CHECK: teq $zero, $3
0x00 0x03 0x10 0x2e # CHECK: dneg $2, $3
0x00 0x03 0x10 0x2f # CHECK: dnegu $2, $3
0x00 0x53 0x21 0x72 # CHECK: tlt $2, $19, 133
0x00 0x64 0x10 0x35 # CHECK: seleqz $2, $3, $4
0x00 0x64 0x10 0x37 # CHECK: selnez $2, $3, $4
0x00 0x64 0x10 0x98 # CHECK: mul $2, $3, $4
0x00 0x64 0x10 0x99 # CHECK: mulu $2, $3, $4
0x00 0x64 0x10 0x9a # CHECK: div $2, $3, $4
0x00 0x64 0x10 0x9b # CHECK: divu $2, $3, $4
0x00 0x64 0x10 0x9c # CHECK: dmul $2, $3, $4
0x00 0x64 0x10 0x9d # CHECK: dmulu $2, $3, $4
0x00 0x64 0x10 0x9e # CHECK: ddiv $2, $3, $4
0x00 0x64 0x10 0x9f # CHECK: ddivu $2, $3, $4
0x00 0x64 0x10 0xc5 # CHECK: lsa $2, $3, $4, 4
0x00 0x64 0x10 0xd5 # CHECK: dlsa $2, $3, $4, 4
0x00 0x64 0x10 0xd8 # CHECK: muh $2, $3, $4
0x00 0x64 0x10 0xd9 # CHECK: muhu $2, $3, $4
0x00 0x64 0x10 0xda # CHECK: mod $2, $3, $4
0x00 0x64 0x10 0xdb # CHECK: modu $2, $3, $4
0x00 0x64 0x10 0xdc # CHECK: dmuh $2, $3, $4
0x00 0x64 0x10 0xdd # CHECK: dmuhu $2, $3, $4
0x00 0x64 0x10 0xde # CHECK: dmod $2, $3, $4
0x00 0x64 0x10 0xdf # CHECK: dmodu $2, $3, $4
0x00 0x80 0x04 0x09 # CHECK: jr.hb $4
0xd8 0x1b 0x00 0x00 # CHECK: jrc $27
0x00 0x80 0xfc 0x09 # CHECK: jalr.hb $4
0x00 0xa0 0x24 0x09 # CHECK: jalr.hb $4, $5
0xf8 0x19 0x00 0x00 # CHECK: jalrc $25
0x00 0xa0 0x58 0x51 # CHECK: clo $11, $5
0x00 0xa7 0x9b 0x34 # CHECK: teq $5, $7, 620
0x00 0xb3 0x55 0x30 # CHECK: tge $5, $19, 340
0x00 0xc0 0x90 0x53 # CHECK: dclo $18, $6
0x00 0xd1 0x00 0x36 # CHECK: tne $6, $17
0x00 0xe8 0xdd 0x76 # CHECK: tne $7, $8, 885
0x00 0xea 0x00 0x30 # CHECK: tge $7, $10
0x01 0x70 0x00 0x33 # CHECK: tltu $11, $16
0x01 0xed 0x00 0x32 # CHECK: tlt $15, $13
0x02 0x1d 0xfe 0x33 # CHECK: tltu $16, $sp, 1016
0x02 0x8e 0x5e 0xf1 # CHECK: tgeu $20, $14, 379
0x02 0xdc 0x00 0x31 # CHECK: tgeu $22, $gp
0x03 0x20 0x80 0x52 # CHECK: dclz $16, $25
0x03 0x80 0xe8 0x50 # CHECK: clz $sp, $gp
0x03 0xe0 0x78 0x25 # CHECK: move $15, $ra
0x03 0xe0 0x78 0x2d # CHECK: move $15, $ra
0x04 0x11 0x14 0x9b # CHECK: bal 21104
0x04 0x66 0x56 0x78 # CHECK: dahi $3, $3, 22136
0x04 0x7e 0xab 0xcd # CHECK: dati $3, $3, 43981
# The encode/decode functions are not inverses of each other in the immediate case.
0x18 0x02 0x01 0x4d # CHECK: blezalc $2, 1336
0x18 0x02 0xff 0xfa # CHECk: blezalc $2, -20
# The encode/decode functions are not inverses of each other in the immediate case.
0x18 0x42 0x01 0x4d # CHECK: bgezalc $2, 1336
0x18 0x42 0xff 0xfa # CHECK: bgezalc $2, -20
0x18 0x43 0x00 0x40 # CHECK: bgeuc $2, $3, 260
0x18 0x43 0xff 0xfa # CHECK: bgeuc $2, $3, -20
# The encode/decode functions are not inverses of each other in the immediate case.
0x1c 0x02 0x01 0x4d # CHECK: bgtzalc $2, 1336
0x1c 0x02 0xff 0xfa # CHECK: bgtzalc $2, -20
# The encode/decode functions are not inverses of each other in the immediate case.
0x1c 0x42 0x01 0x4d # CHECK: bltzalc $2, 1336
0x1c 0x42 0xff 0xfa # CHECK: bltzalc $2, -20
0x1c 0xa6 0x00 0x40 # CHECK: bltuc $5, $6, 260
0x1c 0xa6 0xff 0xfa # CHECK: bltuc $5, $6, -20
0x20 0x00 0x00 0x01 # CHECK: bovc $zero, $zero, 8
# The encode/decode functions are not inverses of each other in the immediate case.
0x20 0x02 0x01 0x4d # CHECK: beqzalc $2, 1336
0x20 0x40 0x00 0x01 # CHECK: bovc $2, $zero, 8
0x20 0x82 0x00 0x01 # CHECK: bovc $4, $2, 8
0x20 0xa6 0x00 0x40 # CHECK: beqc $5, $6, 260
0x25 0x29 0x00 0x0a # CHECK: addiu $9, $9, 10
0x30 0x42 0x00 0x04 # CHECK: andi $2, $2, 4
0x34 0x42 0x00 0x04 # CHECK: ori $2, $2, 4
0x3c 0x43 0xff 0xe9 # CHECK: aui $3, $2, 65513
0x40 0x08 0x78 0x01 # CHECK: mfc0 $8, $15, 1
0x40 0x08 0x80 0x03 # CHECK: mfc0 $8, $16, 3
0x40 0x38 0x50 0x00 # CHECK: dmfc0 $24, $10, 0
0x40 0x89 0x78 0x01 # CHECK: mtc0 $9, $15, 1
0x40 0xa4 0x50 0x00 # CHECK: dmtc0 $4, $10, 0
0x41 0x60 0x00 0x24 # CHECK: dvp $zero
0x41 0x60 0x00 0x04 # CHECK: evp $zero
0x41 0x60 0x60 0x00 # CHECK: di
0x41 0x60 0x60 0x20 # CHECK: ei
0x41 0x6e 0x60 0x20 # CHECK: ei $14
0x41 0x70 0x00 0x04 # CHECK: evp $16
0x41 0x71 0x00 0x24 # CHECK: dvp $17
0x41 0x7e 0x60 0x00 # CHECK: di $fp
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 4 but the disassembler currently emits 8
0x45 0x20 0x00 0x01 # CHECK: bc1eqz $f0, 8
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 4 but the disassembler currently emits 8
0x45 0x3f 0x00 0x01 # CHECK: bc1eqz $f31, 8
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 4 but the disassembler currently emits 8
0x45 0xa0 0x00 0x01 # CHECK: bc1nez $f0, 8
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 4 but the disassembler currently emits 8
0x45 0xbf 0x00 0x01 # CHECK: bc1nez $f31, 8
0x46 0x00 0x20 0x9a # CHECK: rint.s $f2, $f4
0x46 0x00 0x20 0x9b # CHECK: class.s $f2, $f4
0x46 0x02 0x08 0x10 # CHECK: sel.s $f0, $f1, $f2
0x46 0x04 0x10 0x14 # CHECK: seleqz.s $f0, $f2, $f4
0x46 0x04 0x10 0x17 # CHECK: selnez.s $f0, $f2, $f4
0x46 0x04 0x10 0x1c # CHECK: min.s $f0, $f2, $f4
0x46 0x04 0x10 0x1d # CHECK: max.s $f0, $f2, $f4
0x46 0x04 0x10 0x1e # CHECK: mina.s $f0, $f2, $f4
0x46 0x04 0x10 0x1f # CHECK: maxa.s $f0, $f2, $f4
0x46 0x04 0x18 0x98 # CHECK: maddf.s $f2, $f3, $f4
0x46 0x04 0x18 0x99 # CHECK: msubf.s $f2, $f3, $f4
0x46 0x20 0x20 0x9a # CHECK: rint.d $f2, $f4
0x46 0x20 0x20 0x9b # CHECK: class.d $f2, $f4
0x46 0x22 0x08 0x10 # CHECK: sel.d $f0, $f1, $f2
0x46 0x24 0x10 0x14 # CHECK: seleqz.d $f0, $f2, $f4
0x46 0x24 0x10 0x17 # CHECK: selnez.d $f0, $f2, $f4
0x46 0x24 0x10 0x1c # CHECK: min.d $f0, $f2, $f4
0x46 0x24 0x10 0x1d # CHECK: max.d $f0, $f2, $f4
0x46 0x24 0x10 0x1e # CHECK: mina.d $f0, $f2, $f4
0x46 0x24 0x10 0x1f # CHECK: maxa.d $f0, $f2, $f4
0x46 0x24 0x18 0x98 # CHECK: maddf.d $f2, $f3, $f4
0x46 0x24 0x18 0x99 # CHECK: msubf.d $f2, $f3, $f4
0x46 0x84 0x18 0x80 # CHECK: cmp.af.s $f2, $f3, $f4
0x46 0x84 0x18 0x81 # CHECK: cmp.un.s $f2, $f3, $f4
0x46 0x84 0x18 0x82 # CHECK: cmp.eq.s $f2, $f3, $f4
0x46 0x84 0x18 0x83 # CHECK: cmp.ueq.s $f2, $f3, $f4
0x46 0x84 0x18 0x84 # CHECK: cmp.lt.s $f2, $f3, $f4
0x46 0x84 0x18 0x85 # CHECK: cmp.ult.s $f2, $f3, $f4
0x46 0x84 0x18 0x86 # CHECK: cmp.le.s $f2, $f3, $f4
0x46 0x84 0x18 0x87 # CHECK: cmp.ule.s $f2, $f3, $f4
0x46 0x84 0x18 0x88 # CHECK: cmp.saf.s $f2, $f3, $f4
0x46 0x84 0x18 0x89 # CHECK: cmp.sun.s $f2, $f3, $f4
0x46 0x84 0x18 0x8a # CHECK: cmp.seq.s $f2, $f3, $f4
0x46 0x84 0x18 0x8b # CHECK: cmp.sueq.s $f2, $f3, $f4
0x46 0x84 0x18 0x8c # CHECK: cmp.slt.s $f2, $f3, $f4
0x46 0x84 0x18 0x8d # CHECK: cmp.sult.s $f2, $f3, $f4
0x46 0x84 0x18 0x8e # CHECK: cmp.sle.s $f2, $f3, $f4
0x46 0x84 0x18 0x8f # CHECK: cmp.sule.s $f2, $f3, $f4
0x46 0xa4 0x18 0x80 # CHECK: cmp.af.d $f2, $f3, $f4
0x46 0xa4 0x18 0x81 # CHECK: cmp.un.d $f2, $f3, $f4
0x46 0xa4 0x18 0x82 # CHECK: cmp.eq.d $f2, $f3, $f4
0x46 0xa4 0x18 0x83 # CHECK: cmp.ueq.d $f2, $f3, $f4
0x46 0xa4 0x18 0x84 # CHECK: cmp.lt.d $f2, $f3, $f4
0x46 0xa4 0x18 0x85 # CHECK: cmp.ult.d $f2, $f3, $f4
0x46 0xa4 0x18 0x86 # CHECK: cmp.le.d $f2, $f3, $f4
0x46 0xa4 0x18 0x87 # CHECK: cmp.ule.d $f2, $f3, $f4
0x46 0xa4 0x18 0x88 # CHECK: cmp.saf.d $f2, $f3, $f4
0x46 0xa4 0x18 0x89 # CHECK: cmp.sun.d $f2, $f3, $f4
0x46 0xa4 0x18 0x8a # CHECK: cmp.seq.d $f2, $f3, $f4
0x46 0xa4 0x18 0x8b # CHECK: cmp.sueq.d $f2, $f3, $f4
0x46 0xa4 0x18 0x8c # CHECK: cmp.slt.d $f2, $f3, $f4
0x46 0xa4 0x18 0x8d # CHECK: cmp.sult.d $f2, $f3, $f4
0x46 0xa4 0x18 0x8e # CHECK: cmp.sle.d $f2, $f3, $f4
0x46 0xa4 0x18 0x8f # CHECK: cmp.sule.d $f2, $f3, $f4
0x46 0x20 0x34 0x95 # CHECK: recip.d $f18, $f6
0x46 0x00 0xf0 0xd5 # CHECK: recip.s $f3, $f30
0x46 0x20 0xe0 0x96 # CHECK: rsqrt.d $f2, $f28
0x46 0x00 0x41 0x16 # CHECK: rsqrt.s $f4, $f8
0x42 0x00 0x00 0x58 # CHECK: eretnc
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 8 but the disassembler currently emits 12
0x49 0x20 0x00 0x02 # CHECK: bc2eqz $0, 12
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 8 but the disassembler currently emits 12
0x49 0x3f 0x00 0x02 # CHECK: bc2eqz $31, 12
0x49 0x52 0x34 0xb7 # CHECK: lwc2 $18, -841($6)
0x49 0x79 0x81 0x30 # CHECK: swc2 $25, 304($16)
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 8 but the disassembler currently emits 12
0x49 0xa0 0x00 0x02 # CHECK: bc2nez $0, 12
# FIXME: The encode/decode functions are not inverses of each other.
#        The immediate should be 8 but the disassembler currently emits 12
0x49 0xbf 0x00 0x02 # CHECK: bc2nez $31, 12
0x49 0xc8 0x0d 0x43 # CHECK: ldc2 $8, -701($1)
0x49 0xf4 0x92 0x75 # CHECK: sdc2 $20, 629($18)
0x58 0x05 0x00 0x40 # CHECK: blezc $5, 260
0x58 0x05 0xff 0xfa # CHECk: blezc $5, -20
0x58 0x43 0x00 0x40 # CHECK: bgec $2, $3, 260
0x58 0x43 0xff 0xfa # CHECK: bgec $2, $3, -20
0x58 0xa5 0x00 0x40 # CHECK: bgezc $5, 260
0x58 0xa5 0xff 0xfa # CHECK: bgezc $5, -20
0x5c 0x05 0x00 0x40 # CHECK: bgtzc $5, 260
0x5c 0x05 0xff 0xfa # CHECk: bgtzc $5, -20
0x5c 0xa5 0x00 0x40 # CHECK: bltzc $5, 260
0x5c 0xa5 0xff 0xfa # CHECK: bltzc $5, -20
0x5c 0xa6 0x00 0x40 # CHECK: bltc $5, $6, 260
0x5c 0xa6 0xff 0xfa # CHECK: bltc $5, $6, -20
0x60 0x00 0x00 0x01 # CHECK: bnvc $zero, $zero, 8 
# The encode/decode functions are not inverses of each other in the immediate case.
0x60 0x02 0x01 0x4d # CHECK: bnezalc $2, 1336
0x60 0x40 0x00 0x01 # CHECK: bnvc $2, $zero, 8
0x60 0x82 0x00 0x01 # CHECK: bnvc $4, $2, 8
0x60 0xa6 0x00 0x40 # CHECK: bnec $5, $6, 260
0x60 0x43 0xff 0xfa # CHECK: bnec $2, $3, -20
0x74 0x43 0x12 0x34 # CHECK: daui $3, $2, 4660
0x7c 0x02 0x20 0x20 # CHECK: bitswap $4, $2
0x7c 0x02 0x20 0x24 # CHECK: dbitswap $4, $2
0x7c 0x43 0x22 0xa0 # CHECK: align $4, $2, $3, 2
0x7c 0x43 0x23 0x64 # CHECK: dalign $4, $2, $3, 5
0x7c 0xa1 0x04 0x25 # CHECK: cache 1, 8($5)
0x7c 0xa1 0x04 0x35 # CHECK: pref 1, 8($5)
0x7e 0x42 0xb3 0xb6 # CHECK: ll $2, -153($18)
0x7e 0x6f 0xec 0x26 # CHECK: sc $15, -40($19)
0x7f 0xaf 0xe6 0xa7 # CHECK: scd $15, -51($sp)
0x7f 0xe0 0x38 0x37 # CHECK: lld $zero, 112($ra)
0xc8 0x37 0x96 0xb8 # CHECK: bc 14572260
0xd8 0x05 0x01 0x00 # CHECK: jic $5, 256
0xd8 0xa0 0x46 0x90 # CHECK: beqzc $5, 72260
0xd8 0x5f 0xff 0xfa # CHECK: beqzc $2, -20
0xe8 0x37 0x96 0xb8 # CHECK: balc 14572260
0xec 0x48 0x00 0x43 # CHECK: lwpc $2, 268
0xec 0x50 0x00 0x43 # CHECK: lwupc $2, 268
0xec 0x58 0x3c 0x48 # CHECK: ldpc $2, 123456
0xec 0x7e 0xff 0xff # CHECK: auipc $3, -1
0xec 0x7f 0x00 0x38 # CHECK: aluipc $3, 56
0xec 0x80 0x00 0x19 # CHECK: lapc $4, 100
0xf8 0x05 0x01 0x00 # CHECK: jialc $5, 256
0xf8 0xa0 0x46 0x90 # CHECK: bnezc $5, 72260
0xf8 0x5f 0xff 0xfa # CHECK: bnezc $2, -20
0x04 0x17 0x00 0x05 # CHECK: sigrie 5
