# RUN: llc -o - %s -mtriple=aarch64-- -mattr=+arith-bcc-fusion -run-pass postmisched | FileCheck %s --check-prefixes=CHECK,FUSION
# RUN: llc -o - %s -mtriple=aarch64-- -mattr=-arith-bcc-fusion -run-pass postmisched | FileCheck %s --check-prefixes=CHECK,NOFUSION
# Make sure the last instruction is correctly macro-fused when scheduling
# top-down (post-ra).
---
# CHECK-LABEL: name: fuse_last
# CHECK: $x1 = LDRXui $x0, 0
# NOFUSION: $xzr = SUBSXri killed $x2, 0, 0, implicit-def $nzcv
# CHECK: STRXui killed $x0, killed $x1, 0
# FUSION: $xzr = SUBSXri killed $x2, 0, 0, implicit-def $nzcv
# CHECK: Bcc 1, %bb.1, implicit killed $nzcv
name: fuse_last
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $x0, $x2

    $x1 = LDRXui $x0, 0
    ; There is latency between these two instructions tempting the scheduler to
    ; move the SUBSXri in between them. However doing so breaks macro fusion.
    STRXui $x0, $x1, 0

    $xzr = SUBSXri $x2, 0, 0, implicit-def $nzcv
    Bcc 1, %bb.1, implicit killed $nzcv

  bb.1:
    RET_ReallyLR implicit undef $x0
...
