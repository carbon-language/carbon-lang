# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -o - -mtriple=aarch64-unknown-unknown -run-pass=aarch64-prelegalizer-combiner -verify-machineinstrs  %s | FileCheck %s
---
name:            test_combine_trunc_undef
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_combine_trunc_undef
    ; CHECK: [[DEF:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; CHECK: $w0 = COPY [[DEF]](s32)
    %0:_(s64) = G_IMPLICIT_DEF
    %1:_(s32) = G_TRUNC %0(s64)
    $w0 = COPY %1(s32)
...
---
name:            test_combine_trunc_undef_vec
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_combine_trunc_undef_vec
    ; CHECK: [[DEF:%[0-9]+]]:_(<2 x s32>) = G_IMPLICIT_DEF
    ; CHECK: $x0 = COPY [[DEF]](<2 x s32>)
    %0:_(<2 x s64>) = G_IMPLICIT_DEF
    %1:_(<2 x s32>) = G_TRUNC %0(<2 x s64>)
    $x0 = COPY %1(<2 x s32>)
...
---
name:            test_combine_trunc_anyext_s32_s16
body:             |
  bb.1:
  liveins: $h0
    ; CHECK-LABEL: name: test_combine_trunc_anyext_s32_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $h0
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[COPY]](s16)
    ; CHECK: $w0 = COPY [[ANYEXT]](s32)
    %0:_(s16) = COPY $h0
    %1:_(s64) = G_ANYEXT %0(s16)
    %2:_(s32) = G_TRUNC %1(s64)
    $w0 = COPY %2(s32)
...
---
name:            test_combine_trunc_anyext_s32_s16_vec
body:             |
  bb.1:
  liveins: $s0
    ; CHECK-LABEL: name: test_combine_trunc_anyext_s32_s16_vec
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $s0
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(<2 x s32>) = G_ANYEXT [[COPY]](<2 x s16>)
    ; CHECK: $x0 = COPY [[ANYEXT]](<2 x s32>)
    %0:_(<2 x s16>) = COPY $s0
    %1:_(<2 x s64>) = G_ANYEXT %0(<2 x s16>)
    %2:_(<2 x s32>) = G_TRUNC %1(<2 x s64>)
    $x0 = COPY %2(<2 x s32>)
...
---
name:            test_combine_trunc_sext_s32_s16
body:             |
  bb.1:
  liveins: $h0
    ; CHECK-LABEL: name: test_combine_trunc_sext_s32_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $h0
    ; CHECK: [[SEXT:%[0-9]+]]:_(s32) = G_SEXT [[COPY]](s16)
    ; CHECK: $w0 = COPY [[SEXT]](s32)
    %0:_(s16) = COPY $h0
    %1:_(s64) = G_SEXT %0(s16)
    %2:_(s32) = G_TRUNC %1(s64)
    $w0 = COPY %2(s32)
...
---
name:            test_combine_trunc_zext_s32_s16
body:             |
  bb.1:
  liveins: $h0
    ; CHECK-LABEL: name: test_combine_trunc_zext_s32_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s16) = COPY $h0
    ; CHECK: [[ZEXT:%[0-9]+]]:_(s32) = G_ZEXT [[COPY]](s16)
    ; CHECK: $w0 = COPY [[ZEXT]](s32)
    %0:_(s16) = COPY $h0
    %1:_(s64) = G_ZEXT %0(s16)
    %2:_(s32) = G_TRUNC %1(s64)
    $w0 = COPY %2(s32)
...
---
name:            test_combine_trunc_anyext_s32_s32
body:             |
  bb.1:
  liveins: $w0
    ; CHECK-LABEL: name: test_combine_trunc_anyext_s32_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $w0
    ; CHECK: $w0 = COPY [[COPY]](s32)
    %0:_(s32) = COPY $w0
    %1:_(s64) = G_ANYEXT %0(s32)
    %2:_(s32) = G_TRUNC %1(s64)
    $w0 = COPY %2(s32)
...
---
name:            test_combine_trunc_anyext_s32_s64
body:             |
  bb.1:
  liveins: $x0
    ; CHECK-LABEL: name: test_combine_trunc_anyext_s32_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC]](s32)
    %0:_(s64) = COPY $x0
    %1:_(s128) = G_ANYEXT %0(s64)
    %2:_(s32) = G_TRUNC %1(s128)
    $w0 = COPY %2(s32)
...
---
name:            test_combine_trunc_shl_s32_by_2
body:             |
  bb.1:
  liveins: $w0
    ; CHECK-LABEL: name: test_combine_trunc_shl_s32_by_2
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $w0
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; CHECK: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s32)
    ; CHECK: $h0 = COPY [[SHL]](s16)
    %0:_(s32) = COPY $w0
    %1:_(s32) = G_CONSTANT i32 2
    %2:_(s32) = G_SHL %0(s32), %1(s32)
    %3:_(s16) = G_TRUNC %2(s32)
    $h0 = COPY %3(s16)
...
---
name:            test_combine_trunc_shl_s32_by_17
body:             |
  bb.1:
  liveins: $w0
    ; CHECK-LABEL: name: test_combine_trunc_shl_s32_by_17
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $w0
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 17
    ; CHECK: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[SHL]](s32)
    ; CHECK: $h0 = COPY [[TRUNC]](s16)
    %0:_(s32) = COPY $w0
    %1:_(s32) = G_CONSTANT i32 17
    %2:_(s32) = G_SHL %0(s32), %1(s32)
    %3:_(s16) = G_TRUNC %2(s32)
    $h0 = COPY %3(s16)
...
