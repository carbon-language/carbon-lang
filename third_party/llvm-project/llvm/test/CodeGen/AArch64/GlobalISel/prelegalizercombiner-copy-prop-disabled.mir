# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -run-pass=aarch64-prelegalizer-combiner -global-isel -verify-machineinstrs %s -o - \
# RUN:                                                                | FileCheck --check-prefix=ENABLED %s
# RUN: llc -run-pass=aarch64-prelegalizer-combiner -global-isel -verify-machineinstrs %s -o - \
# RUN:     --aarch64prelegalizercombinerhelper-disable-rule=copy_prop | FileCheck --check-prefix=DISABLED %s
# RUN: llc -run-pass=aarch64-prelegalizer-combiner -global-isel -verify-machineinstrs %s -o - \
# RUN:     --aarch64prelegalizercombinerhelper-disable-rule="*" | FileCheck --check-prefix=DISABLED %s
# RUN: llc -run-pass=aarch64-prelegalizer-combiner -global-isel -verify-machineinstrs %s -o - \
# RUN:     --aarch64prelegalizercombinerhelper-disable-rule="*,!copy_prop" \
# RUN:    | FileCheck --check-prefix=ENABLED %s
# RUN: llc -run-pass=aarch64-prelegalizer-combiner -global-isel -verify-machineinstrs %s -o - \
# RUN:     --aarch64prelegalizercombinerhelper-only-enable-rule="copy_prop" \
# RUN:    | FileCheck --check-prefix=ENABLED %s

# REQUIRES: asserts

--- |
  target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
  target triple = "aarch64--"
  define void @test_copy(i8* %addr) {
  entry:
    ret void
  }
...

---
name:            test_copy
body: |
  bb.0.entry:
    liveins: $x0
    ; ENABLED-LABEL: name: test_copy
    ; ENABLED: [[COPY:%[0-9]+]]:_(p0) = COPY $x0
    ; ENABLED: $x0 = COPY [[COPY]](p0)
    ; DISABLED-LABEL: name: test_copy
    ; DISABLED: [[COPY:%[0-9]+]]:_(p0) = COPY $x0
    ; DISABLED: [[COPY1:%[0-9]+]]:_(p0) = COPY [[COPY]](p0)
    ; DISABLED: [[COPY2:%[0-9]+]]:_(p0) = COPY [[COPY1]](p0)
    ; DISABLED: $x0 = COPY [[COPY2]](p0)
    %0:_(p0) = COPY $x0
    %1:_(p0) = COPY %0
    %2:_(p0) = COPY %1
    $x0 = COPY %2
...
