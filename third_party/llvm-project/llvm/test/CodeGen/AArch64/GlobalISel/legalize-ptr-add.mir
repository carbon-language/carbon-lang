# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -march=aarch64 -run-pass=legalizer %s -o - | FileCheck %s
---
name:            test_ptr_add_small
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_ptr_add_small
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $x0
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY $x1
    ; CHECK: [[SEXT_INREG:%[0-9]+]]:_(s64) = G_SEXT_INREG [[COPY1]], 8
    ; CHECK: [[PTR_ADD:%[0-9]+]]:_(p0) = G_PTR_ADD [[COPY]], [[SEXT_INREG]](s64)
    ; CHECK: $x0 = COPY [[PTR_ADD]](p0)
    %0:_(p0) = COPY $x0
    %1:_(s64) = COPY $x1
    %2:_(s8) = G_TRUNC %1(s64)
    %3:_(p0) = G_PTR_ADD %0, %2(s8)
    $x0 = COPY %3(p0)

...
---
name:            test_ptr_add_vec_p0
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_ptr_add_vec_p0
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x p0>) = COPY $q0
    ; CHECK: [[COPY1:%[0-9]+]]:_(<2 x s64>) = COPY $q1
    ; CHECK: [[PTR_ADD:%[0-9]+]]:_(<2 x p0>) = G_PTR_ADD [[COPY]], [[COPY1]](<2 x s64>)
    ; CHECK: $q0 = COPY [[PTR_ADD]](<2 x p0>)
    %0:_(<2 x p0>) = COPY $q0
    %1:_(<2 x s64>) = COPY $q1
    %3:_(<2 x p0>) = G_PTR_ADD %0, %1(<2 x s64>)
    $q0 = COPY %3(<2 x p0>)

...
