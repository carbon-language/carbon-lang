# RUN: llc -o - %s -mtriple=aarch64-windows -start-before=prologepilog \
# RUN:   -stop-after=prologepilog | FileCheck %s
# Check save_fregp_x, save_fregp

# CHECK:         early-clobber $sp = frame-setup STPXpre killed $x19, killed $x20, $sp, -14
# CHECK-NEXT:    frame-setup SEH_SaveRegP_X 19, 20, -112
# CHECK-NEXT:    frame-setup STPXi killed $x21, killed $x22, $sp, 2
# CHECK-NEXT:    frame-setup SEH_SaveRegP 21, 22, 16
# CHECK-NEXT:    frame-setup STPXi killed $x23, killed $x24, $sp, 4
# CHECK-NEXT:    frame-setup SEH_SaveRegP 23, 24, 32
# CHECK-NEXT:    frame-setup STPXi killed $x25, killed $x26, $sp, 6
# CHECK-NEXT:    frame-setup SEH_SaveRegP 25, 26, 48
# CHECK-NEXT:    frame-setup STPXi killed $x27, killed $x28, $sp, 8
# CHECK-NEXT:    frame-setup SEH_SaveRegP 27, 28, 64
# CHECK-NEXT:    frame-setup STPDi killed $d8, killed $d9, $sp, 10
# CHECK-NEXT:    frame-setup SEH_SaveFRegP 8, 9, 80
# CHECK-NEXT:    frame-setup STPDi killed $d10, killed $d11, $sp, 12
# CHECK-NEXT:    frame-setup SEH_SaveFRegP 10, 11, 96
# CHECK-NEXT:    frame-setup SEH_PrologEnd
# CHECK:         frame-destroy SEH_EpilogStart
# CHECK-NEXT:    $d10, $d11 = frame-destroy LDPDi $sp, 12
# CHECK-NEXT:    frame-destroy SEH_SaveFRegP 10, 11, 96
# CHECK-NEXT:    $d8, $d9 = frame-destroy LDPDi $sp, 10
# CHECK-NEXT:    frame-destroy SEH_SaveFRegP 8, 9, 80
# CHECK-NEXT:    $x27, $x28 = frame-destroy LDPXi $sp, 8
# CHECK-NEXT:    frame-destroy SEH_SaveRegP 27, 28, 64
# CHECK-NEXT:    $x25, $x26 = frame-destroy LDPXi $sp, 6
# CHECK-NEXT:    frame-destroy SEH_SaveRegP 25, 26, 48
# CHECK-NEXT:    $x23, $x24 = frame-destroy LDPXi $sp, 4
# CHECK-NEXT:    frame-destroy SEH_SaveRegP 23, 24, 32
# CHECK-NEXT:    $x21, $x22 = frame-destroy LDPXi $sp, 2
# CHECK-NEXT:    frame-destroy SEH_SaveRegP 21, 22, 16
# CHECK-NEXT:    early-clobber $sp, $x19, $x20 = frame-destroy LDPXpost $sp, 14
# CHECK-NEXT:    frame-destroy SEH_SaveRegP_X 19, 20, -112
# CHECK-NEXT:    frame-destroy SEH_EpilogEnd
# CHECK-NEXT:    RET_ReallyLR implicit $x0
...
---
name:            test
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       true
registers:
liveins:
  - { reg: '$w0', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       112
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: true
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:
stack:
constants:
body:             |
  bb.0.entry:
    liveins: $x0, $x1, $d0, $d1, $d10, $d11, $d8, $d9, $x27, $x28, $x25, $x26, $x23, $x24, $x21, $x22, $x19, $x20

    $x19 = ADDXrr $x0, killed $x1
    $d8 = FADDDrr killed $d0, $d1
    $d9 = FADDDrr $d8, $d1
    $d10 = FADDDrr $d9, $d8
    $d11 = FADDDrr killed $d9, $d10
    $x20 = ADDXrr $x19, killed $x0
    $x21 = ADDXrr $x20, killed $x19
    $x22 = ADDXrr $x21, killed $x20
    $x23 = ADDXrr $x22, killed $x21
    $x24 = ADDXrr $x23, killed $x22
    $x25 = ADDXrr $x24, killed $x23
    $x26 = ADDXrr $x25, killed $x24
    $x27 = ADDXrr $x26, killed $x25
    $x28 = ADDXrr $x27, killed $x26
    $x0 = COPY $d11
    $x0 = ADDXrr $x0, killed $x28
    RET_ReallyLR implicit $x0

...
