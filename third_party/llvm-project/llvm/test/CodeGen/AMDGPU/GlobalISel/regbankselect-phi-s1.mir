# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -march=amdgcn -mcpu=fiji -run-pass=regbankselect -regbankselect-fast -verify-machineinstrs -o - %s | FileCheck -check-prefix=FAST %s
# RUN: llc -march=amdgcn -mcpu=fiji -run-pass=regbankselect -regbankselect-greedy -verify-machineinstrs -o - %s | FileCheck -check-prefix=GREEDY %s

---
name: phi_s1_scc_scc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_scc_scc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; FAST:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_scc_scc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; GREEDY:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $sgpr0, $sgpr1, $sgpr2

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $sgpr1
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_scc_scc_scc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_scc_scc_scc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.3(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[COPY3:%[0-9]+]]:sgpr(s32) = COPY $sgpr3
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[COPY3]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.3
  ; FAST:   G_BR %bb.1
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x40000000), %bb.3(0x40000000)
  ; FAST:   [[C1:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 99
  ; FAST:   [[C2:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 888
  ; FAST:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C1]]
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; FAST:   [[ICMP3:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C2]]
  ; FAST:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP3]](s32)
  ; FAST:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BRCOND [[ZEXT1]](s32), %bb.3
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   successors: %bb.3(0x80000000)
  ; FAST:   [[C3:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 123
  ; FAST:   [[ICMP4:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C3]]
  ; FAST:   [[TRUNC4:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP4]](s32)
  ; FAST:   [[ANYEXT2:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC4]](s1)
  ; FAST:   G_BR %bb.3
  ; FAST: bb.3:
  ; FAST:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1, [[ANYEXT2]](s32), %bb.2
  ; FAST:   [[TRUNC5:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[ZEXT2:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC5]](s1)
  ; FAST:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT2]](s32), [[COPY]], [[COPY1]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_scc_scc_scc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.3(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[COPY3:%[0-9]+]]:sgpr(s32) = COPY $sgpr3
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[COPY3]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.3
  ; GREEDY:   G_BR %bb.1
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x40000000), %bb.3(0x40000000)
  ; GREEDY:   [[C1:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 99
  ; GREEDY:   [[C2:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 888
  ; GREEDY:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C1]]
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; GREEDY:   [[ICMP3:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C2]]
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP3]](s32)
  ; GREEDY:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT1]](s32), %bb.3
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   successors: %bb.3(0x80000000)
  ; GREEDY:   [[C3:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 123
  ; GREEDY:   [[ICMP4:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C3]]
  ; GREEDY:   [[TRUNC4:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP4]](s32)
  ; GREEDY:   [[ANYEXT2:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC4]](s1)
  ; GREEDY:   G_BR %bb.3
  ; GREEDY: bb.3:
  ; GREEDY:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1, [[ANYEXT2]](s32), %bb.2
  ; GREEDY:   [[TRUNC5:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[ZEXT2:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC5]](s1)
  ; GREEDY:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT2]](s32), [[COPY]], [[COPY1]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.3
    liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $sgpr1
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = COPY $sgpr3
    %4:_(s32) = G_CONSTANT i32 0
    %5:_(s1) = G_ICMP intpred(eq), %0, %3
    %6:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %6, %bb.3
    G_BR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %7:_(s32) = G_CONSTANT i32 99
    %8:_(s32) = G_CONSTANT i32 888
    %9:_(s1) = G_ICMP intpred(eq), %1, %7
    %10:_(s1) = G_ICMP intpred(eq), %1, %8
    G_BRCOND %10, %bb.3
    G_BR %bb.2

  bb.2:
    successors: %bb.3

    %11:_(s32) = G_CONSTANT i32 123
    %12:_(s1) = G_ICMP intpred(eq), %2, %11
    G_BR %bb.3

  bb.3:
    %13:_(s1) = G_PHI %5, %bb.0, %9, %bb.1, %12, %bb.2
    %14:_(s32) = G_SELECT %13, %0, %1
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %14

...

---
name: phi_s1_scc_vcc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_scc_vcc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $vgpr0
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP2:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY4]]
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[COPY3]](s1), %bb.0, [[ICMP2]](s1), %bb.1
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_scc_vcc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $vgpr0
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP2:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY4]]
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[COPY3]](s1), %bb.0, [[ICMP2]](s1), %bb.1
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $sgpr0, $sgpr1, $vgpr0

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $vgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_vcc_scc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_vcc_scc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; FAST:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC1]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[ICMP]](s1), %bb.0, [[COPY4]](s1), %bb.1
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[COPY1]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_vcc_scc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC1]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[ICMP]](s1), %bb.0, [[COPY4]](s1), %bb.1
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[COPY1]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $sgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %1
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_vcc_vcc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_vcc_vcc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP2:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY4]]
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[ICMP]](s1), %bb.0, [[ICMP2]](s1), %bb.1
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_vcc_vcc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP2:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY4]]
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[ICMP]](s1), %bb.0, [[ICMP2]](s1), %bb.1
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $vgpr1, $sgpr0

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $vgpr1
    %2:_(s32) = COPY $sgpr0
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_s_scc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_s_scc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; FAST:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_s_scc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; GREEDY:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $sgpr0, $sgpr1, $sgpr2

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $sgpr1
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_scc_s_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_scc_s_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; FAST:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_scc_s_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; GREEDY:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $sgpr0, $sgpr1, $sgpr2

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $sgpr1
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_scc_v_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_scc_v_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1, $sgpr2
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY5]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_scc_v_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1, $sgpr2
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY5]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1, $sgpr2

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $vgpr0
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_v_scc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_v_scc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_v_scc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $sgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_vcc_s_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_vcc_s_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC1]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[ICMP]](s1), %bb.0, [[COPY4]](s1), %bb.1
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_vcc_s_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC1]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[ICMP]](s1), %bb.0, [[COPY4]](s1), %bb.1
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $sgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_s_vcc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_s_vcc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY4]]
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[COPY3]](s1), %bb.0, [[ICMP1]](s1), %bb.1
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_s_vcc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY4]]
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[COPY3]](s1), %bb.0, [[ICMP1]](s1), %bb.1
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $vgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_vcc_v_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_vcc_v_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; FAST:   [[C1:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 1
  ; FAST:   [[C2:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[ICMP]](s1), [[C1]], [[C2]]
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC1:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC1]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[SELECT]](s32), %bb.0, [[ANYEXT]](s32), %bb.1
  ; FAST:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC2]](s1)
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT1:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY4]](s1), [[COPY5]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT1]](s32)
  ; GREEDY-LABEL: name: phi_s1_vcc_v_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY]](s32), [[COPY3]]
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC]](s1)
  ; GREEDY:   [[C1:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 1
  ; GREEDY:   [[C2:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[ICMP]](s1), [[C1]], [[C2]]
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC1]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[SELECT]](s32), %bb.0, [[ANYEXT]](s32), %bb.1
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC2]](s1)
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT1:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY4]](s1), [[COPY5]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT1]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $vgpr1, $sgpr0

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $vgpr1
    %2:_(s32) = COPY $sgpr0
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_v_vcc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_v_vcc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY3]]
  ; FAST:   [[C1:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 1
  ; FAST:   [[C2:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[ICMP1]](s1), [[C1]], [[C2]]
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[SELECT]](s32), %bb.1
  ; FAST:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC2]](s1)
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT1:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY4]](s1), [[COPY5]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT1]](s32)
  ; GREEDY-LABEL: name: phi_s1_v_vcc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:vcc(s1) = G_ICMP intpred(eq), [[COPY1]](s32), [[COPY3]]
  ; GREEDY:   [[C1:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 1
  ; GREEDY:   [[C2:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[ICMP1]](s1), [[C1]], [[C2]]
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[SELECT]](s32), %bb.1
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC2]](s1)
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT1:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY4]](s1), [[COPY5]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT1]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $vgpr1, $sgpr0

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $vgpr1
    %2:_(s32) = COPY $sgpr0
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_v_s_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_v_s_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_v_s_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $sgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_s_v_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_s_v_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY5]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_s_v_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $sgpr0, $sgpr1
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[COPY]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY5]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $sgpr0, $sgpr1

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $vgpr0
    %2:_(s32) = COPY $sgpr1
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_v_v_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_v_v_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; FAST:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; FAST:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_v_v_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $vgpr0, $vgpr1, $sgpr0
  ; GREEDY:   [[COPY:%[0-9]+]]:vgpr(s32) = COPY $vgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:vgpr(s32) = COPY $vgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:vgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:vgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:vgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC3]](s1)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vgpr(s32) = COPY [[C]](s32)
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[COPY3]](s1), [[COPY4]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $vgpr0, $vgpr1, $sgpr0

    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = COPY $vgpr1
    %2:_(s32) = COPY $sgpr0
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_s_s_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_s_s_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; FAST:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; FAST:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; FAST:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; FAST:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_s_s_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY]](s32)
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[ANYEXT:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[COPY1]](s32)
  ; GREEDY:   [[ANYEXT1:%[0-9]+]]:sgpr(s32) = G_ANYEXT [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:sgpr(s32) = G_PHI [[ANYEXT]](s32), %bb.0, [[ANYEXT1]](s32), %bb.1
  ; GREEDY:   [[TRUNC3:%[0-9]+]]:sgpr(s1) = G_TRUNC [[PHI]](s32)
  ; GREEDY:   [[ZEXT1:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC3]](s1)
  ; GREEDY:   [[SELECT:%[0-9]+]]:sgpr(s32) = G_SELECT [[ZEXT1]](s32), [[C]], [[COPY]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $sgpr0, $sgpr1, $sgpr2

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $sgpr1
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_TRUNC %0
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_TRUNC %1
    G_BR %bb.2

  bb.2:
    %7:_(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:_(s32) = G_SELECT %7, %3, %0
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %8

...

---
name: phi_s1_vcc_result_scc_scc_sbranch
legalized: true
tracksRegLiveness: true

body: |
  ; FAST-LABEL: name: phi_s1_vcc_result_scc_scc_sbranch
  ; FAST: bb.0:
  ; FAST:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; FAST:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; FAST:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; FAST:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; FAST:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; FAST:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; FAST:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; FAST:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; FAST:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; FAST:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; FAST:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; FAST:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC]](s1)
  ; FAST:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; FAST:   G_BR %bb.2
  ; FAST: bb.1:
  ; FAST:   successors: %bb.2(0x80000000)
  ; FAST:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; FAST:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; FAST:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC2]](s1)
  ; FAST:   G_BR %bb.2
  ; FAST: bb.2:
  ; FAST:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[COPY3]](s1), %bb.0, [[COPY4]](s1), %bb.1
  ; FAST:   [[C1:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 123
  ; FAST:   [[COPY5:%[0-9]+]]:vgpr(s32) = COPY [[C1]](s32)
  ; FAST:   [[C2:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 456
  ; FAST:   [[COPY6:%[0-9]+]]:vgpr(s32) = COPY [[C2]](s32)
  ; FAST:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[COPY5]], [[COPY6]]
  ; FAST:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  ; GREEDY-LABEL: name: phi_s1_vcc_result_scc_scc_sbranch
  ; GREEDY: bb.0:
  ; GREEDY:   successors: %bb.1(0x40000000), %bb.2(0x40000000)
  ; GREEDY:   liveins: $sgpr0, $sgpr1, $sgpr2
  ; GREEDY:   [[COPY:%[0-9]+]]:sgpr(s32) = COPY $sgpr0
  ; GREEDY:   [[COPY1:%[0-9]+]]:sgpr(s32) = COPY $sgpr1
  ; GREEDY:   [[COPY2:%[0-9]+]]:sgpr(s32) = COPY $sgpr2
  ; GREEDY:   [[C:%[0-9]+]]:sgpr(s32) = G_CONSTANT i32 0
  ; GREEDY:   [[ICMP:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY]](s32), [[C]]
  ; GREEDY:   [[TRUNC:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP]](s32)
  ; GREEDY:   [[ICMP1:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY2]](s32), [[C]]
  ; GREEDY:   [[TRUNC1:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP1]](s32)
  ; GREEDY:   [[ZEXT:%[0-9]+]]:sgpr(s32) = G_ZEXT [[TRUNC1]](s1)
  ; GREEDY:   [[COPY3:%[0-9]+]]:vcc(s1) = COPY [[TRUNC]](s1)
  ; GREEDY:   G_BRCOND [[ZEXT]](s32), %bb.1
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.1:
  ; GREEDY:   successors: %bb.2(0x80000000)
  ; GREEDY:   [[ICMP2:%[0-9]+]]:sgpr(s32) = G_ICMP intpred(eq), [[COPY1]](s32), [[C]]
  ; GREEDY:   [[TRUNC2:%[0-9]+]]:sgpr(s1) = G_TRUNC [[ICMP2]](s32)
  ; GREEDY:   [[COPY4:%[0-9]+]]:vcc(s1) = COPY [[TRUNC2]](s1)
  ; GREEDY:   G_BR %bb.2
  ; GREEDY: bb.2:
  ; GREEDY:   [[PHI:%[0-9]+]]:vcc(s1) = G_PHI [[COPY3]](s1), %bb.0, [[COPY4]](s1), %bb.1
  ; GREEDY:   [[C1:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 123
  ; GREEDY:   [[C2:%[0-9]+]]:vgpr(s32) = G_CONSTANT i32 456
  ; GREEDY:   [[SELECT:%[0-9]+]]:vgpr(s32) = G_SELECT [[PHI]](s1), [[C1]], [[C2]]
  ; GREEDY:   S_SETPC_B64 undef $sgpr30_sgpr31, implicit [[SELECT]](s32)
  bb.0:
    successors: %bb.1, %bb.2
    liveins: $sgpr0, $sgpr1, $sgpr2

    %0:_(s32) = COPY $sgpr0
    %1:_(s32) = COPY $sgpr1
    %2:_(s32) = COPY $sgpr2
    %3:_(s32) = G_CONSTANT i32 0
    %4:_(s1) = G_ICMP intpred(eq), %0, %3
    %5:_(s1) = G_ICMP intpred(eq), %2, %3
    G_BRCOND %5, %bb.1
    G_BR %bb.2

  bb.1:
    successors: %bb.2

    %6:_(s1) = G_ICMP intpred(eq), %1, %3
    G_BR %bb.2

  bb.2:
    %7:vcc(s1) = G_PHI %4, %bb.0, %6, %bb.1
    %8:vgpr(s32) = G_CONSTANT i32 123
    %9:vgpr(s32) = G_CONSTANT i32 456
    %10:vgpr(s32) = G_SELECT %7, %8, %9
    S_SETPC_B64 undef $sgpr30_sgpr31, implicit %10

...
