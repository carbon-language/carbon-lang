; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -global-isel -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 -o - %s | FileCheck %s

declare hidden i32 addrspace(1)* @ext(i8 addrspace(1)*)

define i32 addrspace(1)* @call_assert_align() {
; CHECK-LABEL: call_assert_align:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    s_or_saveexec_b64 s[16:17], -1
; CHECK-NEXT:    buffer_store_dword v40, off, s[0:3], s32 ; 4-byte Folded Spill
; CHECK-NEXT:    s_mov_b64 exec, s[16:17]
; CHECK-NEXT:    v_writelane_b32 v40, s33, 2
; CHECK-NEXT:    s_mov_b32 s33, s32
; CHECK-NEXT:    s_addk_i32 s32, 0x400
; CHECK-NEXT:    v_writelane_b32 v40, s30, 0
; CHECK-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    v_writelane_b32 v40, s31, 1
; CHECK-NEXT:    s_getpc_b64 s[16:17]
; CHECK-NEXT:    s_add_u32 s16, s16, ext@rel32@lo+4
; CHECK-NEXT:    s_addc_u32 s17, s17, ext@rel32@hi+12
; CHECK-NEXT:    s_swappc_b64 s[30:31], s[16:17]
; CHECK-NEXT:    v_mov_b32_e32 v2, 0
; CHECK-NEXT:    global_store_dword v[0:1], v2, off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    v_readlane_b32 s31, v40, 1
; CHECK-NEXT:    v_readlane_b32 s30, v40, 0
; CHECK-NEXT:    s_addk_i32 s32, 0xfc00
; CHECK-NEXT:    v_readlane_b32 s33, v40, 2
; CHECK-NEXT:    s_or_saveexec_b64 s[4:5], -1
; CHECK-NEXT:    buffer_load_dword v40, off, s[0:3], s32 ; 4-byte Folded Reload
; CHECK-NEXT:    s_mov_b64 exec, s[4:5]
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %call = call align 4 i32 addrspace(1)* @ext(i8 addrspace(1)* null)
  store volatile i32 0, i32 addrspace(1)* %call
  ret i32 addrspace(1)* %call
}

define i32 addrspace(1)* @tail_call_assert_align() {
; CHECK-LABEL: tail_call_assert_align:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_getpc_b64 s[16:17]
; CHECK-NEXT:    s_add_u32 s16, s16, ext@rel32@lo+4
; CHECK-NEXT:    s_addc_u32 s17, s17, ext@rel32@hi+12
; CHECK-NEXT:    s_setpc_b64 s[16:17]
entry:
  %call = tail call align 4 i32 addrspace(1)* @ext(i8 addrspace(1)* null)
  ret i32 addrspace(1)* %call
}
