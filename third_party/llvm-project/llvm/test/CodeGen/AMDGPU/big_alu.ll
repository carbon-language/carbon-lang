; RUN: llc -march=r600 -mcpu=cedar < %s

; This test ensures that R600 backend can handle ifcvt properly

define amdgpu_ps void @main(<4 x float> inreg %reg0, <4 x float> inreg %reg1, <4 x float> inreg %reg2, <4 x float> inreg %reg3, <4 x float> inreg %reg4, <4 x float> inreg %reg5, <4 x float> inreg %reg6, <4 x float> inreg %reg7, <4 x float> inreg %reg8, <4 x float> inreg %reg9) #0 {
main_body:
  %tmp = extractelement <4 x float> %reg0, i32 0
  %tmp1 = extractelement <4 x float> %reg0, i32 1
  %tmp2 = extractelement <4 x float> %reg0, i32 2
  %tmp3 = extractelement <4 x float> %reg0, i32 3
  %tmp4 = extractelement <4 x float> %reg1, i32 0
  %tmp5 = extractelement <4 x float> %reg9, i32 0
  %tmp6 = extractelement <4 x float> %reg8, i32 0
  %tmp7 = fcmp ugt float %tmp6, 0.000000e+00
  %tmp8 = select i1 %tmp7, float %tmp4, float %tmp5
  %tmp9 = extractelement <4 x float> %reg1, i32 1
  %tmp10 = extractelement <4 x float> %reg9, i32 1
  %tmp11 = extractelement <4 x float> %reg8, i32 0
  %tmp12 = fcmp ugt float %tmp11, 0.000000e+00
  %tmp13 = select i1 %tmp12, float %tmp9, float %tmp10
  %tmp14 = extractelement <4 x float> %reg1, i32 2
  %tmp15 = extractelement <4 x float> %reg9, i32 2
  %tmp16 = extractelement <4 x float> %reg8, i32 0
  %tmp17 = fcmp ugt float %tmp16, 0.000000e+00
  %tmp18 = select i1 %tmp17, float %tmp14, float %tmp15
  %tmp19 = extractelement <4 x float> %reg1, i32 3
  %tmp20 = extractelement <4 x float> %reg9, i32 3
  %tmp21 = extractelement <4 x float> %reg8, i32 0
  %tmp22 = extractelement <4 x float> %reg2, i32 0
  %tmp23 = extractelement <4 x float> %reg2, i32 1
  %tmp24 = extractelement <4 x float> %reg2, i32 2
  %tmp25 = extractelement <4 x float> %reg2, i32 3
  %tmp26 = extractelement <4 x float> %reg3, i32 0
  %tmp27 = extractelement <4 x float> %reg3, i32 1
  %tmp28 = extractelement <4 x float> %reg3, i32 2
  %tmp29 = extractelement <4 x float> %reg3, i32 3
  %tmp30 = extractelement <4 x float> %reg4, i32 0
  %tmp31 = extractelement <4 x float> %reg4, i32 1
  %tmp32 = extractelement <4 x float> %reg4, i32 2
  %tmp33 = extractelement <4 x float> %reg4, i32 3
  %tmp34 = extractelement <4 x float> %reg5, i32 0
  %tmp35 = extractelement <4 x float> %reg5, i32 1
  %tmp36 = extractelement <4 x float> %reg5, i32 2
  %tmp37 = extractelement <4 x float> %reg5, i32 3
  %tmp38 = extractelement <4 x float> %reg6, i32 0
  %tmp39 = extractelement <4 x float> %reg6, i32 1
  %tmp40 = extractelement <4 x float> %reg6, i32 2
  %tmp41 = extractelement <4 x float> %reg6, i32 3
  %tmp42 = extractelement <4 x float> %reg7, i32 0
  %tmp43 = extractelement <4 x float> %reg7, i32 1
  %tmp44 = extractelement <4 x float> %reg7, i32 2
  %tmp45 = extractelement <4 x float> %reg7, i32 3
  %tmp46 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 11)
  %tmp47 = extractelement <4 x float> %tmp46, i32 0
  %tmp48 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 11)
  %tmp49 = extractelement <4 x float> %tmp48, i32 1
  %tmp50 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 11)
  %tmp51 = extractelement <4 x float> %tmp50, i32 2
  %tmp52 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 12)
  %tmp53 = extractelement <4 x float> %tmp52, i32 0
  %tmp54 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 14)
  %tmp55 = extractelement <4 x float> %tmp54, i32 0
  %tmp56 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 14)
  %tmp57 = extractelement <4 x float> %tmp56, i32 1
  %tmp58 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 14)
  %tmp59 = extractelement <4 x float> %tmp58, i32 2
  %tmp60 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 14)
  %tmp61 = extractelement <4 x float> %tmp60, i32 3
  %tmp62 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 16)
  %tmp63 = extractelement <4 x float> %tmp62, i32 0
  %tmp64 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 16)
  %tmp65 = extractelement <4 x float> %tmp64, i32 1
  %tmp66 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 16)
  %tmp67 = extractelement <4 x float> %tmp66, i32 2
  %tmp68 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 9)
  %tmp69 = extractelement <4 x float> %tmp68, i32 0
  %tmp70 = fcmp oge float %tmp69, 3.500000e+00
  %tmp71 = sext i1 %tmp70 to i32
  %tmp72 = bitcast i32 %tmp71 to float
  %tmp73 = bitcast float %tmp72 to i32
  %tmp74 = icmp ne i32 %tmp73, 0
  %. = select i1 %tmp74, float 0.000000e+00, float 0.000000e+00
  %tmp75 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 9)
  %tmp76 = extractelement <4 x float> %tmp75, i32 0
  %tmp77 = fcmp oge float %tmp76, 2.000000e+00
  %tmp78 = sext i1 %tmp77 to i32
  %tmp79 = bitcast i32 %tmp78 to float
  %tmp80 = bitcast float %tmp79 to i32
  %tmp81 = icmp ne i32 %tmp80, 0
  br i1 %tmp81, label %IF137, label %ENDIF136

IF137:                                            ; preds = %main_body
  %tmp82 = insertelement <4 x float> undef, float %tmp30, i32 0
  %tmp83 = insertelement <4 x float> %tmp82, float %tmp31, i32 1
  %tmp84 = insertelement <4 x float> %tmp83, float %tmp32, i32 2
  %tmp85 = insertelement <4 x float> %tmp84, float 0.000000e+00, i32 3
  %tmp86 = insertelement <4 x float> undef, float %tmp30, i32 0
  %tmp87 = insertelement <4 x float> %tmp86, float %tmp31, i32 1
  %tmp88 = insertelement <4 x float> %tmp87, float %tmp32, i32 2
  %tmp89 = insertelement <4 x float> %tmp88, float 0.000000e+00, i32 3
  %tmp90 = call float @llvm.r600.dot4(<4 x float> %tmp85, <4 x float> %tmp89)
  %tmp91 = call float @llvm.r600.recipsqrt.clamped.f32(float %tmp90)
  %tmp92 = fmul float %tmp30, %tmp91
  %tmp93 = fmul float %tmp31, %tmp91
  %tmp94 = fmul float %tmp32, %tmp91
  %tmp95 = insertelement <4 x float> undef, float %tmp92, i32 0
  %tmp96 = insertelement <4 x float> %tmp95, float %tmp93, i32 1
  %tmp97 = insertelement <4 x float> %tmp96, float %tmp94, i32 2
  %tmp98 = insertelement <4 x float> %tmp97, float 0.000000e+00, i32 3
  %tmp99 = insertelement <4 x float> undef, float %tmp37, i32 0
  %tmp100 = insertelement <4 x float> %tmp99, float %tmp38, i32 1
  %tmp101 = insertelement <4 x float> %tmp100, float %tmp39, i32 2
  %tmp102 = insertelement <4 x float> %tmp101, float 0.000000e+00, i32 3
  %tmp103 = call float @llvm.r600.dot4(<4 x float> %tmp98, <4 x float> %tmp102)
  %tmp104 = insertelement <4 x float> undef, float %tmp92, i32 0
  %tmp105 = insertelement <4 x float> %tmp104, float %tmp93, i32 1
  %tmp106 = insertelement <4 x float> %tmp105, float %tmp94, i32 2
  %tmp107 = insertelement <4 x float> %tmp106, float 0.000000e+00, i32 3
  %tmp108 = insertelement <4 x float> undef, float %tmp40, i32 0
  %tmp109 = insertelement <4 x float> %tmp108, float %tmp41, i32 1
  %tmp110 = insertelement <4 x float> %tmp109, float %tmp42, i32 2
  %tmp111 = insertelement <4 x float> %tmp110, float 0.000000e+00, i32 3
  %tmp112 = call float @llvm.r600.dot4(<4 x float> %tmp107, <4 x float> %tmp111)
  %tmp113 = fsub float -0.000000e+00, %tmp92
  %tmp114 = fsub float -0.000000e+00, %tmp93
  %tmp115 = fsub float -0.000000e+00, %tmp94
  %tmp116 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp117 = insertelement <4 x float> %tmp116, float %tmp35, i32 1
  %tmp118 = insertelement <4 x float> %tmp117, float %tmp36, i32 2
  %tmp119 = insertelement <4 x float> %tmp118, float 0.000000e+00, i32 3
  %tmp120 = insertelement <4 x float> undef, float %tmp113, i32 0
  %tmp121 = insertelement <4 x float> %tmp120, float %tmp114, i32 1
  %tmp122 = insertelement <4 x float> %tmp121, float %tmp115, i32 2
  %tmp123 = insertelement <4 x float> %tmp122, float 0.000000e+00, i32 3
  %tmp124 = call float @llvm.r600.dot4(<4 x float> %tmp119, <4 x float> %tmp123)
  %tmp125 = fdiv float 1.000000e+00, %tmp124
  %tmp126 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 5)
  %tmp127 = extractelement <4 x float> %tmp126, i32 0
  %tmp128 = fmul float %tmp127, %tmp125
  %tmp129 = fmul float %tmp103, %tmp128
  %tmp130 = fmul float %tmp112, %tmp128
  %tmp131 = bitcast float %. to i32
  %tmp132 = sitofp i32 %tmp131 to float
  %tmp133 = fdiv float 1.000000e+00, %tmp132
  %tmp134 = bitcast float %. to i32
  %tmp135 = add i32 %tmp134, -1
  %tmp136 = bitcast i32 %tmp135 to float
  %tmp137 = bitcast float %tmp136 to i32
  br label %LOOP

ENDIF136:                                         ; preds = %ENDIF154, %main_body
  %temp68.1 = phi float [ %tmp603, %ENDIF154 ], [ 0.000000e+00, %main_body ]
  %temp69.0 = phi float [ %tmp605, %ENDIF154 ], [ 0.000000e+00, %main_body ]
  %temp70.0 = phi float [ %tmp607, %ENDIF154 ], [ 1.000000e+00, %main_body ]
  %tmp138 = fmul float %tmp26, 0x3F847AE140000000
  %tmp139 = fmul float %tmp27, 0x3F847AE140000000
  %tmp140 = fmul float %tmp28, 0x3F847AE140000000
  %tmp141 = insertelement <4 x float> undef, float %tmp138, i32 0
  %tmp142 = insertelement <4 x float> %tmp141, float %tmp139, i32 1
  %tmp143 = insertelement <4 x float> %tmp142, float %tmp140, i32 2
  %tmp144 = insertelement <4 x float> %tmp143, float 0.000000e+00, i32 3
  %tmp145 = extractelement <4 x float> %tmp144, i32 0
  %tmp146 = extractelement <4 x float> %tmp144, i32 1
  %tmp147 = extractelement <4 x float> %tmp144, i32 2
  %tmp148 = extractelement <4 x float> %tmp144, i32 3
  %tmp149 = insertelement <4 x float> undef, float %tmp145, i32 0
  %tmp150 = insertelement <4 x float> %tmp149, float %tmp146, i32 1
  %tmp151 = insertelement <4 x float> %tmp150, float %tmp147, i32 2
  %tmp152 = insertelement <4 x float> %tmp151, float %tmp148, i32 3
  %tmp153 = shufflevector <4 x float> %tmp152, <4 x float> %tmp152, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp154 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp153, i32 0, i32 0, i32 0, i32 16, i32 0, i32 1, i32 1, i32 1, i32 1)
  %tmp155 = extractelement <4 x float> %tmp154, i32 0
  %tmp156 = extractelement <4 x float> %tmp154, i32 1
  %tmp157 = extractelement <4 x float> %tmp154, i32 2
  %tmp158 = extractelement <4 x float> %tmp154, i32 3
  %tmp159 = fmul float %tmp26, 0x3F45A07B40000000
  %tmp160 = fmul float %tmp27, 0x3F45A07B40000000
  %tmp161 = fmul float %tmp28, 0x3F45A07B40000000
  %tmp162 = insertelement <4 x float> undef, float %tmp159, i32 0
  %tmp163 = insertelement <4 x float> %tmp162, float %tmp160, i32 1
  %tmp164 = insertelement <4 x float> %tmp163, float %tmp161, i32 2
  %tmp165 = insertelement <4 x float> %tmp164, float 0.000000e+00, i32 3
  %tmp166 = extractelement <4 x float> %tmp165, i32 0
  %tmp167 = extractelement <4 x float> %tmp165, i32 1
  %tmp168 = extractelement <4 x float> %tmp165, i32 2
  %tmp169 = extractelement <4 x float> %tmp165, i32 3
  %tmp170 = insertelement <4 x float> undef, float %tmp166, i32 0
  %tmp171 = insertelement <4 x float> %tmp170, float %tmp167, i32 1
  %tmp172 = insertelement <4 x float> %tmp171, float %tmp168, i32 2
  %tmp173 = insertelement <4 x float> %tmp172, float %tmp169, i32 3
  %tmp174 = shufflevector <4 x float> %tmp173, <4 x float> %tmp173, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp175 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp174, i32 0, i32 0, i32 0, i32 16, i32 0, i32 1, i32 1, i32 1, i32 1)
  %tmp176 = extractelement <4 x float> %tmp175, i32 0
  %tmp177 = extractelement <4 x float> %tmp175, i32 1
  %tmp178 = extractelement <4 x float> %tmp175, i32 2
  %tmp179 = extractelement <4 x float> %tmp175, i32 3
  %tmp180 = fmul float %tmp178, 3.000000e+03
  %tmp181 = fadd float %tmp180, %tmp28
  %tmp182 = fdiv float 1.000000e+00, %tmp33
  %tmp183 = fmul float %tmp32, %tmp182
  %tmp184 = call float @llvm.fabs.f32(float %tmp183)
  %tmp185 = fmul float %tmp176, 0x3FD99999A0000000
  %tmp186 = fadd float %tmp185, 0x3FAEB851E0000000
  %tmp187 = fmul float %tmp177, 0x3FE3333340000000
  %tmp188 = fadd float %tmp187, %tmp186
  %tmp189 = fmul float %tmp178, 2.000000e+00
  %tmp190 = fadd float %tmp189, %tmp188
  %tmp191 = fmul float %tmp179, 4.000000e+00
  %tmp192 = fadd float %tmp191, %tmp190
  %tmp193 = fmul float %tmp155, 0x3FB99999A0000000
  %tmp194 = fadd float %tmp193, %tmp192
  %tmp195 = fmul float %tmp156, 0x3FD99999A0000000
  %tmp196 = fadd float %tmp195, %tmp194
  %tmp197 = fmul float %tmp157, 0x3FE99999A0000000
  %tmp198 = fadd float %tmp197, %tmp196
  %tmp199 = fmul float %tmp158, 0x4000CCCCC0000000
  %tmp200 = fadd float %tmp199, %tmp198
  %tmp201 = fmul float 0xBE5EFB4CC0000000, %tmp184
  %tmp202 = fmul float %tmp201, %tmp184
  %tmp203 = call float @llvm.exp2.f32(float %tmp202)
  %one.sub.a.i = fsub float 1.000000e+00, %tmp203
  %one.sub.ac.i = fmul float %one.sub.a.i, 0x3FA99999A0000000
  %mul.i = fmul float %tmp200, 0x3FA99999A0000000
  %result.i = fadd float %mul.i, %one.sub.ac.i
  %tmp204 = fadd float %result.i, 0x3FF4CCCCC0000000
  %tmp205 = fmul float %tmp204, 0x3FE1C71C80000000
  %max.0.i = call float @llvm.maxnum.f32(float %tmp205, float 0.000000e+00)
  %clamp.i = call float @llvm.minnum.f32(float %max.0.i, float 1.000000e+00)
  %tmp207 = fadd float %result.i, 0x3FF4CCCCC0000000
  %tmp208 = fmul float %tmp207, 0x3FE1C71C80000000
  %max.0.i15 = call float @llvm.maxnum.f32(float %tmp208, float 0.000000e+00)
  %clamp.i16 = call float @llvm.minnum.f32(float %max.0.i15, float 1.000000e+00)
  %tmp210 = fadd float %result.i, 2.000000e+00
  %tmp211 = fmul float %tmp210, 0x3FD611A7A0000000
  %max.0.i13 = call float @llvm.maxnum.f32(float %tmp211, float 0.000000e+00)
  %clamp.i14 = call float @llvm.minnum.f32(float %max.0.i13, float 1.000000e+00)
  %tmp213 = fmul float 2.000000e+00, %clamp.i
  %tmp214 = fsub float -0.000000e+00, %tmp213
  %tmp215 = fadd float 3.000000e+00, %tmp214
  %tmp216 = fmul float %clamp.i, %tmp215
  %tmp217 = fmul float %clamp.i, %tmp216
  %tmp218 = fmul float 2.000000e+00, %clamp.i16
  %tmp219 = fsub float -0.000000e+00, %tmp218
  %tmp220 = fadd float 3.000000e+00, %tmp219
  %tmp221 = fmul float %clamp.i16, %tmp220
  %tmp222 = fmul float %clamp.i16, %tmp221
  %tmp223 = fmul float 2.000000e+00, %clamp.i14
  %tmp224 = fsub float -0.000000e+00, %tmp223
  %tmp225 = fadd float 3.000000e+00, %tmp224
  %tmp226 = fmul float %clamp.i14, %tmp225
  %tmp227 = fmul float %clamp.i14, %tmp226
  %tmp228 = fmul float %tmp26, 0x3F368B5CC0000000
  %tmp229 = fmul float %tmp27, 0x3F368B5CC0000000
  %tmp230 = insertelement <4 x float> undef, float %tmp228, i32 0
  %tmp231 = insertelement <4 x float> %tmp230, float %tmp229, i32 1
  %tmp232 = insertelement <4 x float> %tmp231, float 0.000000e+00, i32 2
  %tmp233 = insertelement <4 x float> %tmp232, float 0.000000e+00, i32 3
  %tmp234 = extractelement <4 x float> %tmp233, i32 0
  %tmp235 = extractelement <4 x float> %tmp233, i32 1
  %tmp236 = insertelement <4 x float> undef, float %tmp234, i32 0
  %tmp237 = insertelement <4 x float> %tmp236, float %tmp235, i32 1
  %tmp238 = insertelement <4 x float> %tmp237, float undef, i32 2
  %tmp239 = insertelement <4 x float> %tmp238, float undef, i32 3
  %tmp240 = shufflevector <4 x float> %tmp239, <4 x float> %tmp239, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp241 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp240, i32 0, i32 0, i32 0, i32 17, i32 1, i32 1, i32 1, i32 1, i32 1)
  %tmp242 = extractelement <4 x float> %tmp241, i32 0
  %tmp243 = insertelement <4 x float> undef, float %tmp242, i32 0
  %tmp244 = insertelement <4 x float> %tmp243, float %tmp229, i32 1
  %tmp245 = insertelement <4 x float> %tmp244, float 0.000000e+00, i32 2
  %tmp246 = insertelement <4 x float> %tmp245, float 0.000000e+00, i32 3
  %tmp247 = extractelement <4 x float> %tmp246, i32 0
  %tmp248 = insertelement <4 x float> undef, float %tmp247, i32 0
  %tmp249 = insertelement <4 x float> %tmp248, float undef, i32 1
  %tmp250 = insertelement <4 x float> %tmp249, float undef, i32 2
  %tmp251 = insertelement <4 x float> %tmp250, float undef, i32 3
  %tmp252 = shufflevector <4 x float> %tmp251, <4 x float> %tmp251, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp253 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp252, i32 0, i32 0, i32 0, i32 18, i32 2, i32 1, i32 1, i32 1, i32 1)
  %tmp254 = extractelement <4 x float> %tmp253, i32 0
  %tmp255 = extractelement <4 x float> %tmp253, i32 1
  %tmp256 = extractelement <4 x float> %tmp253, i32 2
  %tmp257 = extractelement <4 x float> %tmp253, i32 3
  %tmp258 = fmul float %tmp254, %tmp217
  %tmp259 = fmul float %tmp255, %tmp222
  %tmp260 = fmul float %tmp256, %tmp227
  %tmp261 = fmul float %tmp257, 0.000000e+00
  %tmp262 = fadd float %result.i, 0x3FF4CCCCC0000000
  %tmp263 = fmul float %tmp262, 0x3FE1C71C80000000
  %max.0.i11 = call float @llvm.maxnum.f32(float %tmp263, float 0.000000e+00)
  %clamp.i12 = call float @llvm.minnum.f32(float %max.0.i11, float 1.000000e+00)
  %tmp265 = fadd float %result.i, 0x3FF4CCCCC0000000
  %tmp266 = fmul float %tmp265, 0x3FE1C71C80000000
  %max.0.i9 = call float @llvm.maxnum.f32(float %tmp266, float 0.000000e+00)
  %clamp.i10 = call float @llvm.minnum.f32(float %max.0.i9, float 1.000000e+00)
  %tmp268 = fadd float %result.i, 2.000000e+00
  %tmp269 = fmul float %tmp268, 0x3FD611A7A0000000
  %max.0.i7 = call float @llvm.maxnum.f32(float %tmp269, float 0.000000e+00)
  %clamp.i8 = call float @llvm.minnum.f32(float %max.0.i7, float 1.000000e+00)
  %tmp271 = fmul float 2.000000e+00, %clamp.i12
  %tmp272 = fsub float -0.000000e+00, %tmp271
  %tmp273 = fadd float 3.000000e+00, %tmp272
  %tmp274 = fmul float %clamp.i12, %tmp273
  %tmp275 = fmul float %clamp.i12, %tmp274
  %tmp276 = fmul float 2.000000e+00, %clamp.i10
  %tmp277 = fsub float -0.000000e+00, %tmp276
  %tmp278 = fadd float 3.000000e+00, %tmp277
  %tmp279 = fmul float %clamp.i10, %tmp278
  %tmp280 = fmul float %clamp.i10, %tmp279
  %tmp281 = fmul float 2.000000e+00, %clamp.i8
  %tmp282 = fsub float -0.000000e+00, %tmp281
  %tmp283 = fadd float 3.000000e+00, %tmp282
  %tmp284 = fmul float %clamp.i8, %tmp283
  %tmp285 = fmul float %clamp.i8, %tmp284
  %tmp286 = fmul float %tmp26, 0x3F22DFD6A0000000
  %tmp287 = fmul float %tmp27, 0x3F22DFD6A0000000
  %tmp288 = insertelement <4 x float> undef, float %tmp286, i32 0
  %tmp289 = insertelement <4 x float> %tmp288, float %tmp287, i32 1
  %tmp290 = insertelement <4 x float> %tmp289, float 0.000000e+00, i32 2
  %tmp291 = insertelement <4 x float> %tmp290, float 0.000000e+00, i32 3
  %tmp292 = extractelement <4 x float> %tmp291, i32 0
  %tmp293 = extractelement <4 x float> %tmp291, i32 1
  %tmp294 = insertelement <4 x float> undef, float %tmp292, i32 0
  %tmp295 = insertelement <4 x float> %tmp294, float %tmp293, i32 1
  %tmp296 = insertelement <4 x float> %tmp295, float undef, i32 2
  %tmp297 = insertelement <4 x float> %tmp296, float undef, i32 3
  %tmp298 = shufflevector <4 x float> %tmp297, <4 x float> %tmp297, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp299 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp298, i32 0, i32 0, i32 0, i32 19, i32 3, i32 1, i32 1, i32 1, i32 1)
  %tmp300 = extractelement <4 x float> %tmp299, i32 0
  %tmp301 = extractelement <4 x float> %tmp299, i32 1
  %tmp302 = extractelement <4 x float> %tmp299, i32 2
  %tmp303 = extractelement <4 x float> %tmp299, i32 3
  %tmp304 = fmul float %tmp300, %tmp275
  %tmp305 = fmul float %tmp301, %tmp280
  %tmp306 = fmul float %tmp302, %tmp285
  %tmp307 = fmul float %tmp303, 0.000000e+00
  %tmp308 = fmul float %temp68.1, %tmp37
  %tmp309 = fmul float %temp68.1, %tmp38
  %tmp310 = fmul float %temp68.1, %tmp39
  %tmp311 = fmul float %temp69.0, %tmp40
  %tmp312 = fadd float %tmp311, %tmp308
  %tmp313 = fmul float %temp69.0, %tmp41
  %tmp314 = fadd float %tmp313, %tmp309
  %tmp315 = fmul float %temp69.0, %tmp42
  %tmp316 = fadd float %tmp315, %tmp310
  %tmp317 = fmul float %temp70.0, %tmp34
  %tmp318 = fadd float %tmp317, %tmp312
  %tmp319 = fmul float %temp70.0, %tmp35
  %tmp320 = fadd float %tmp319, %tmp314
  %tmp321 = fmul float %temp70.0, %tmp36
  %tmp322 = fadd float %tmp321, %tmp316
  %tmp323 = insertelement <4 x float> undef, float %tmp318, i32 0
  %tmp324 = insertelement <4 x float> %tmp323, float %tmp320, i32 1
  %tmp325 = insertelement <4 x float> %tmp324, float %tmp322, i32 2
  %tmp326 = insertelement <4 x float> %tmp325, float 0.000000e+00, i32 3
  %tmp327 = insertelement <4 x float> undef, float %tmp318, i32 0
  %tmp328 = insertelement <4 x float> %tmp327, float %tmp320, i32 1
  %tmp329 = insertelement <4 x float> %tmp328, float %tmp322, i32 2
  %tmp330 = insertelement <4 x float> %tmp329, float 0.000000e+00, i32 3
  %tmp331 = call float @llvm.r600.dot4(<4 x float> %tmp326, <4 x float> %tmp330)
  %tmp332 = call float @llvm.r600.recipsqrt.clamped.f32(float %tmp331)
  %tmp333 = fmul float %tmp318, %tmp332
  %tmp334 = fmul float %tmp320, %tmp332
  %tmp335 = fmul float %tmp322, %tmp332
  %tmp336 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 6)
  %tmp337 = extractelement <4 x float> %tmp336, i32 0
  %tmp338 = fsub float -0.000000e+00, %tmp337
  %tmp339 = fadd float 1.000000e+00, %tmp338
  %tmp340 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 7)
  %tmp341 = extractelement <4 x float> %tmp340, i32 0
  %tmp342 = fsub float -0.000000e+00, %tmp341
  %tmp343 = fadd float 1.000000e+00, %tmp342
  %tmp344 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 8)
  %tmp345 = extractelement <4 x float> %tmp344, i32 0
  %tmp346 = fsub float -0.000000e+00, %tmp345
  %tmp347 = fadd float 1.000000e+00, %tmp346
  %tmp348 = fsub float -0.000000e+00, %tmp339
  %tmp349 = fadd float %result.i, %tmp348
  %tmp350 = fsub float -0.000000e+00, %tmp343
  %tmp351 = fadd float %result.i, %tmp350
  %tmp352 = fadd float %tmp351, 0xBFE3333340000000
  %tmp353 = fsub float -0.000000e+00, %result.i
  %tmp354 = fsub float -0.000000e+00, %tmp347
  %tmp355 = fadd float %tmp353, %tmp354
  %tmp356 = insertelement <4 x float> undef, float %tmp43, i32 0
  %tmp357 = insertelement <4 x float> %tmp356, float %tmp44, i32 1
  %tmp358 = insertelement <4 x float> %tmp357, float %tmp45, i32 2
  %tmp359 = insertelement <4 x float> %tmp358, float 0.000000e+00, i32 3
  %tmp360 = insertelement <4 x float> undef, float %tmp43, i32 0
  %tmp361 = insertelement <4 x float> %tmp360, float %tmp44, i32 1
  %tmp362 = insertelement <4 x float> %tmp361, float %tmp45, i32 2
  %tmp363 = insertelement <4 x float> %tmp362, float 0.000000e+00, i32 3
  %tmp364 = call float @llvm.r600.dot4(<4 x float> %tmp359, <4 x float> %tmp363)
  %tmp365 = call float @llvm.r600.recipsqrt.clamped.f32(float %tmp364)
  %tmp366 = fmul float %tmp45, %tmp365
  %tmp367 = call float @llvm.fabs.f32(float %tmp366)
  %tmp368 = fmul float %tmp178, 0x3FECCCCCC0000000
  %tmp369 = fadd float %tmp368, %tmp367
  %tmp370 = fadd float %tmp369, 0xBFEFAE1480000000
  %tmp371 = fmul float %tmp370, 0xC023FFFFC0000000
  %max.0.i5 = call float @llvm.maxnum.f32(float %tmp371, float 0.000000e+00)
  %clamp.i6 = call float @llvm.minnum.f32(float %max.0.i5, float 1.000000e+00)
  %tmp373 = fsub float -0.000000e+00, %tmp339
  %tmp374 = fadd float %result.i, %tmp373
  %tmp375 = fadd float %tmp374, 0x3FBEB851E0000000
  %tmp376 = fsub float -0.000000e+00, %tmp343
  %tmp377 = fadd float %result.i, %tmp376
  %tmp378 = fadd float %tmp377, 0xBFE0A3D700000000
  %tmp379 = fsub float -0.000000e+00, %result.i
  %tmp380 = fsub float -0.000000e+00, %tmp347
  %tmp381 = fadd float %tmp379, %tmp380
  %tmp382 = insertelement <4 x float> undef, float %tmp43, i32 0
  %tmp383 = insertelement <4 x float> %tmp382, float %tmp44, i32 1
  %tmp384 = insertelement <4 x float> %tmp383, float %tmp45, i32 2
  %tmp385 = insertelement <4 x float> %tmp384, float 0.000000e+00, i32 3
  %tmp386 = insertelement <4 x float> undef, float %tmp43, i32 0
  %tmp387 = insertelement <4 x float> %tmp386, float %tmp44, i32 1
  %tmp388 = insertelement <4 x float> %tmp387, float %tmp45, i32 2
  %tmp389 = insertelement <4 x float> %tmp388, float 0.000000e+00, i32 3
  %tmp390 = call float @llvm.r600.dot4(<4 x float> %tmp385, <4 x float> %tmp389)
  %tmp391 = call float @llvm.r600.recipsqrt.clamped.f32(float %tmp390)
  %tmp392 = fmul float %tmp45, %tmp391
  %tmp393 = call float @llvm.fabs.f32(float %tmp392)
  %tmp394 = fmul float %tmp178, 0x3FF51EB860000000
  %tmp395 = fadd float %tmp394, %tmp393
  %tmp396 = fadd float %tmp395, 0xBFEFAE1480000000
  %tmp397 = fmul float %tmp396, 0xC0490001A0000000
  %max.0.i3 = call float @llvm.maxnum.f32(float %tmp397, float 0.000000e+00)
  %clamp.i4 = call float @llvm.minnum.f32(float %max.0.i3, float 1.000000e+00)
  %tmp399 = fmul float 2.000000e+00, %clamp.i6
  %tmp400 = fsub float -0.000000e+00, %tmp399
  %tmp401 = fadd float 3.000000e+00, %tmp400
  %tmp402 = fmul float %clamp.i6, %tmp401
  %tmp403 = fmul float %clamp.i6, %tmp402
  %one.sub.a.i169 = fsub float 1.000000e+00, %tmp403
  %one.sub.ac.i170 = fmul float %one.sub.a.i169, %tmp349
  %mul.i171 = fmul float %tmp258, %tmp349
  %result.i172 = fadd float %mul.i171, %one.sub.ac.i170
  %one.sub.a.i165 = fsub float 1.000000e+00, %tmp403
  %one.sub.ac.i166 = fmul float %one.sub.a.i165, %tmp352
  %mul.i167 = fmul float %tmp259, %tmp352
  %result.i168 = fadd float %mul.i167, %one.sub.ac.i166
  %one.sub.a.i161 = fsub float 1.000000e+00, %tmp403
  %one.sub.ac.i162 = fmul float %one.sub.a.i161, %tmp355
  %mul.i163 = fmul float %tmp260, %tmp355
  %result.i164 = fadd float %mul.i163, %one.sub.ac.i162
  %one.sub.a.i157 = fsub float 1.000000e+00, %tmp403
  %one.sub.ac.i158 = fmul float %one.sub.a.i157, 0.000000e+00
  %mul.i159 = fmul float %tmp261, 0.000000e+00
  %result.i160 = fadd float %mul.i159, %one.sub.ac.i158
  %tmp404 = fmul float 2.000000e+00, %clamp.i4
  %tmp405 = fsub float -0.000000e+00, %tmp404
  %tmp406 = fadd float 3.000000e+00, %tmp405
  %tmp407 = fmul float %clamp.i4, %tmp406
  %tmp408 = fmul float %clamp.i4, %tmp407
  %one.sub.a.i153 = fsub float 1.000000e+00, %tmp408
  %one.sub.ac.i154 = fmul float %one.sub.a.i153, %tmp375
  %mul.i155 = fmul float %tmp258, %tmp375
  %result.i156 = fadd float %mul.i155, %one.sub.ac.i154
  %one.sub.a.i149 = fsub float 1.000000e+00, %tmp408
  %one.sub.ac.i150 = fmul float %one.sub.a.i149, %tmp378
  %mul.i151 = fmul float %tmp259, %tmp378
  %result.i152 = fadd float %mul.i151, %one.sub.ac.i150
  %one.sub.a.i145 = fsub float 1.000000e+00, %tmp408
  %one.sub.ac.i146 = fmul float %one.sub.a.i145, %tmp381
  %mul.i147 = fmul float %tmp260, %tmp381
  %result.i148 = fadd float %mul.i147, %one.sub.ac.i146
  %one.sub.a.i141 = fsub float 1.000000e+00, %tmp408
  %one.sub.ac.i142 = fmul float %one.sub.a.i141, 0x3FD3333340000000
  %mul.i143 = fmul float %tmp261, 0x3FD3333340000000
  %result.i144 = fadd float %mul.i143, %one.sub.ac.i142
  %tmp409 = fcmp oge float 2.200000e+03, %tmp181
  %tmp410 = sext i1 %tmp409 to i32
  %tmp411 = bitcast i32 %tmp410 to float
  %tmp412 = bitcast float %tmp411 to i32
  %tmp413 = icmp ne i32 %tmp412, 0
  br i1 %tmp413, label %IF161, label %ENDIF160

LOOP:                                             ; preds = %ENDIF139, %IF137
  %temp88.0 = phi float [ 0.000000e+00, %IF137 ], [ %tmp443, %ENDIF139 ]
  %temp92.0 = phi float [ 1.000000e+00, %IF137 ], [ %.temp92.0, %ENDIF139 ]
  %temp96.0 = phi float [ 0.000000e+00, %IF137 ], [ %tmp475, %ENDIF139 ]
  %tmp414 = bitcast float %temp96.0 to i32
  %tmp415 = icmp sge i32 %tmp414, %tmp137
  %tmp416 = sext i1 %tmp415 to i32
  %tmp417 = bitcast i32 %tmp416 to float
  %tmp418 = bitcast float %tmp417 to i32
  %tmp419 = icmp ne i32 %tmp418, 0
  br i1 %tmp419, label %IF140, label %ENDIF139

IF140:                                            ; preds = %LOOP
  %tmp420 = fmul float %tmp133, 5.000000e-01
  %tmp421 = fmul float %tmp129, %temp92.0
  %tmp422 = fadd float %tmp421, %tmp22
  %tmp423 = fmul float %tmp130, %temp92.0
  %tmp424 = fadd float %tmp423, %tmp23
  %tmp425 = insertelement <4 x float> undef, float %tmp422, i32 0
  %tmp426 = insertelement <4 x float> %tmp425, float %tmp424, i32 1
  %tmp427 = insertelement <4 x float> %tmp426, float 0.000000e+00, i32 2
  %tmp428 = insertelement <4 x float> %tmp427, float 0.000000e+00, i32 3
  %tmp429 = extractelement <4 x float> %tmp428, i32 0
  %tmp430 = extractelement <4 x float> %tmp428, i32 1
  %tmp431 = insertelement <4 x float> undef, float %tmp429, i32 0
  %tmp432 = insertelement <4 x float> %tmp431, float %tmp430, i32 1
  %tmp433 = insertelement <4 x float> %tmp432, float undef, i32 2
  %tmp434 = insertelement <4 x float> %tmp433, float undef, i32 3
  %tmp435 = shufflevector <4 x float> %tmp434, <4 x float> %tmp434, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp436 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp435, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp437 = extractelement <4 x float> %tmp436, i32 3
  %tmp438 = fcmp oge float %temp92.0, %tmp437
  %tmp439 = sext i1 %tmp438 to i32
  %tmp440 = bitcast i32 %tmp439 to float
  %tmp441 = bitcast float %tmp440 to i32
  %tmp442 = icmp ne i32 %tmp441, 0
  br i1 %tmp442, label %IF146, label %ENDIF145

ENDIF139:                                         ; preds = %LOOP
  %tmp443 = fadd float %temp88.0, %tmp133
  %tmp444 = fmul float %tmp129, %tmp443
  %tmp445 = fadd float %tmp444, %tmp22
  %tmp446 = fmul float %tmp130, %tmp443
  %tmp447 = fadd float %tmp446, %tmp23
  %tmp448 = insertelement <4 x float> undef, float %tmp445, i32 0
  %tmp449 = insertelement <4 x float> %tmp448, float %tmp447, i32 1
  %tmp450 = insertelement <4 x float> %tmp449, float 0.000000e+00, i32 2
  %tmp451 = insertelement <4 x float> %tmp450, float 0.000000e+00, i32 3
  %tmp452 = extractelement <4 x float> %tmp451, i32 0
  %tmp453 = extractelement <4 x float> %tmp451, i32 1
  %tmp454 = insertelement <4 x float> undef, float %tmp452, i32 0
  %tmp455 = insertelement <4 x float> %tmp454, float %tmp453, i32 1
  %tmp456 = insertelement <4 x float> %tmp455, float undef, i32 2
  %tmp457 = insertelement <4 x float> %tmp456, float undef, i32 3
  %tmp458 = shufflevector <4 x float> %tmp457, <4 x float> %tmp457, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp459 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp458, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp460 = extractelement <4 x float> %tmp459, i32 3
  %tmp461 = fcmp olt float 0x3FEFDF3B60000000, %temp92.0
  %tmp462 = sext i1 %tmp461 to i32
  %tmp463 = bitcast i32 %tmp462 to float
  %tmp464 = fcmp oge float %tmp443, %tmp460
  %tmp465 = sext i1 %tmp464 to i32
  %tmp466 = bitcast i32 %tmp465 to float
  %tmp467 = bitcast float %tmp463 to i32
  %tmp468 = bitcast float %tmp466 to i32
  %tmp469 = and i32 %tmp467, %tmp468
  %tmp470 = bitcast i32 %tmp469 to float
  %tmp471 = bitcast float %tmp470 to i32
  %tmp472 = icmp ne i32 %tmp471, 0
  %.temp92.0 = select i1 %tmp472, float %tmp443, float %temp92.0
  %tmp473 = bitcast float %temp96.0 to i32
  %tmp474 = add i32 %tmp473, 1
  %tmp475 = bitcast i32 %tmp474 to float
  br label %LOOP

IF146:                                            ; preds = %IF140
  %tmp476 = fmul float 2.000000e+00, %tmp420
  %tmp477 = fsub float -0.000000e+00, %tmp476
  %tmp478 = fadd float %temp92.0, %tmp477
  br label %ENDIF145

ENDIF145:                                         ; preds = %IF146, %IF140
  %temp88.1 = phi float [ %tmp478, %IF146 ], [ %temp92.0, %IF140 ]
  %tmp479 = fadd float %temp88.1, %tmp420
  %tmp480 = fmul float %tmp420, 5.000000e-01
  %tmp481 = fmul float %tmp129, %tmp479
  %tmp482 = fadd float %tmp481, %tmp22
  %tmp483 = fmul float %tmp130, %tmp479
  %tmp484 = fadd float %tmp483, %tmp23
  %tmp485 = insertelement <4 x float> undef, float %tmp482, i32 0
  %tmp486 = insertelement <4 x float> %tmp485, float %tmp484, i32 1
  %tmp487 = insertelement <4 x float> %tmp486, float 0.000000e+00, i32 2
  %tmp488 = insertelement <4 x float> %tmp487, float %tmp437, i32 3
  %tmp489 = extractelement <4 x float> %tmp488, i32 0
  %tmp490 = extractelement <4 x float> %tmp488, i32 1
  %tmp491 = insertelement <4 x float> undef, float %tmp489, i32 0
  %tmp492 = insertelement <4 x float> %tmp491, float %tmp490, i32 1
  %tmp493 = insertelement <4 x float> %tmp492, float undef, i32 2
  %tmp494 = insertelement <4 x float> %tmp493, float undef, i32 3
  %tmp495 = shufflevector <4 x float> %tmp494, <4 x float> %tmp494, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp496 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp495, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp497 = extractelement <4 x float> %tmp496, i32 3
  %tmp498 = fcmp oge float %tmp479, %tmp497
  %tmp499 = sext i1 %tmp498 to i32
  %tmp500 = bitcast i32 %tmp499 to float
  %tmp501 = bitcast float %tmp500 to i32
  %tmp502 = icmp ne i32 %tmp501, 0
  br i1 %tmp502, label %IF149, label %ENDIF148

IF149:                                            ; preds = %ENDIF145
  %tmp503 = fmul float 2.000000e+00, %tmp480
  %tmp504 = fsub float -0.000000e+00, %tmp503
  %tmp505 = fadd float %tmp479, %tmp504
  br label %ENDIF148

ENDIF148:                                         ; preds = %IF149, %ENDIF145
  %temp88.2 = phi float [ %tmp505, %IF149 ], [ %tmp479, %ENDIF145 ]
  %temp92.2 = phi float [ %tmp479, %IF149 ], [ %temp92.0, %ENDIF145 ]
  %tmp506 = fadd float %temp88.2, %tmp480
  %tmp507 = fmul float %tmp480, 5.000000e-01
  %tmp508 = fmul float %tmp129, %tmp506
  %tmp509 = fadd float %tmp508, %tmp22
  %tmp510 = fmul float %tmp130, %tmp506
  %tmp511 = fadd float %tmp510, %tmp23
  %tmp512 = insertelement <4 x float> undef, float %tmp509, i32 0
  %tmp513 = insertelement <4 x float> %tmp512, float %tmp511, i32 1
  %tmp514 = insertelement <4 x float> %tmp513, float 0.000000e+00, i32 2
  %tmp515 = insertelement <4 x float> %tmp514, float %tmp497, i32 3
  %tmp516 = extractelement <4 x float> %tmp515, i32 0
  %tmp517 = extractelement <4 x float> %tmp515, i32 1
  %tmp518 = insertelement <4 x float> undef, float %tmp516, i32 0
  %tmp519 = insertelement <4 x float> %tmp518, float %tmp517, i32 1
  %tmp520 = insertelement <4 x float> %tmp519, float undef, i32 2
  %tmp521 = insertelement <4 x float> %tmp520, float undef, i32 3
  %tmp522 = shufflevector <4 x float> %tmp521, <4 x float> %tmp521, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp523 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp522, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp524 = extractelement <4 x float> %tmp523, i32 3
  %tmp525 = fcmp oge float %tmp506, %tmp524
  %tmp526 = sext i1 %tmp525 to i32
  %tmp527 = bitcast i32 %tmp526 to float
  %tmp528 = bitcast float %tmp527 to i32
  %tmp529 = icmp ne i32 %tmp528, 0
  br i1 %tmp529, label %IF152, label %ENDIF151

IF152:                                            ; preds = %ENDIF148
  %tmp530 = fmul float 2.000000e+00, %tmp507
  %tmp531 = fsub float -0.000000e+00, %tmp530
  %tmp532 = fadd float %tmp506, %tmp531
  br label %ENDIF151

ENDIF151:                                         ; preds = %IF152, %ENDIF148
  %temp88.3 = phi float [ %tmp532, %IF152 ], [ %tmp506, %ENDIF148 ]
  %temp92.3 = phi float [ %tmp506, %IF152 ], [ %temp92.2, %ENDIF148 ]
  %tmp533 = fadd float %temp88.3, %tmp507
  %tmp534 = fmul float %tmp507, 5.000000e-01
  %tmp535 = fmul float %tmp129, %tmp533
  %tmp536 = fadd float %tmp535, %tmp22
  %tmp537 = fmul float %tmp130, %tmp533
  %tmp538 = fadd float %tmp537, %tmp23
  %tmp539 = insertelement <4 x float> undef, float %tmp536, i32 0
  %tmp540 = insertelement <4 x float> %tmp539, float %tmp538, i32 1
  %tmp541 = insertelement <4 x float> %tmp540, float 0.000000e+00, i32 2
  %tmp542 = insertelement <4 x float> %tmp541, float %tmp524, i32 3
  %tmp543 = extractelement <4 x float> %tmp542, i32 0
  %tmp544 = extractelement <4 x float> %tmp542, i32 1
  %tmp545 = insertelement <4 x float> undef, float %tmp543, i32 0
  %tmp546 = insertelement <4 x float> %tmp545, float %tmp544, i32 1
  %tmp547 = insertelement <4 x float> %tmp546, float undef, i32 2
  %tmp548 = insertelement <4 x float> %tmp547, float undef, i32 3
  %tmp549 = shufflevector <4 x float> %tmp548, <4 x float> %tmp548, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp550 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp549, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp551 = extractelement <4 x float> %tmp550, i32 3
  %tmp552 = fcmp oge float %tmp533, %tmp551
  %tmp553 = sext i1 %tmp552 to i32
  %tmp554 = bitcast i32 %tmp553 to float
  %tmp555 = bitcast float %tmp554 to i32
  %tmp556 = icmp ne i32 %tmp555, 0
  br i1 %tmp556, label %IF155, label %ENDIF154

IF155:                                            ; preds = %ENDIF151
  %tmp557 = fmul float 2.000000e+00, %tmp534
  %tmp558 = fsub float -0.000000e+00, %tmp557
  %tmp559 = fadd float %tmp533, %tmp558
  br label %ENDIF154

ENDIF154:                                         ; preds = %IF155, %ENDIF151
  %temp88.4 = phi float [ %tmp559, %IF155 ], [ %tmp533, %ENDIF151 ]
  %temp92.4 = phi float [ %tmp533, %IF155 ], [ %temp92.3, %ENDIF151 ]
  %tmp560 = fadd float %temp88.4, %tmp534
  %tmp561 = fmul float %tmp129, %tmp560
  %tmp562 = fadd float %tmp561, %tmp22
  %tmp563 = fmul float %tmp130, %tmp560
  %tmp564 = fadd float %tmp563, %tmp23
  %tmp565 = insertelement <4 x float> undef, float %tmp562, i32 0
  %tmp566 = insertelement <4 x float> %tmp565, float %tmp564, i32 1
  %tmp567 = insertelement <4 x float> %tmp566, float 0.000000e+00, i32 2
  %tmp568 = insertelement <4 x float> %tmp567, float %tmp551, i32 3
  %tmp569 = extractelement <4 x float> %tmp568, i32 0
  %tmp570 = extractelement <4 x float> %tmp568, i32 1
  %tmp571 = insertelement <4 x float> undef, float %tmp569, i32 0
  %tmp572 = insertelement <4 x float> %tmp571, float %tmp570, i32 1
  %tmp573 = insertelement <4 x float> %tmp572, float undef, i32 2
  %tmp574 = insertelement <4 x float> %tmp573, float undef, i32 3
  %tmp575 = shufflevector <4 x float> %tmp574, <4 x float> %tmp574, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp576 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp575, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp577 = extractelement <4 x float> %tmp576, i32 3
  %tmp578 = fcmp oge float %tmp560, %tmp577
  %tmp579 = sext i1 %tmp578 to i32
  %tmp580 = bitcast i32 %tmp579 to float
  %tmp581 = bitcast float %tmp580 to i32
  %tmp582 = icmp ne i32 %tmp581, 0
  %.temp92.4 = select i1 %tmp582, float %tmp560, float %temp92.4
  %tmp583 = fmul float %tmp129, %.temp92.4
  %tmp584 = fadd float %tmp583, %tmp22
  %tmp585 = fmul float %tmp130, %.temp92.4
  %tmp586 = fadd float %tmp585, %tmp23
  %tmp587 = insertelement <4 x float> undef, float %tmp584, i32 0
  %tmp588 = insertelement <4 x float> %tmp587, float %tmp586, i32 1
  %tmp589 = insertelement <4 x float> %tmp588, float 0.000000e+00, i32 2
  %tmp590 = insertelement <4 x float> %tmp589, float %tmp577, i32 3
  %tmp591 = extractelement <4 x float> %tmp590, i32 0
  %tmp592 = extractelement <4 x float> %tmp590, i32 1
  %tmp593 = insertelement <4 x float> undef, float %tmp591, i32 0
  %tmp594 = insertelement <4 x float> %tmp593, float %tmp592, i32 1
  %tmp595 = insertelement <4 x float> %tmp594, float undef, i32 2
  %tmp596 = insertelement <4 x float> %tmp595, float undef, i32 3
  %tmp597 = shufflevector <4 x float> %tmp596, <4 x float> %tmp596, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %tmp598 = call <4 x float> @llvm.r600.tex(<4 x float> %tmp597, i32 0, i32 0, i32 0, i32 20, i32 4, i32 1, i32 1, i32 1, i32 1)
  %tmp599 = extractelement <4 x float> %tmp598, i32 0
  %tmp600 = extractelement <4 x float> %tmp598, i32 1
  %tmp601 = extractelement <4 x float> %tmp598, i32 2
  %tmp602 = fmul float %tmp599, 2.000000e+00
  %tmp603 = fadd float %tmp602, -1.000000e+00
  %tmp604 = fmul float %tmp600, 2.000000e+00
  %tmp605 = fadd float %tmp604, -1.000000e+00
  %tmp606 = fmul float %tmp601, 2.000000e+00
  %tmp607 = fadd float %tmp606, -1.000000e+00
  br label %ENDIF136

IF161:                                            ; preds = %ENDIF136
  %tmp608 = fmul float %result.i, 0x3FB99999A0000000
  %tmp609 = fcmp uge float 0x3FE4CCCCC0000000, %tmp608
  %tmp610 = select i1 %tmp609, float 0x3FE4CCCCC0000000, float %tmp608
  %tmp611 = fcmp uge float %tmp610, 5.000000e-01
  %tmp612 = select i1 %tmp611, float 5.000000e-01, float %tmp610
  %one.sub.a.i137 = fsub float 1.000000e+00, %tmp612
  %one.sub.ac.i138 = fmul float %one.sub.a.i137, %tmp304
  %mul.i139 = fmul float %result.i172, %tmp304
  %result.i140 = fadd float %mul.i139, %one.sub.ac.i138
  %one.sub.a.i133 = fsub float 1.000000e+00, %tmp612
  %one.sub.ac.i134 = fmul float %one.sub.a.i133, %tmp305
  %mul.i135 = fmul float %result.i168, %tmp305
  %result.i136 = fadd float %mul.i135, %one.sub.ac.i134
  %one.sub.a.i129 = fsub float 1.000000e+00, %tmp612
  %one.sub.ac.i130 = fmul float %one.sub.a.i129, %tmp306
  %mul.i131 = fmul float %result.i164, %tmp306
  %result.i132 = fadd float %mul.i131, %one.sub.ac.i130
  %one.sub.a.i125 = fsub float 1.000000e+00, %tmp612
  %one.sub.ac.i126 = fmul float %one.sub.a.i125, %tmp307
  %mul.i127 = fmul float %result.i160, %tmp307
  %result.i128 = fadd float %mul.i127, %one.sub.ac.i126
  %tmp613 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp614 = insertelement <4 x float> %tmp613, float %tmp334, i32 1
  %tmp615 = insertelement <4 x float> %tmp614, float %tmp335, i32 2
  %tmp616 = insertelement <4 x float> %tmp615, float 0.000000e+00, i32 3
  %tmp617 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp618 = insertelement <4 x float> %tmp617, float %tmp65, i32 1
  %tmp619 = insertelement <4 x float> %tmp618, float %tmp67, i32 2
  %tmp620 = insertelement <4 x float> %tmp619, float 0.000000e+00, i32 3
  %tmp621 = call float @llvm.r600.dot4(<4 x float> %tmp616, <4 x float> %tmp620)
  %tmp622 = fcmp uge float 0x3FE6666660000000, %tmp621
  %tmp623 = select i1 %tmp622, float 0x3FE6666660000000, float %tmp621
  %tmp624 = fmul float %tmp8, %tmp623
  %tmp625 = fmul float %tmp13, %tmp623
  %tmp626 = fmul float %tmp18, %tmp623
  %tmp627 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp628 = insertelement <4 x float> %tmp627, float %tmp35, i32 1
  %tmp629 = insertelement <4 x float> %tmp628, float %tmp36, i32 2
  %tmp630 = insertelement <4 x float> %tmp629, float 0.000000e+00, i32 3
  %tmp631 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp632 = insertelement <4 x float> %tmp631, float %tmp65, i32 1
  %tmp633 = insertelement <4 x float> %tmp632, float %tmp67, i32 2
  %tmp634 = insertelement <4 x float> %tmp633, float 0.000000e+00, i32 3
  %tmp635 = call float @llvm.r600.dot4(<4 x float> %tmp630, <4 x float> %tmp634)
  %tmp636 = fcmp uge float 0x3FECCCCCC0000000, %tmp635
  %tmp637 = select i1 %tmp636, float 0x3FECCCCCC0000000, float %tmp635
  %tmp638 = fmul float %tmp624, %tmp637
  %tmp639 = fmul float %tmp625, %tmp637
  %tmp640 = fmul float %tmp626, %tmp637
  br label %ENDIF160

ENDIF160:                                         ; preds = %IF161, %ENDIF136
  %temp84.0 = phi float [ %result.i140, %IF161 ], [ %tmp258, %ENDIF136 ]
  %temp85.0 = phi float [ %result.i136, %IF161 ], [ %tmp259, %ENDIF136 ]
  %temp86.0 = phi float [ %result.i132, %IF161 ], [ %tmp260, %ENDIF136 ]
  %temp87.0 = phi float [ %result.i128, %IF161 ], [ %tmp261, %ENDIF136 ]
  %temp92.6 = phi float [ %tmp638, %IF161 ], [ %tmp411, %ENDIF136 ]
  %temp93.0 = phi float [ %tmp639, %IF161 ], [ 0.000000e+00, %ENDIF136 ]
  %temp94.0 = phi float [ %tmp640, %IF161 ], [ 0.000000e+00, %ENDIF136 ]
  %tmp641 = fcmp olt float 2.200000e+03, %tmp181
  %tmp642 = sext i1 %tmp641 to i32
  %tmp643 = bitcast i32 %tmp642 to float
  %tmp644 = fcmp olt float %tmp181, 2.300000e+03
  %tmp645 = sext i1 %tmp644 to i32
  %tmp646 = bitcast i32 %tmp645 to float
  %tmp647 = bitcast float %tmp643 to i32
  %tmp648 = bitcast float %tmp646 to i32
  %tmp649 = and i32 %tmp647, %tmp648
  %tmp650 = bitcast i32 %tmp649 to float
  %tmp651 = bitcast float %tmp650 to i32
  %tmp652 = icmp ne i32 %tmp651, 0
  br i1 %tmp652, label %IF164, label %ENDIF163

IF164:                                            ; preds = %ENDIF160
  %tmp653 = fmul float %result.i, 5.000000e-01
  %tmp654 = fcmp uge float 0x3FE4CCCCC0000000, %tmp653
  %tmp655 = select i1 %tmp654, float 0x3FE4CCCCC0000000, float %tmp653
  %tmp656 = fcmp uge float %tmp655, 0x3FD6666660000000
  %tmp657 = select i1 %tmp656, float 0x3FD6666660000000, float %tmp655
  %one.sub.a.i121 = fsub float 1.000000e+00, %tmp657
  %one.sub.ac.i122 = fmul float %one.sub.a.i121, %tmp304
  %mul.i123 = fmul float %result.i172, %tmp304
  %result.i124 = fadd float %mul.i123, %one.sub.ac.i122
  %one.sub.a.i117 = fsub float 1.000000e+00, %tmp657
  %one.sub.ac.i118 = fmul float %one.sub.a.i117, %tmp305
  %mul.i119 = fmul float %result.i168, %tmp305
  %result.i120 = fadd float %mul.i119, %one.sub.ac.i118
  %one.sub.a.i113 = fsub float 1.000000e+00, %tmp657
  %one.sub.ac.i114 = fmul float %one.sub.a.i113, %tmp306
  %mul.i115 = fmul float %result.i164, %tmp306
  %result.i116 = fadd float %mul.i115, %one.sub.ac.i114
  %one.sub.a.i109 = fsub float 1.000000e+00, %tmp657
  %one.sub.ac.i110 = fmul float %one.sub.a.i109, %tmp307
  %mul.i111 = fmul float %result.i160, %tmp307
  %result.i112 = fadd float %mul.i111, %one.sub.ac.i110
  %tmp658 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp659 = insertelement <4 x float> %tmp658, float %tmp334, i32 1
  %tmp660 = insertelement <4 x float> %tmp659, float %tmp335, i32 2
  %tmp661 = insertelement <4 x float> %tmp660, float 0.000000e+00, i32 3
  %tmp662 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp663 = insertelement <4 x float> %tmp662, float %tmp65, i32 1
  %tmp664 = insertelement <4 x float> %tmp663, float %tmp67, i32 2
  %tmp665 = insertelement <4 x float> %tmp664, float 0.000000e+00, i32 3
  %tmp666 = call float @llvm.r600.dot4(<4 x float> %tmp661, <4 x float> %tmp665)
  %tmp667 = fcmp uge float 0x3FE6666660000000, %tmp666
  %tmp668 = select i1 %tmp667, float 0x3FE6666660000000, float %tmp666
  %tmp669 = fmul float %tmp8, %tmp668
  %tmp670 = fmul float %tmp13, %tmp668
  %tmp671 = fmul float %tmp18, %tmp668
  %tmp672 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp673 = insertelement <4 x float> %tmp672, float %tmp35, i32 1
  %tmp674 = insertelement <4 x float> %tmp673, float %tmp36, i32 2
  %tmp675 = insertelement <4 x float> %tmp674, float 0.000000e+00, i32 3
  %tmp676 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp677 = insertelement <4 x float> %tmp676, float %tmp65, i32 1
  %tmp678 = insertelement <4 x float> %tmp677, float %tmp67, i32 2
  %tmp679 = insertelement <4 x float> %tmp678, float 0.000000e+00, i32 3
  %tmp680 = call float @llvm.r600.dot4(<4 x float> %tmp675, <4 x float> %tmp679)
  %tmp681 = fcmp uge float 0x3FECCCCCC0000000, %tmp680
  %tmp682 = select i1 %tmp681, float 0x3FECCCCCC0000000, float %tmp680
  %tmp683 = fmul float %tmp669, %tmp682
  %tmp684 = fmul float %tmp670, %tmp682
  %tmp685 = fmul float %tmp671, %tmp682
  br label %ENDIF163

ENDIF163:                                         ; preds = %IF164, %ENDIF160
  %temp84.1 = phi float [ %result.i124, %IF164 ], [ %temp84.0, %ENDIF160 ]
  %temp85.1 = phi float [ %result.i120, %IF164 ], [ %temp85.0, %ENDIF160 ]
  %temp86.1 = phi float [ %result.i116, %IF164 ], [ %temp86.0, %ENDIF160 ]
  %temp87.1 = phi float [ %result.i112, %IF164 ], [ %temp87.0, %ENDIF160 ]
  %temp92.7 = phi float [ %tmp683, %IF164 ], [ %temp92.6, %ENDIF160 ]
  %temp93.1 = phi float [ %tmp684, %IF164 ], [ %temp93.0, %ENDIF160 ]
  %temp94.1 = phi float [ %tmp685, %IF164 ], [ %temp94.0, %ENDIF160 ]
  %tmp686 = fcmp oge float %tmp181, 2.300000e+03
  %tmp687 = sext i1 %tmp686 to i32
  %tmp688 = bitcast i32 %tmp687 to float
  %tmp689 = fcmp olt float %tmp181, 2.480000e+03
  %tmp690 = sext i1 %tmp689 to i32
  %tmp691 = bitcast i32 %tmp690 to float
  %tmp692 = bitcast float %tmp688 to i32
  %tmp693 = bitcast float %tmp691 to i32
  %tmp694 = and i32 %tmp692, %tmp693
  %tmp695 = bitcast i32 %tmp694 to float
  %tmp696 = bitcast float %tmp695 to i32
  %tmp697 = icmp ne i32 %tmp696, 0
  br i1 %tmp697, label %IF167, label %ENDIF166

IF167:                                            ; preds = %ENDIF163
  %tmp698 = fmul float %result.i, 5.000000e-01
  %tmp699 = fcmp uge float 0x3FE4CCCCC0000000, %tmp698
  %tmp700 = select i1 %tmp699, float 0x3FE4CCCCC0000000, float %tmp698
  %tmp701 = fcmp uge float %tmp700, 0x3FD3333340000000
  %tmp702 = select i1 %tmp701, float 0x3FD3333340000000, float %tmp700
  %one.sub.a.i105 = fsub float 1.000000e+00, %tmp702
  %one.sub.ac.i106 = fmul float %one.sub.a.i105, %tmp304
  %mul.i107 = fmul float %result.i156, %tmp304
  %result.i108 = fadd float %mul.i107, %one.sub.ac.i106
  %one.sub.a.i101 = fsub float 1.000000e+00, %tmp702
  %one.sub.ac.i102 = fmul float %one.sub.a.i101, %tmp305
  %mul.i103 = fmul float %result.i152, %tmp305
  %result.i104 = fadd float %mul.i103, %one.sub.ac.i102
  %one.sub.a.i97 = fsub float 1.000000e+00, %tmp702
  %one.sub.ac.i98 = fmul float %one.sub.a.i97, %tmp306
  %mul.i99 = fmul float %result.i148, %tmp306
  %result.i100 = fadd float %mul.i99, %one.sub.ac.i98
  %one.sub.a.i93 = fsub float 1.000000e+00, %tmp702
  %one.sub.ac.i94 = fmul float %one.sub.a.i93, %tmp307
  %mul.i95 = fmul float %result.i144, %tmp307
  %result.i96 = fadd float %mul.i95, %one.sub.ac.i94
  %tmp703 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp704 = insertelement <4 x float> %tmp703, float %tmp334, i32 1
  %tmp705 = insertelement <4 x float> %tmp704, float %tmp335, i32 2
  %tmp706 = insertelement <4 x float> %tmp705, float 0.000000e+00, i32 3
  %tmp707 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp708 = insertelement <4 x float> %tmp707, float %tmp65, i32 1
  %tmp709 = insertelement <4 x float> %tmp708, float %tmp67, i32 2
  %tmp710 = insertelement <4 x float> %tmp709, float 0.000000e+00, i32 3
  %tmp711 = call float @llvm.r600.dot4(<4 x float> %tmp706, <4 x float> %tmp710)
  %tmp712 = fcmp uge float 0x3FEB333340000000, %tmp711
  %tmp713 = select i1 %tmp712, float 0x3FEB333340000000, float %tmp711
  %tmp714 = fmul float %tmp8, %tmp713
  %tmp715 = fmul float %tmp13, %tmp713
  %tmp716 = fmul float %tmp18, %tmp713
  %tmp717 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp718 = insertelement <4 x float> %tmp717, float %tmp35, i32 1
  %tmp719 = insertelement <4 x float> %tmp718, float %tmp36, i32 2
  %tmp720 = insertelement <4 x float> %tmp719, float 0.000000e+00, i32 3
  %tmp721 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp722 = insertelement <4 x float> %tmp721, float %tmp65, i32 1
  %tmp723 = insertelement <4 x float> %tmp722, float %tmp67, i32 2
  %tmp724 = insertelement <4 x float> %tmp723, float 0.000000e+00, i32 3
  %tmp725 = call float @llvm.r600.dot4(<4 x float> %tmp720, <4 x float> %tmp724)
  %tmp726 = fcmp uge float 0x3FECCCCCC0000000, %tmp725
  %tmp727 = select i1 %tmp726, float 0x3FECCCCCC0000000, float %tmp725
  %tmp728 = fmul float %tmp714, %tmp727
  %tmp729 = fmul float %tmp715, %tmp727
  %tmp730 = fmul float %tmp716, %tmp727
  br label %ENDIF166

ENDIF166:                                         ; preds = %IF167, %ENDIF163
  %temp84.2 = phi float [ %result.i108, %IF167 ], [ %temp84.1, %ENDIF163 ]
  %temp85.2 = phi float [ %result.i104, %IF167 ], [ %temp85.1, %ENDIF163 ]
  %temp86.2 = phi float [ %result.i100, %IF167 ], [ %temp86.1, %ENDIF163 ]
  %temp87.2 = phi float [ %result.i96, %IF167 ], [ %temp87.1, %ENDIF163 ]
  %temp92.8 = phi float [ %tmp728, %IF167 ], [ %temp92.7, %ENDIF163 ]
  %temp93.2 = phi float [ %tmp729, %IF167 ], [ %temp93.1, %ENDIF163 ]
  %temp94.2 = phi float [ %tmp730, %IF167 ], [ %temp94.1, %ENDIF163 ]
  %tmp731 = fcmp oge float %tmp181, 2.480000e+03
  %tmp732 = sext i1 %tmp731 to i32
  %tmp733 = bitcast i32 %tmp732 to float
  %tmp734 = fcmp olt float %tmp181, 2.530000e+03
  %tmp735 = sext i1 %tmp734 to i32
  %tmp736 = bitcast i32 %tmp735 to float
  %tmp737 = bitcast float %tmp733 to i32
  %tmp738 = bitcast float %tmp736 to i32
  %tmp739 = and i32 %tmp737, %tmp738
  %tmp740 = bitcast i32 %tmp739 to float
  %tmp741 = bitcast float %tmp740 to i32
  %tmp742 = icmp ne i32 %tmp741, 0
  br i1 %tmp742, label %IF170, label %ENDIF169

IF170:                                            ; preds = %ENDIF166
  %tmp743 = fmul float %result.i, 5.000000e-01
  %tmp744 = fcmp uge float 0x3FE4CCCCC0000000, %tmp743
  %tmp745 = select i1 %tmp744, float 0x3FE4CCCCC0000000, float %tmp743
  %tmp746 = fcmp uge float %tmp745, 0x3FC99999A0000000
  %tmp747 = select i1 %tmp746, float 0x3FC99999A0000000, float %tmp745
  %one.sub.a.i89 = fsub float 1.000000e+00, %tmp747
  %one.sub.ac.i90 = fmul float %one.sub.a.i89, %tmp304
  %mul.i91 = fmul float %result.i156, %tmp304
  %result.i92 = fadd float %mul.i91, %one.sub.ac.i90
  %one.sub.a.i85 = fsub float 1.000000e+00, %tmp747
  %one.sub.ac.i86 = fmul float %one.sub.a.i85, %tmp305
  %mul.i87 = fmul float %result.i152, %tmp305
  %result.i88 = fadd float %mul.i87, %one.sub.ac.i86
  %one.sub.a.i81 = fsub float 1.000000e+00, %tmp747
  %one.sub.ac.i82 = fmul float %one.sub.a.i81, %tmp306
  %mul.i83 = fmul float %result.i148, %tmp306
  %result.i84 = fadd float %mul.i83, %one.sub.ac.i82
  %one.sub.a.i77 = fsub float 1.000000e+00, %tmp747
  %one.sub.ac.i78 = fmul float %one.sub.a.i77, %tmp307
  %mul.i79 = fmul float %result.i144, %tmp307
  %result.i80 = fadd float %mul.i79, %one.sub.ac.i78
  %tmp748 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp749 = insertelement <4 x float> %tmp748, float %tmp334, i32 1
  %tmp750 = insertelement <4 x float> %tmp749, float %tmp335, i32 2
  %tmp751 = insertelement <4 x float> %tmp750, float 0.000000e+00, i32 3
  %tmp752 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp753 = insertelement <4 x float> %tmp752, float %tmp65, i32 1
  %tmp754 = insertelement <4 x float> %tmp753, float %tmp67, i32 2
  %tmp755 = insertelement <4 x float> %tmp754, float 0.000000e+00, i32 3
  %tmp756 = call float @llvm.r600.dot4(<4 x float> %tmp751, <4 x float> %tmp755)
  %tmp757 = fcmp uge float 0x3FEB333340000000, %tmp756
  %tmp758 = select i1 %tmp757, float 0x3FEB333340000000, float %tmp756
  %tmp759 = fmul float %tmp8, %tmp758
  %tmp760 = fmul float %tmp13, %tmp758
  %tmp761 = fmul float %tmp18, %tmp758
  %tmp762 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp763 = insertelement <4 x float> %tmp762, float %tmp35, i32 1
  %tmp764 = insertelement <4 x float> %tmp763, float %tmp36, i32 2
  %tmp765 = insertelement <4 x float> %tmp764, float 0.000000e+00, i32 3
  %tmp766 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp767 = insertelement <4 x float> %tmp766, float %tmp65, i32 1
  %tmp768 = insertelement <4 x float> %tmp767, float %tmp67, i32 2
  %tmp769 = insertelement <4 x float> %tmp768, float 0.000000e+00, i32 3
  %tmp770 = call float @llvm.r600.dot4(<4 x float> %tmp765, <4 x float> %tmp769)
  %tmp771 = fcmp uge float 0x3FECCCCCC0000000, %tmp770
  %tmp772 = select i1 %tmp771, float 0x3FECCCCCC0000000, float %tmp770
  %tmp773 = fmul float %tmp759, %tmp772
  %tmp774 = fmul float %tmp760, %tmp772
  %tmp775 = fmul float %tmp761, %tmp772
  br label %ENDIF169

ENDIF169:                                         ; preds = %IF170, %ENDIF166
  %temp84.3 = phi float [ %result.i92, %IF170 ], [ %temp84.2, %ENDIF166 ]
  %temp85.3 = phi float [ %result.i88, %IF170 ], [ %temp85.2, %ENDIF166 ]
  %temp86.3 = phi float [ %result.i84, %IF170 ], [ %temp86.2, %ENDIF166 ]
  %temp87.3 = phi float [ %result.i80, %IF170 ], [ %temp87.2, %ENDIF166 ]
  %temp92.9 = phi float [ %tmp773, %IF170 ], [ %temp92.8, %ENDIF166 ]
  %temp93.3 = phi float [ %tmp774, %IF170 ], [ %temp93.2, %ENDIF166 ]
  %temp94.3 = phi float [ %tmp775, %IF170 ], [ %temp94.2, %ENDIF166 ]
  %tmp776 = fcmp oge float %tmp181, 2.530000e+03
  %tmp777 = sext i1 %tmp776 to i32
  %tmp778 = bitcast i32 %tmp777 to float
  %tmp779 = fcmp olt float %tmp181, 2.670000e+03
  %tmp780 = sext i1 %tmp779 to i32
  %tmp781 = bitcast i32 %tmp780 to float
  %tmp782 = bitcast float %tmp778 to i32
  %tmp783 = bitcast float %tmp781 to i32
  %tmp784 = and i32 %tmp782, %tmp783
  %tmp785 = bitcast i32 %tmp784 to float
  %tmp786 = bitcast float %tmp785 to i32
  %tmp787 = icmp ne i32 %tmp786, 0
  br i1 %tmp787, label %IF173, label %ENDIF172

IF173:                                            ; preds = %ENDIF169
  %tmp788 = fmul float %result.i, 5.000000e-01
  %tmp789 = fcmp uge float 0x3FE4CCCCC0000000, %tmp788
  %tmp790 = select i1 %tmp789, float 0x3FE4CCCCC0000000, float %tmp788
  %tmp791 = fcmp uge float %tmp790, 0x3FB99999A0000000
  %tmp792 = select i1 %tmp791, float 0x3FB99999A0000000, float %tmp790
  %one.sub.a.i73 = fsub float 1.000000e+00, %tmp792
  %one.sub.ac.i74 = fmul float %one.sub.a.i73, %tmp304
  %mul.i75 = fmul float %result.i172, %tmp304
  %result.i76 = fadd float %mul.i75, %one.sub.ac.i74
  %one.sub.a.i69 = fsub float 1.000000e+00, %tmp792
  %one.sub.ac.i70 = fmul float %one.sub.a.i69, %tmp305
  %mul.i71 = fmul float %result.i168, %tmp305
  %result.i72 = fadd float %mul.i71, %one.sub.ac.i70
  %one.sub.a.i65 = fsub float 1.000000e+00, %tmp792
  %one.sub.ac.i66 = fmul float %one.sub.a.i65, %tmp306
  %mul.i67 = fmul float %result.i164, %tmp306
  %result.i68 = fadd float %mul.i67, %one.sub.ac.i66
  %one.sub.a.i61 = fsub float 1.000000e+00, %tmp792
  %one.sub.ac.i62 = fmul float %one.sub.a.i61, %tmp307
  %mul.i63 = fmul float %result.i160, %tmp307
  %result.i64 = fadd float %mul.i63, %one.sub.ac.i62
  %tmp793 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp794 = insertelement <4 x float> %tmp793, float %tmp334, i32 1
  %tmp795 = insertelement <4 x float> %tmp794, float %tmp335, i32 2
  %tmp796 = insertelement <4 x float> %tmp795, float 0.000000e+00, i32 3
  %tmp797 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp798 = insertelement <4 x float> %tmp797, float %tmp65, i32 1
  %tmp799 = insertelement <4 x float> %tmp798, float %tmp67, i32 2
  %tmp800 = insertelement <4 x float> %tmp799, float 0.000000e+00, i32 3
  %tmp801 = call float @llvm.r600.dot4(<4 x float> %tmp796, <4 x float> %tmp800)
  %tmp802 = fcmp uge float 0x3FEB333340000000, %tmp801
  %tmp803 = select i1 %tmp802, float 0x3FEB333340000000, float %tmp801
  %tmp804 = fmul float %tmp8, %tmp803
  %tmp805 = fmul float %tmp13, %tmp803
  %tmp806 = fmul float %tmp18, %tmp803
  %tmp807 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp808 = insertelement <4 x float> %tmp807, float %tmp35, i32 1
  %tmp809 = insertelement <4 x float> %tmp808, float %tmp36, i32 2
  %tmp810 = insertelement <4 x float> %tmp809, float 0.000000e+00, i32 3
  %tmp811 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp812 = insertelement <4 x float> %tmp811, float %tmp65, i32 1
  %tmp813 = insertelement <4 x float> %tmp812, float %tmp67, i32 2
  %tmp814 = insertelement <4 x float> %tmp813, float 0.000000e+00, i32 3
  %tmp815 = call float @llvm.r600.dot4(<4 x float> %tmp810, <4 x float> %tmp814)
  %tmp816 = fcmp uge float 0x3FECCCCCC0000000, %tmp815
  %tmp817 = select i1 %tmp816, float 0x3FECCCCCC0000000, float %tmp815
  %tmp818 = fmul float %tmp804, %tmp817
  %tmp819 = fmul float %tmp805, %tmp817
  %tmp820 = fmul float %tmp806, %tmp817
  br label %ENDIF172

ENDIF172:                                         ; preds = %IF173, %ENDIF169
  %temp84.4 = phi float [ %result.i76, %IF173 ], [ %temp84.3, %ENDIF169 ]
  %temp85.4 = phi float [ %result.i72, %IF173 ], [ %temp85.3, %ENDIF169 ]
  %temp86.4 = phi float [ %result.i68, %IF173 ], [ %temp86.3, %ENDIF169 ]
  %temp87.4 = phi float [ %result.i64, %IF173 ], [ %temp87.3, %ENDIF169 ]
  %temp92.10 = phi float [ %tmp818, %IF173 ], [ %temp92.9, %ENDIF169 ]
  %temp93.4 = phi float [ %tmp819, %IF173 ], [ %temp93.3, %ENDIF169 ]
  %temp94.4 = phi float [ %tmp820, %IF173 ], [ %temp94.3, %ENDIF169 ]
  %tmp821 = fcmp oge float %tmp181, 2.670000e+03
  %tmp822 = sext i1 %tmp821 to i32
  %tmp823 = bitcast i32 %tmp822 to float
  %tmp824 = bitcast float %tmp823 to i32
  %tmp825 = icmp ne i32 %tmp824, 0
  br i1 %tmp825, label %IF176, label %ENDIF175

IF176:                                            ; preds = %ENDIF172
  %tmp826 = fmul float %result.i, 0x3FB99999A0000000
  %tmp827 = fcmp uge float 0.000000e+00, %tmp826
  %tmp828 = select i1 %tmp827, float 0.000000e+00, float %tmp826
  %tmp829 = fcmp uge float %tmp828, 0x3FD99999A0000000
  %tmp830 = select i1 %tmp829, float 0x3FD99999A0000000, float %tmp828
  %one.sub.a.i57 = fsub float 1.000000e+00, %tmp830
  %one.sub.ac.i58 = fmul float %one.sub.a.i57, %tmp304
  %mul.i59 = fmul float %result.i172, %tmp304
  %result.i60 = fadd float %mul.i59, %one.sub.ac.i58
  %one.sub.a.i53 = fsub float 1.000000e+00, %tmp830
  %one.sub.ac.i54 = fmul float %one.sub.a.i53, %tmp305
  %mul.i55 = fmul float %result.i168, %tmp305
  %result.i56 = fadd float %mul.i55, %one.sub.ac.i54
  %one.sub.a.i49 = fsub float 1.000000e+00, %tmp830
  %one.sub.ac.i50 = fmul float %one.sub.a.i49, %tmp306
  %mul.i51 = fmul float %result.i164, %tmp306
  %result.i52 = fadd float %mul.i51, %one.sub.ac.i50
  %one.sub.a.i45 = fsub float 1.000000e+00, %tmp830
  %one.sub.ac.i46 = fmul float %one.sub.a.i45, %tmp307
  %mul.i47 = fmul float %result.i160, %tmp307
  %result.i48 = fadd float %mul.i47, %one.sub.ac.i46
  %tmp831 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp832 = insertelement <4 x float> %tmp831, float %tmp334, i32 1
  %tmp833 = insertelement <4 x float> %tmp832, float %tmp335, i32 2
  %tmp834 = insertelement <4 x float> %tmp833, float 0.000000e+00, i32 3
  %tmp835 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp836 = insertelement <4 x float> %tmp835, float %tmp65, i32 1
  %tmp837 = insertelement <4 x float> %tmp836, float %tmp67, i32 2
  %tmp838 = insertelement <4 x float> %tmp837, float 0.000000e+00, i32 3
  %tmp839 = call float @llvm.r600.dot4(<4 x float> %tmp834, <4 x float> %tmp838)
  %tmp840 = fcmp uge float 0x3FEB333340000000, %tmp839
  %tmp841 = select i1 %tmp840, float 0x3FEB333340000000, float %tmp839
  %tmp842 = fmul float %tmp8, %tmp841
  %tmp843 = fmul float %tmp13, %tmp841
  %tmp844 = fmul float %tmp18, %tmp841
  %tmp845 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp846 = insertelement <4 x float> %tmp845, float %tmp35, i32 1
  %tmp847 = insertelement <4 x float> %tmp846, float %tmp36, i32 2
  %tmp848 = insertelement <4 x float> %tmp847, float 0.000000e+00, i32 3
  %tmp849 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp850 = insertelement <4 x float> %tmp849, float %tmp65, i32 1
  %tmp851 = insertelement <4 x float> %tmp850, float %tmp67, i32 2
  %tmp852 = insertelement <4 x float> %tmp851, float 0.000000e+00, i32 3
  %tmp853 = call float @llvm.r600.dot4(<4 x float> %tmp848, <4 x float> %tmp852)
  %tmp854 = fcmp uge float 0x3FECCCCCC0000000, %tmp853
  %tmp855 = select i1 %tmp854, float 0x3FECCCCCC0000000, float %tmp853
  %tmp856 = fmul float %tmp842, %tmp855
  %tmp857 = fmul float %tmp843, %tmp855
  %tmp858 = fmul float %tmp844, %tmp855
  br label %ENDIF175

ENDIF175:                                         ; preds = %IF176, %ENDIF172
  %temp84.5 = phi float [ %result.i60, %IF176 ], [ %temp84.4, %ENDIF172 ]
  %temp85.5 = phi float [ %result.i56, %IF176 ], [ %temp85.4, %ENDIF172 ]
  %temp86.5 = phi float [ %result.i52, %IF176 ], [ %temp86.4, %ENDIF172 ]
  %temp87.5 = phi float [ %result.i48, %IF176 ], [ %temp87.4, %ENDIF172 ]
  %temp92.11 = phi float [ %tmp856, %IF176 ], [ %temp92.10, %ENDIF172 ]
  %temp93.5 = phi float [ %tmp857, %IF176 ], [ %temp93.4, %ENDIF172 ]
  %temp94.5 = phi float [ %tmp858, %IF176 ], [ %temp94.4, %ENDIF172 ]
  %tmp859 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 10)
  %tmp860 = extractelement <4 x float> %tmp859, i32 0
  %tmp861 = fcmp olt float %tmp860, %tmp181
  %tmp862 = sext i1 %tmp861 to i32
  %tmp863 = bitcast i32 %tmp862 to float
  %tmp864 = bitcast float %tmp863 to i32
  %tmp865 = icmp ne i32 %tmp864, 0
  br i1 %tmp865, label %IF179, label %ENDIF178

IF179:                                            ; preds = %ENDIF175
  %tmp866 = fadd float %result.i, 1.000000e+00
  %tmp867 = fadd float %result.i, 1.000000e+00
  %tmp868 = fadd float %result.i, 1.000000e+00
  %tmp869 = insertelement <4 x float> undef, float %tmp43, i32 0
  %tmp870 = insertelement <4 x float> %tmp869, float %tmp44, i32 1
  %tmp871 = insertelement <4 x float> %tmp870, float %tmp45, i32 2
  %tmp872 = insertelement <4 x float> %tmp871, float 0.000000e+00, i32 3
  %tmp873 = insertelement <4 x float> undef, float %tmp43, i32 0
  %tmp874 = insertelement <4 x float> %tmp873, float %tmp44, i32 1
  %tmp875 = insertelement <4 x float> %tmp874, float %tmp45, i32 2
  %tmp876 = insertelement <4 x float> %tmp875, float 0.000000e+00, i32 3
  %tmp877 = call float @llvm.r600.dot4(<4 x float> %tmp872, <4 x float> %tmp876)
  %tmp878 = call float @llvm.r600.recipsqrt.clamped.f32(float %tmp877)
  %tmp879 = fmul float %tmp45, %tmp878
  %tmp880 = call float @llvm.fabs.f32(float %tmp879)
  %tmp881 = fmul float %tmp178, 0x3FECCCCCC0000000
  %tmp882 = fadd float %tmp881, %tmp880
  %tmp883 = fadd float %tmp882, 0xBFEFAE1480000000
  %tmp884 = fmul float %tmp883, 0xC043FFFE20000000
  %max.0.i1 = call float @llvm.maxnum.f32(float %tmp884, float 0.000000e+00)
  %clamp.i2 = call float @llvm.minnum.f32(float %max.0.i1, float 1.000000e+00)
  %tmp886 = fmul float 2.000000e+00, %clamp.i2
  %tmp887 = fsub float -0.000000e+00, %tmp886
  %tmp888 = fadd float 3.000000e+00, %tmp887
  %tmp889 = fmul float %clamp.i2, %tmp888
  %tmp890 = fmul float %clamp.i2, %tmp889
  %one.sub.a.i41 = fsub float 1.000000e+00, %tmp890
  %one.sub.ac.i42 = fmul float %one.sub.a.i41, %tmp866
  %mul.i43 = fmul float %temp84.5, %tmp866
  %result.i44 = fadd float %mul.i43, %one.sub.ac.i42
  %one.sub.a.i37 = fsub float 1.000000e+00, %tmp890
  %one.sub.ac.i38 = fmul float %one.sub.a.i37, %tmp867
  %mul.i39 = fmul float %temp85.5, %tmp867
  %result.i40 = fadd float %mul.i39, %one.sub.ac.i38
  %one.sub.a.i33 = fsub float 1.000000e+00, %tmp890
  %one.sub.ac.i34 = fmul float %one.sub.a.i33, %tmp868
  %mul.i35 = fmul float %temp86.5, %tmp868
  %result.i36 = fadd float %mul.i35, %one.sub.ac.i34
  %one.sub.a.i29 = fsub float 1.000000e+00, %tmp890
  %one.sub.ac.i30 = fmul float %one.sub.a.i29, 0.000000e+00
  %mul.i31 = fmul float %temp87.5, 0.000000e+00
  %result.i32 = fadd float %mul.i31, %one.sub.ac.i30
  %tmp891 = fmul float %result.i, 5.000000e-01
  %tmp892 = fcmp uge float 0x3FE4CCCCC0000000, %tmp891
  %tmp893 = select i1 %tmp892, float 0x3FE4CCCCC0000000, float %tmp891
  %tmp894 = fcmp uge float %tmp893, 0x3FE3333340000000
  %tmp895 = select i1 %tmp894, float 0x3FE3333340000000, float %tmp893
  %one.sub.a.i25 = fsub float 1.000000e+00, %tmp895
  %one.sub.ac.i26 = fmul float %one.sub.a.i25, %temp84.5
  %mul.i27 = fmul float %result.i44, %temp84.5
  %result.i28 = fadd float %mul.i27, %one.sub.ac.i26
  %one.sub.a.i21 = fsub float 1.000000e+00, %tmp895
  %one.sub.ac.i22 = fmul float %one.sub.a.i21, %temp85.5
  %mul.i23 = fmul float %result.i40, %temp85.5
  %result.i24 = fadd float %mul.i23, %one.sub.ac.i22
  %one.sub.a.i17 = fsub float 1.000000e+00, %tmp895
  %one.sub.ac.i18 = fmul float %one.sub.a.i17, %temp86.5
  %mul.i19 = fmul float %result.i36, %temp86.5
  %result.i20 = fadd float %mul.i19, %one.sub.ac.i18
  %one.sub.a.i13 = fsub float 1.000000e+00, %tmp895
  %one.sub.ac.i14 = fmul float %one.sub.a.i13, %temp87.5
  %mul.i15 = fmul float %result.i32, %temp87.5
  %result.i16 = fadd float %mul.i15, %one.sub.ac.i14
  %tmp896 = insertelement <4 x float> undef, float %tmp333, i32 0
  %tmp897 = insertelement <4 x float> %tmp896, float %tmp334, i32 1
  %tmp898 = insertelement <4 x float> %tmp897, float %tmp335, i32 2
  %tmp899 = insertelement <4 x float> %tmp898, float 0.000000e+00, i32 3
  %tmp900 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp901 = insertelement <4 x float> %tmp900, float %tmp65, i32 1
  %tmp902 = insertelement <4 x float> %tmp901, float %tmp67, i32 2
  %tmp903 = insertelement <4 x float> %tmp902, float 0.000000e+00, i32 3
  %tmp904 = call float @llvm.r600.dot4(<4 x float> %tmp899, <4 x float> %tmp903)
  %tmp905 = fcmp uge float 0x3FE99999A0000000, %tmp904
  %tmp906 = select i1 %tmp905, float 0x3FE99999A0000000, float %tmp904
  %tmp907 = fmul float %tmp8, %tmp906
  %tmp908 = fmul float %tmp13, %tmp906
  %tmp909 = fmul float %tmp18, %tmp906
  %tmp910 = insertelement <4 x float> undef, float %tmp34, i32 0
  %tmp911 = insertelement <4 x float> %tmp910, float %tmp35, i32 1
  %tmp912 = insertelement <4 x float> %tmp911, float %tmp36, i32 2
  %tmp913 = insertelement <4 x float> %tmp912, float 0.000000e+00, i32 3
  %tmp914 = insertelement <4 x float> undef, float %tmp63, i32 0
  %tmp915 = insertelement <4 x float> %tmp914, float %tmp65, i32 1
  %tmp916 = insertelement <4 x float> %tmp915, float %tmp67, i32 2
  %tmp917 = insertelement <4 x float> %tmp916, float 0.000000e+00, i32 3
  %tmp918 = call float @llvm.r600.dot4(<4 x float> %tmp913, <4 x float> %tmp917)
  %tmp919 = fcmp uge float 0x3FECCCCCC0000000, %tmp918
  %tmp920 = select i1 %tmp919, float 0x3FECCCCCC0000000, float %tmp918
  %tmp921 = fmul float %tmp907, %tmp920
  %tmp922 = fmul float %tmp908, %tmp920
  %tmp923 = fmul float %tmp909, %tmp920
  br label %ENDIF178

ENDIF178:                                         ; preds = %IF179, %ENDIF175
  %temp84.6 = phi float [ %result.i28, %IF179 ], [ %temp84.5, %ENDIF175 ]
  %temp85.6 = phi float [ %result.i24, %IF179 ], [ %temp85.5, %ENDIF175 ]
  %temp86.6 = phi float [ %result.i20, %IF179 ], [ %temp86.5, %ENDIF175 ]
  %temp87.6 = phi float [ %result.i16, %IF179 ], [ %temp87.5, %ENDIF175 ]
  %temp92.12 = phi float [ %tmp921, %IF179 ], [ %temp92.11, %ENDIF175 ]
  %temp93.6 = phi float [ %tmp922, %IF179 ], [ %temp93.5, %ENDIF175 ]
  %temp94.6 = phi float [ %tmp923, %IF179 ], [ %temp94.5, %ENDIF175 ]
  %tmp924 = fmul float %tmp55, %temp92.12
  %tmp925 = fmul float %tmp57, %temp93.6
  %tmp926 = fmul float %tmp59, %temp94.6
  %tmp927 = fmul float %tmp61, 0.000000e+00
  %tmp928 = fmul float %temp84.6, %tmp924
  %tmp929 = fmul float %temp85.6, %tmp925
  %tmp930 = fmul float %temp86.6, %tmp926
  %tmp931 = fmul float %temp87.6, %tmp927
  %tmp932 = fmul float %tmp2, -2.000000e+00
  %tmp933 = fadd float %tmp932, 1.000000e+00
  %tmp934 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 23)
  %tmp935 = extractelement <4 x float> %tmp934, i32 2
  %tmp936 = fsub float -0.000000e+00, %tmp935
  %tmp937 = fadd float %tmp933, %tmp936
  %tmp938 = fdiv float 1.000000e+00, %tmp937
  %tmp939 = load <4 x float>, <4 x float> addrspace(8)* getelementptr ([1024 x <4 x float>], [1024 x <4 x float>] addrspace(8)* null, i64 0, i32 24)
  %tmp940 = extractelement <4 x float> %tmp939, i32 2
  %tmp941 = fmul float %tmp940, %tmp938
  %tmp942 = fsub float -0.000000e+00, %tmp53
  %tmp943 = fmul float %tmp942, %tmp53
  %tmp944 = fmul float %tmp943, %tmp941
  %tmp945 = fmul float %tmp944, %tmp941
  %tmp946 = fmul float %tmp945, 0x3FF7154760000000
  %tmp947 = call float @llvm.exp2.f32(float %tmp946)
  %tmp948 = fcmp oeq float %tmp53, 1.000000e+00
  %tmp949 = sext i1 %tmp948 to i32
  %tmp950 = bitcast i32 %tmp949 to float
  %tmp951 = bitcast float %tmp950 to i32
  %tmp952 = icmp ne i32 %tmp951, 0
  %.184 = select i1 %tmp952, float 1.000000e+00, float %tmp947
  %one.sub.a.i9 = fsub float 1.000000e+00, %.184
  %one.sub.ac.i10 = fmul float %one.sub.a.i9, %tmp47
  %mul.i11 = fmul float %tmp928, %tmp47
  %result.i12 = fadd float %mul.i11, %one.sub.ac.i10
  %one.sub.a.i5 = fsub float 1.000000e+00, %.184
  %one.sub.ac.i6 = fmul float %one.sub.a.i5, %tmp49
  %mul.i7 = fmul float %tmp929, %tmp49
  %result.i8 = fadd float %mul.i7, %one.sub.ac.i6
  %one.sub.a.i1 = fsub float 1.000000e+00, %.184
  %one.sub.ac.i2 = fmul float %one.sub.a.i1, %tmp51
  %mul.i3 = fmul float %tmp930, %tmp51
  %result.i4 = fadd float %mul.i3, %one.sub.ac.i2
  %tmp953 = insertelement <4 x float> undef, float %result.i12, i32 0
  %tmp954 = insertelement <4 x float> %tmp953, float %result.i8, i32 1
  %tmp955 = insertelement <4 x float> %tmp954, float %result.i4, i32 2
  %tmp956 = insertelement <4 x float> %tmp955, float %tmp931, i32 3
  call void @llvm.r600.store.swizzle(<4 x float> %tmp956, i32 0, i32 0)
  ret void
}

declare float @llvm.r600.dot4(<4 x float>, <4 x float>) #1
declare float @llvm.r600.recipsqrt.clamped.f32(float) #1
declare float @llvm.fabs.f32(float) #1
declare float @llvm.exp2.f32(float) #1
declare void @llvm.r600.store.swizzle(<4 x float>, i32, i32)
declare <4 x float> @llvm.r600.tex(<4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32) #1
declare float @llvm.minnum.f32(float, float) #1
declare float @llvm.maxnum.f32(float, float) #1

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
