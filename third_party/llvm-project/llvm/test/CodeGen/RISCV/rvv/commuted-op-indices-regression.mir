# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -march=riscv64 -mattr=+experimental-v -run-pass=simple-register-coalescing %s -o - 2>&1 | FileCheck %s

# This test used to crash in the register coalescer when the target would
# return the out-of-bounds CommuteAnyOperandIndex for one of its commutable
# operand indices.

--- |
  target triple = "riscv64"
  target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

  define void @commuted_op_indices() {
    unreachable
  }
...
---
name:            commuted_op_indices
tracksRegLiveness: true
registers:
  - { id: 0, class: vr, preferred-register: '' }
  - { id: 1, class: vrnov0, preferred-register: '' }
  - { id: 2, class: vrnov0, preferred-register: '' }
  - { id: 3, class: vr, preferred-register: '' }
body:             |
  bb.0:
    liveins: $v0, $v1, $v2
    ; CHECK-LABEL: name: commuted_op_indices
    ; CHECK: liveins: $v0, $v1, $v2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:vr = COPY $v0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:vrnov0 = COPY $v1
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vrnov0 = COPY $v2
    ; CHECK-NEXT: [[PseudoVNMSUB_VV_M1_:%[0-9]+]]:vr = PseudoVNMSUB_VV_M1 [[PseudoVNMSUB_VV_M1_]], [[COPY1]], [[COPY2]], -1, 6, 1, implicit $vl, implicit $vtype
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:vr = COPY [[PseudoVNMSUB_VV_M1_]]
    ; CHECK-NEXT: dead [[COPY2]]:vr = PseudoVSLL_VI_M1 [[COPY2]], 11, $noreg, 6, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v0 = COPY [[PseudoVNMSUB_VV_M1_]]
    ; CHECK-NEXT: PseudoRET implicit $v0
    %0:vr = COPY $v0
    %1:vrnov0 = COPY $v1
    %2:vrnov0 = COPY $v2
    %0:vr = PseudoVNMSUB_VV_M1 %0, %1, killed %2, -1, 6, 1, implicit $vl, implicit $vtype
    %3:vr = COPY %0
    %3:vr = PseudoVSLL_VI_M1 %3, 11, $noreg, 6, implicit $vl, implicit $vtype
    $v0 = COPY %0
    PseudoRET implicit $v0
...
