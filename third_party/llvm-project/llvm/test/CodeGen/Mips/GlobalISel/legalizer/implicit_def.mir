# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=mipsel-linux-gnu -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s -check-prefixes=MIPS32
--- |

  declare void @f_i32(i32)
  define void @g_i32() {entry: ret void}

  declare void @f_i64(i64)
  define void @g_i64() {entry: ret void}

  declare void @f_float(float)
  define void @g_float() {entry: ret void}

  declare void @f_double(double)
  define void @g_double() {entry: ret void}

...
---
name:            g_i32
alignment:       2
tracksRegLiveness: true
body:             |
  bb.1.entry:
    ; MIPS32-LABEL: name: g_i32
    ; MIPS32: [[DEF:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; MIPS32: ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: $a0 = COPY [[DEF]](s32)
    ; MIPS32: JAL @f_i32, csr_o32, implicit-def $ra, implicit-def $sp, implicit $a0
    ; MIPS32: ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: RetRA
    %0:_(s32) = G_IMPLICIT_DEF
    ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    $a0 = COPY %0(s32)
    JAL @f_i32, csr_o32, implicit-def $ra, implicit-def $sp, implicit $a0
    ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    RetRA

...
---
name:            g_i64
alignment:       2
tracksRegLiveness: true
body:             |
  bb.1.entry:
    ; MIPS32-LABEL: name: g_i64
    ; MIPS32: [[DEF:%[0-9]+]]:_(s64) = G_IMPLICIT_DEF
    ; MIPS32: ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[DEF]](s64)
    ; MIPS32: $a0 = COPY [[UV]](s32)
    ; MIPS32: $a1 = COPY [[UV1]](s32)
    ; MIPS32: JAL @f_i64, csr_o32, implicit-def $ra, implicit-def $sp, implicit $a0, implicit $a1
    ; MIPS32: ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: RetRA
    %0:_(s64) = G_IMPLICIT_DEF
    ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    %1:_(s32), %2:_(s32) = G_UNMERGE_VALUES %0(s64)
    $a0 = COPY %1(s32)
    $a1 = COPY %2(s32)
    JAL @f_i64, csr_o32, implicit-def $ra, implicit-def $sp, implicit $a0, implicit $a1
    ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    RetRA

...
---
name:            g_float
alignment:       2
tracksRegLiveness: true
body:             |
  bb.1.entry:
    ; MIPS32-LABEL: name: g_float
    ; MIPS32: [[DEF:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
    ; MIPS32: ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: $f12 = COPY [[DEF]](s32)
    ; MIPS32: JAL @f_float, csr_o32, implicit-def $ra, implicit-def $sp, implicit $f12
    ; MIPS32: ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: RetRA
    %0:_(s32) = G_IMPLICIT_DEF
    ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    $f12 = COPY %0(s32)
    JAL @f_float, csr_o32, implicit-def $ra, implicit-def $sp, implicit $f12
    ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    RetRA

...
---
name:            g_double
alignment:       2
tracksRegLiveness: true
body:             |
  bb.1.entry:
    ; MIPS32-LABEL: name: g_double
    ; MIPS32: [[DEF:%[0-9]+]]:_(s64) = G_IMPLICIT_DEF
    ; MIPS32: ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: $d6 = COPY [[DEF]](s64)
    ; MIPS32: JAL @f_double, csr_o32, implicit-def $ra, implicit-def $sp, implicit $d6
    ; MIPS32: ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    ; MIPS32: RetRA
    %0:_(s64) = G_IMPLICIT_DEF
    ADJCALLSTACKDOWN 16, 0, implicit-def $sp, implicit $sp
    $d6 = COPY %0(s64)
    JAL @f_double, csr_o32, implicit-def $ra, implicit-def $sp, implicit $d6
    ADJCALLSTACKUP 16, 0, implicit-def $sp, implicit $sp
    RetRA

...
