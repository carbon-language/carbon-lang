# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=mipsel-linux-gnu -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s -check-prefixes=MIPS32
# RUN: llc -O0 -mtriple=mipsel-linux-gnu -run-pass=legalizer -mcpu=mips32r6 -verify-machineinstrs %s -o - | FileCheck %s -check-prefixes=MIPS32R6
--- |

  @float_align1 = common global float 0.000000e+00, align 1
  @float_align2 = common global float 0.000000e+00, align 2
  @float_align4 = common global float 0.000000e+00, align 4
  @float_align8 = common global float 0.000000e+00, align 8
  @i32_align1 = common global i32 0, align 1
  @i32_align2 = common global i32 0, align 2
  @i32_align4 = common global i32 0, align 4
  @i32_align8 = common global i32 0, align 8

  define void @store_float_align1(float %a) {
  entry:
    store float %a, float* @float_align1, align 1
    ret void
  }

  define void @store_float_align2(float %a) {
  entry:
    store float %a, float* @float_align2, align 2
    ret void
  }

  define void @store_float_align4(float %a) {
  entry:
    store float %a, float* @float_align4, align 4
    ret void
  }

  define void @store_float_align8(float %a) {
  entry:
    store float %a, float* @float_align8, align 8
    ret void
  }

  define void @store_i32_align1(i32 signext %a) {
  entry:
    store i32 %a, i32* @i32_align1, align 1
    ret void
  }

  define void @store_i32_align2(i32 signext %a) {
  entry:
    store i32 %a, i32* @i32_align2, align 2
    ret void
  }

  define void @store_i32_align4(i32 signext %a) {
  entry:
    store i32 %a, i32* @i32_align4, align 4
    ret void
  }

  define void @store_i32_align8(i32 signext %a) {
  entry:
    store i32 %a, i32* @i32_align8, align 8
    ret void
  }

...
---
name:            store_float_align1
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $f12

    ; MIPS32-LABEL: name: store_float_align1
    ; MIPS32: liveins: $f12
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align1
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align1, align 1)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_float_align1
    ; MIPS32R6: liveins: $f12
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align1
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align1, align 1)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $f12
    %1:_(p0) = G_GLOBAL_VALUE @float_align1
    G_STORE %0(s32), %1(p0) :: (store (s32) into @float_align1, align 1)
    RetRA

...
---
name:            store_float_align2
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $f12

    ; MIPS32-LABEL: name: store_float_align2
    ; MIPS32: liveins: $f12
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align2
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align2, align 2)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_float_align2
    ; MIPS32R6: liveins: $f12
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align2
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align2, align 2)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $f12
    %1:_(p0) = G_GLOBAL_VALUE @float_align2
    G_STORE %0(s32), %1(p0) :: (store (s32) into @float_align2, align 2)
    RetRA

...
---
name:            store_float_align4
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $f12

    ; MIPS32-LABEL: name: store_float_align4
    ; MIPS32: liveins: $f12
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align4
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align4)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_float_align4
    ; MIPS32R6: liveins: $f12
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align4
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align4)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $f12
    %1:_(p0) = G_GLOBAL_VALUE @float_align4
    G_STORE %0(s32), %1(p0) :: (store (s32) into @float_align4)
    RetRA

...
---
name:            store_float_align8
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $f12

    ; MIPS32-LABEL: name: store_float_align8
    ; MIPS32: liveins: $f12
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align8
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align8, align 8)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_float_align8
    ; MIPS32R6: liveins: $f12
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @float_align8
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @float_align8, align 8)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $f12
    %1:_(p0) = G_GLOBAL_VALUE @float_align8
    G_STORE %0(s32), %1(p0) :: (store (s32) into @float_align8, align 8)
    RetRA

...
---
name:            store_i32_align1
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0

    ; MIPS32-LABEL: name: store_i32_align1
    ; MIPS32: liveins: $a0
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align1
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align1, align 1)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_i32_align1
    ; MIPS32R6: liveins: $a0
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align1
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align1, align 1)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $a0
    %1:_(p0) = G_GLOBAL_VALUE @i32_align1
    G_STORE %0(s32), %1(p0) :: (store (s32) into @i32_align1, align 1)
    RetRA

...
---
name:            store_i32_align2
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0

    ; MIPS32-LABEL: name: store_i32_align2
    ; MIPS32: liveins: $a0
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align2
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align2, align 2)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_i32_align2
    ; MIPS32R6: liveins: $a0
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align2
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align2, align 2)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $a0
    %1:_(p0) = G_GLOBAL_VALUE @i32_align2
    G_STORE %0(s32), %1(p0) :: (store (s32) into @i32_align2, align 2)
    RetRA

...
---
name:            store_i32_align4
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0

    ; MIPS32-LABEL: name: store_i32_align4
    ; MIPS32: liveins: $a0
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align4
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align4)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_i32_align4
    ; MIPS32R6: liveins: $a0
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align4
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align4)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $a0
    %1:_(p0) = G_GLOBAL_VALUE @i32_align4
    G_STORE %0(s32), %1(p0) :: (store (s32) into @i32_align4)
    RetRA

...
---
name:            store_i32_align8
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0

    ; MIPS32-LABEL: name: store_i32_align8
    ; MIPS32: liveins: $a0
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align8
    ; MIPS32: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align8, align 8)
    ; MIPS32: RetRA
    ; MIPS32R6-LABEL: name: store_i32_align8
    ; MIPS32R6: liveins: $a0
    ; MIPS32R6: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32R6: [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @i32_align8
    ; MIPS32R6: G_STORE [[COPY]](s32), [[GV]](p0) :: (store (s32) into @i32_align8, align 8)
    ; MIPS32R6: RetRA
    %0:_(s32) = COPY $a0
    %1:_(p0) = G_GLOBAL_VALUE @i32_align8
    G_STORE %0(s32), %1(p0) :: (store (s32) into @i32_align8, align 8)
    RetRA

...
