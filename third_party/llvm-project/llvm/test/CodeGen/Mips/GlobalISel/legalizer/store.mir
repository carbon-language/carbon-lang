# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=mipsel-linux-gnu -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s -check-prefixes=MIPS32
--- |

  define void @store_i32(i32* %ptr) { entry: ret void }
  define void @store_i64(i64* %ptr) { entry: ret void }
  define void @store_float(float* %ptr) { entry: ret void }
  define void @store_double(double* %ptr) { entry: ret void }

...
---
name:            store_i32
alignment:       4
legalized:       true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0, $a1

    ; MIPS32-LABEL: name: store_i32
    ; MIPS32: liveins: $a0, $a1
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[COPY1:%[0-9]+]]:_(p0) = COPY $a1
    ; MIPS32: G_STORE [[COPY]](s32), [[COPY1]](p0) :: (store (s32) into %ir.ptr)
    ; MIPS32: RetRA
    %0:_(s32) = COPY $a0
    %1:_(p0) = COPY $a1
    G_STORE %0(s32), %1(p0) :: (store (s32) into %ir.ptr)
    RetRA

...
---
name:            store_i64
alignment:       4
legalized:       true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0, $a1, $a2

    ; MIPS32-LABEL: name: store_i64
    ; MIPS32: liveins: $a0, $a1, $a2
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[COPY1:%[0-9]+]]:_(s32) = COPY $a1
    ; MIPS32: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[COPY]](s32), [[COPY1]](s32)
    ; MIPS32: [[COPY2:%[0-9]+]]:_(p0) = COPY $a2
    ; MIPS32: G_STORE [[MV]](s64), [[COPY2]](p0) :: (store (s64) into %ir.ptr)
    ; MIPS32: RetRA
    %2:_(s32) = COPY $a0
    %3:_(s32) = COPY $a1
    %0:_(s64) = G_MERGE_VALUES %2(s32), %3(s32)
    %1:_(p0) = COPY $a2
    G_STORE %0(s64), %1(p0) :: (store (s64) into %ir.ptr)
    RetRA

...
---
name:            store_float
alignment:       4
legalized:       true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a1, $f12

    ; MIPS32-LABEL: name: store_float
    ; MIPS32: liveins: $a1, $f12
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; MIPS32: [[COPY1:%[0-9]+]]:_(p0) = COPY $a1
    ; MIPS32: G_STORE [[COPY]](s32), [[COPY1]](p0) :: (store (s32) into %ir.ptr)
    ; MIPS32: RetRA
    %0:_(s32) = COPY $f12
    %1:_(p0) = COPY $a1
    G_STORE %0(s32), %1(p0) :: (store (s32) into %ir.ptr)
    RetRA

...
---
name:            store_double
alignment:       4
legalized:       true
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a2, $d6

    ; MIPS32-LABEL: name: store_double
    ; MIPS32: liveins: $a2, $d6
    ; MIPS32: [[COPY:%[0-9]+]]:_(s64) = COPY $d6
    ; MIPS32: [[COPY1:%[0-9]+]]:_(p0) = COPY $a2
    ; MIPS32: G_STORE [[COPY]](s64), [[COPY1]](p0) :: (store (s64) into %ir.ptr)
    ; MIPS32: RetRA
    %0:_(s64) = COPY $d6
    %1:_(p0) = COPY $a2
    G_STORE %0(s64), %1(p0) :: (store (s64) into %ir.ptr)
    RetRA

...
