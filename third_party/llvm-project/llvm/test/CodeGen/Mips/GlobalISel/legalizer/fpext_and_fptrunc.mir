# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=mipsel-linux-gnu -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s -check-prefixes=FP32
# RUN: llc -O0 -mtriple=mipsel-linux-gnu -mattr=+fp64,+mips32r2 -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s -check-prefixes=FP64
--- |

  define void @fpext() {entry: ret void}
  define void @fptrunc() {entry: ret void}

...
---
name:            fpext
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $f12

    ; FP32-LABEL: name: fpext
    ; FP32: liveins: $f12
    ; FP32: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; FP32: [[FPEXT:%[0-9]+]]:_(s64) = G_FPEXT [[COPY]](s32)
    ; FP32: $d0 = COPY [[FPEXT]](s64)
    ; FP32: RetRA implicit $d0
    ; FP64-LABEL: name: fpext
    ; FP64: liveins: $f12
    ; FP64: [[COPY:%[0-9]+]]:_(s32) = COPY $f12
    ; FP64: [[FPEXT:%[0-9]+]]:_(s64) = G_FPEXT [[COPY]](s32)
    ; FP64: $d0 = COPY [[FPEXT]](s64)
    ; FP64: RetRA implicit $d0
    %0:_(s32) = COPY $f12
    %1:_(s64) = G_FPEXT %0(s32)
    $d0 = COPY %1(s64)
    RetRA implicit $d0

...
---
name:            fptrunc
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $d6

    ; FP32-LABEL: name: fptrunc
    ; FP32: liveins: $d6
    ; FP32: [[COPY:%[0-9]+]]:_(s64) = COPY $d6
    ; FP32: [[FPTRUNC:%[0-9]+]]:_(s32) = G_FPTRUNC [[COPY]](s64)
    ; FP32: $f0 = COPY [[FPTRUNC]](s32)
    ; FP32: RetRA implicit $f0
    ; FP64-LABEL: name: fptrunc
    ; FP64: liveins: $d6
    ; FP64: [[COPY:%[0-9]+]]:_(s64) = COPY $d6
    ; FP64: [[FPTRUNC:%[0-9]+]]:_(s32) = G_FPTRUNC [[COPY]](s64)
    ; FP64: $f0 = COPY [[FPTRUNC]](s32)
    ; FP64: RetRA implicit $f0
    %0:_(s64) = COPY $d6
    %1:_(s32) = G_FPTRUNC %0(s64)
    $f0 = COPY %1(s32)
    RetRA implicit $f0

...
