# RUN: llc -O0 -mtriple=mipsel-linux-gnu -run-pass=mips-prelegalizer-combiner -verify-machineinstrs -debug %s -o - 2>&1 | FileCheck %s -check-prefixes=MIPS32
# REQUIRES: asserts
--- |

  define void @f() {entry: ret void}

...
---
# Check that we report attempts to combine each instruction from the input
# since none of them gets changed in this test.

# MIPS32-LABEL: Generic MI Combiner for: f
# MIPS32: Try combining %0:_(s32) = COPY $a0
# MIPS32: Try combining %1:_(s32) = COPY $a1
# MIPS32: Try combining %2:_(s32) = G_ADD %1:_, %0:_
# MIPS32: Try combining $v0 = COPY %2:_(s32)
# MIPS32: Try combining RetRA implicit $v0
name:            f
alignment:       4
tracksRegLiveness: true
body:             |
  bb.1.entry:
    liveins: $a0, $a1

    ; MIPS32-LABEL: name: f
    ; MIPS32: liveins: $a0, $a1
    ; MIPS32: [[COPY:%[0-9]+]]:_(s32) = COPY $a0
    ; MIPS32: [[COPY1:%[0-9]+]]:_(s32) = COPY $a1
    ; MIPS32: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[COPY1]], [[COPY]]
    ; MIPS32: $v0 = COPY [[ADD]](s32)
    ; MIPS32: RetRA implicit $v0
    %0:_(s32) = COPY $a0
    %1:_(s32) = COPY $a1
    %2:_(s32) = G_ADD %1, %0
    $v0 = COPY %2(s32)
    RetRA implicit $v0

...
