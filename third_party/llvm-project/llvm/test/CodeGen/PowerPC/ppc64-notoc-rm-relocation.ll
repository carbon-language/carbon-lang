; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs -mtriple=powerpc64le-unknown-linux-gnu \
; RUN:   -mcpu=pwr10 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr \
; RUN:   < %s | FileCheck %s --check-prefix LE-P10
; RUN: llc -verify-machineinstrs -mtriple=powerpc64-unknown-linux-gnu \
; RUN:   -mcpu=pwr10 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr \
; RUN:   < %s | FileCheck %s --check-prefix BE-P10
; RUN: llc -verify-machineinstrs -mtriple=powerpc64le-unknown-linux-gnu \
; RUN:   -mcpu=pwr9 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr \
; RUN:   < %s | FileCheck %s --check-prefix LE-P9
; RUN: llc -verify-machineinstrs -mtriple=powerpc64-unknown-linux-gnu \
; RUN:   -mcpu=pwr9 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr \
; RUN:   < %s | FileCheck %s --check-prefix BE-P9

; Function Attrs: nounwind strictfp
define dso_local signext i32 @main() #0 {
; LE-P10-LABEL: main:
; LE-P10:       # %bb.0: # %_main_entry
; LE-P10-NEXT:    mflr r0
; LE-P10-NEXT:    std r0, 16(r1)
; LE-P10-NEXT:    stdu r1, -32(r1)
; LE-P10-NEXT:    bl callee@notoc
; LE-P10-NEXT:    li r3, 0
; LE-P10-NEXT:    addi r1, r1, 32
; LE-P10-NEXT:    ld r0, 16(r1)
; LE-P10-NEXT:    mtlr r0
; LE-P10-NEXT:    blr
;
; BE-P10-LABEL: main:
; BE-P10:       # %bb.0: # %_main_entry
; BE-P10-NEXT:    mflr r0
; BE-P10-NEXT:    std r0, 16(r1)
; BE-P10-NEXT:    stdu r1, -112(r1)
; BE-P10-NEXT:    bl callee
; BE-P10-NEXT:    nop
; BE-P10-NEXT:    li r3, 0
; BE-P10-NEXT:    addi r1, r1, 112
; BE-P10-NEXT:    ld r0, 16(r1)
; BE-P10-NEXT:    mtlr r0
; BE-P10-NEXT:    blr
;
; LE-P9-LABEL: main:
; LE-P9:       # %bb.0: # %_main_entry
; LE-P9-NEXT:    mflr r0
; LE-P9-NEXT:    std r0, 16(r1)
; LE-P9-NEXT:    stdu r1, -32(r1)
; LE-P9-NEXT:    bl callee
; LE-P9-NEXT:    nop
; LE-P9-NEXT:    li r3, 0
; LE-P9-NEXT:    addi r1, r1, 32
; LE-P9-NEXT:    ld r0, 16(r1)
; LE-P9-NEXT:    mtlr r0
; LE-P9-NEXT:    blr
;
; BE-P9-LABEL: main:
; BE-P9:       # %bb.0: # %_main_entry
; BE-P9-NEXT:    mflr r0
; BE-P9-NEXT:    std r0, 16(r1)
; BE-P9-NEXT:    stdu r1, -112(r1)
; BE-P9-NEXT:    bl callee
; BE-P9-NEXT:    nop
; BE-P9-NEXT:    li r3, 0
; BE-P9-NEXT:    addi r1, r1, 112
; BE-P9-NEXT:    ld r0, 16(r1)
; BE-P9-NEXT:    mtlr r0
; BE-P9-NEXT:    blr
_main_entry:
  call void @callee() #1
  ret i32 0
}

; Function Attrs: strictfp
declare void @callee() #1

attributes #0 = { nounwind strictfp }
attributes #1 = { strictfp }
