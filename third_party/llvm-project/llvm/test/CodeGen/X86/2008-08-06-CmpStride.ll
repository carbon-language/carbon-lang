; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-- < %s | FileCheck %s

@.str = internal constant [4 x i8] c"%d\0A\00"

declare i32 @printf(i8* noalias , ...) nounwind

define i32 @main() nounwind {
; CHECK-LABEL: main:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rbx
; CHECK-NEXT:    movl $10271, %ebx # imm = 0x281F
; CHECK-NEXT:    .p2align 4, 0x90
; CHECK-NEXT:  .LBB0_1: # %forbody
; CHECK-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    movl $.str, %edi
; CHECK-NEXT:    movl %ebx, %esi
; CHECK-NEXT:    xorl %eax, %eax
; CHECK-NEXT:    callq printf@PLT
; CHECK-NEXT:    addl $-10, %ebx
; CHECK-NEXT:    cmpl $1, %ebx
; CHECK-NEXT:    jne .LBB0_1
; CHECK-NEXT:  # %bb.2: # %afterfor
; CHECK-NEXT:    xorl %eax, %eax
; CHECK-NEXT:    popq %rbx
; CHECK-NEXT:    retq
entry:
        br label %forbody

forbody:
        %i.0 = phi i32 [ 0, %entry ], [ %inc, %forbody ]                ; <i32>[#uses=3]
        %sub14 = sub i32 1027, %i.0             ; <i32> [#uses=1]
        %mul15 = mul i32 %sub14, 10             ; <i32> [#uses=1]
        %add166 = or i32 %mul15, 1              ; <i32> [#uses=1] *
        call i32 (i8*, ...) @printf( i8* noalias  getelementptr ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %add166 ) nounwind
        %inc = add i32 %i.0, 1          ; <i32> [#uses=3]
        %cmp = icmp ne i32 %inc, 1027          ; <i1> [#uses=1]
        br i1 %cmp, label %forbody, label %afterfor

afterfor:               ; preds = %forcond
        ret i32 0
}
