; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 --x86-asm-syntax=intel -mtriple=x86_64 -mcpu=skylake-avx512 -mattr=fma,avx512f < %s | FileCheck %s

define <4 x i1> @selecter(i64 %0) {
; CHECK-LABEL: selecter:
; CHECK:       # %bb.0:
; CHECK-NEXT:    xor eax, eax
; CHECK-NEXT:    cmp rdi, 2
; CHECK-NEXT:    setge al
; CHECK-NEXT:    lea eax, [rax + 2*rax]
; CHECK-NEXT:    kmovd k0, eax
; CHECK-NEXT:    vpmovm2d xmm0, k0
; CHECK-NEXT:    ret
  %2 = icmp slt i64 0, %0
  %3 = select i1 %2, <4 x i1> <i1 true, i1 true, i1 false, i1 false>, <4 x i1> zeroinitializer
  %4 = insertvalue [4 x <4 x i1>] zeroinitializer, <4 x i1> %3, 0
  %5 = icmp slt i64 1, %0
  %6 = select i1 %5, <4 x i1> <i1 true, i1 true, i1 false, i1 false>, <4 x i1> zeroinitializer
  %7 = insertvalue [4 x <4 x i1>] %4, <4 x i1> %6, 1
  %8 = icmp slt i64 2, %0
  %9 = select i1 %8, <4 x i1> <i1 true, i1 true, i1 false, i1 false>, <4 x i1> zeroinitializer
  %10 = insertvalue [4 x <4 x i1>] %7, <4 x i1> %9, 2
  %11 = icmp slt i64 3, %0
  %12 = select i1 %11, <4 x i1> <i1 true, i1 true, i1 false, i1 false>, <4 x i1> zeroinitializer
  %13 = insertvalue [4 x <4 x i1>] %10, <4 x i1> %12, 3
  %14 = extractvalue [4 x <4 x i1>] %13, 1
  ret <4 x i1> %14
}
