# RUN: not --crash llc -o - -run-pass=instruction-select -pass-remarks-missed=gisel %s 2>&1 | FileCheck %s
--- |
  target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64--linux-gnu"

  define void @test_check_type() {
    ret void
  }
...
---
name:            test_check_type
alignment:       16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }
body:             |
  bb.1 (%ir-block.0):
    liveins: $edi

    ; Intrinsic::x86_flags_read_u64 has a higher prority than
    ; Intrinsic::x86_int in the match table and both of them
    ; have two operands, but their IntrinsicID index is different.
    ; This causes crash when executing GIM_CheckType for Intrinsic::x86_int
    ; because Operand0 is not a register.
    ; Make sure we check whether the first operand is a register and
    ; reject if it's not.
    ; CHECK: cannot select: G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.x86.int)
    %1:gpr(s32) = COPY $edi
    %0:gpr(s8) = G_TRUNC %1(s32)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.x86.int), %0(s8)
    RET 0

...
