# RUN: llc -march=x86-64 -run-pass none -o - %s | FileCheck %s
# This test ensures that the MIR parser parses heap alloc markers correctly.

--- |
  declare i8* @f(i32) nounwind

  define i32 @test(i32 %x) nounwind {
  entry:
    call i8* @f(i32 %x), !heapallocsite !2
    ret i32 undef
  }

  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!3, !4}

  !0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, nameTableKind: None)
  !1 = !DIFile(filename: "test.ll", directory: "")
  !2 = !{}
  !3 = !{i32 2, !"Debug Info Version", i32 3}
  !4 = !{i32 1, !"wchar_size", i32 2}

...
---
name: test
# CHECK-LABEL: name: test
tracksRegLiveness: true
frameInfo:
  hasCalls: true
body: |
  bb.0.entry:
    liveins: $ecx

    %0:gr32 = COPY $ecx
    ADJCALLSTACKDOWN64 32, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp
    $ecx = COPY %0
    CALL64pcrel32 @f, csr_win64, implicit $rsp, implicit $ssp, implicit $ecx, implicit-def $rsp, implicit-def $ssp, implicit-def dead $rax, heap-alloc-marker !2
  ; CHECK: CALL64pcrel32 @f, {{.*}} heap-alloc-marker !2
    ADJCALLSTACKUP64 32, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp
    $eax = MOV32r0 implicit-def dead $eflags
    RET 0, killed $eax

...
