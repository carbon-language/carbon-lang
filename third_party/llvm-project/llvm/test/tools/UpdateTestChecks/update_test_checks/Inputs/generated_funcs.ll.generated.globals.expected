; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals --include-generated-funcs
; RUN: opt -passes=hotcoldsplit -hotcoldsplit-threshold=0 -S < %s | FileCheck %s
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

@G = external dso_local global i32, align 4

define void @foo(i32) {
  %2 = icmp eq i32 %0, 0
  tail call void @_Z10sideeffectv()
  br i1 %2, label %sink, label %exit

sink:
  tail call void @_Z10sideeffectv()
  call void @llvm.trap()
  unreachable

exit:
  ret void
}

define void @bar(i32) {
  %2 = icmp eq i32 %0, 0
  tail call void @_Z10sideeffectv()
  br i1 %2, label %sink, label %exit

sink:
  tail call void @_Z10sideeffectv()
  call void @llvm.trap()
  unreachable

exit:
  ret void
}

declare void @llvm.trap() noreturn cold
declare void @_Z10sideeffectv()
;.
; CHECK: @[[G:[a-zA-Z0-9_$"\\.-]+]] = external dso_local global i32, align 4
;.
; CHECK-LABEL: @foo(
; CHECK-NEXT:    [[TMP2:%.*]] = icmp eq i32 [[TMP0:%.*]], 0
; CHECK-NEXT:    tail call void @_Z10sideeffectv()
; CHECK-NEXT:    br i1 [[TMP2]], label [[CODEREPL:%.*]], label [[EXIT:%.*]]
; CHECK:       codeRepl:
; CHECK-NEXT:    call void @foo.cold.1() #[[ATTR2:[0-9]+]]
; CHECK-NEXT:    ret void
; CHECK:       exit:
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: @bar(
; CHECK-NEXT:    [[TMP2:%.*]] = icmp eq i32 [[TMP0:%.*]], 0
; CHECK-NEXT:    tail call void @_Z10sideeffectv()
; CHECK-NEXT:    br i1 [[TMP2]], label [[CODEREPL:%.*]], label [[EXIT:%.*]]
; CHECK:       codeRepl:
; CHECK-NEXT:    call void @bar.cold.1() #[[ATTR2]]
; CHECK-NEXT:    ret void
; CHECK:       exit:
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: @foo.cold.1(
; CHECK-NEXT:  newFuncRoot:
; CHECK-NEXT:    br label [[SINK:%.*]]
; CHECK:       sink:
; CHECK-NEXT:    tail call void @_Z10sideeffectv()
; CHECK-NEXT:    call void @llvm.trap()
; CHECK-NEXT:    unreachable
;
;
; CHECK-LABEL: @bar.cold.1(
; CHECK-NEXT:  newFuncRoot:
; CHECK-NEXT:    br label [[SINK:%.*]]
; CHECK:       sink:
; CHECK-NEXT:    tail call void @_Z10sideeffectv()
; CHECK-NEXT:    call void @llvm.trap()
; CHECK-NEXT:    unreachable
;
;.
; CHECK: attributes #[[ATTR0:[0-9]+]] = { cold noreturn nounwind }
; CHECK: attributes #[[ATTR1:[0-9]+]] = { cold minsize noreturn }
; CHECK: attributes #[[ATTR2]] = { noinline }
;.
