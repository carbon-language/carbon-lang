## This test ensures llvm-size emits a helpful error message when dumping a symbol table
## whose sh_size isn't a multiple of the symbol size (sh_size % sizeof(Elf_Sym) != 0).

## a) Test sysv output format.
# RUN: yaml2obj -DBITS=32 -DSIZE=33 -DDYNSIZE=32 %s -o %t.32-bit.o
# RUN: not llvm-size --common --format=sysv %t.32-bit.o 2>&1 | FileCheck -DSIZE=33 -DSYMSIZE=16 %s
# RUN: yaml2obj -DBITS=64 -DSIZE=49 -DDYNSIZE=48 %s -o %t.64-bit.o
# RUN: not llvm-size --common --format=sysv %t.64-bit.o 2>&1 | FileCheck -DSIZE=49 -DSYMSIZE=24 %s

## b) Test berkeley output format.
# RUN: not llvm-size --common --format=berkeley %t.32-bit.o 2>&1 | FileCheck -DSIZE=33 -DSYMSIZE=16 %s
# RUN: not llvm-size --common --format=berkeley %t.64-bit.o 2>&1 | FileCheck -DSIZE=49 -DSYMSIZE=24 %s

# CHECK: error: {{.*}} section [index 1] has an invalid sh_size ([[SIZE]]) which is not a multiple of its sh_entsize ([[SYMSIZE]])

--- !ELF
FileHeader:
  Class:   ELFCLASS[[BITS]]
  Data:    ELFDATA2LSB
  Type:    ET_DYN
  Machine: EM_X86_64
Sections:
  - Name:    .symtab
    Type:    SHT_SYMTAB
    Size:    [[SIZE]]
