RUN: rm -rf %t && mkdir -p %t/foo/bar/

RUN: yaml2obj %S/Inputs/elf.yaml -o %t/foo/elf.o
RUN: cp %t/foo/elf.o %t/foo/bar/elf.o
RUN: cp %t/foo/bar/elf.o %t/delete.o

Test that modules can be added with absolute paths when the archive is created using an absolute path

RUN: llvm-ar rTc %t/absolute-1.ar %t/foo/elf.o %t/delete.o %t/foo/bar/elf.o
RUN: llvm-ar dT %t/absolute-1.ar delete.o

RUN: FileCheck -input-file=%t/absolute-1.ar --check-prefixes=THIN,CHECK %s -DPATH=%/t/
RUN: llvm-ar t %t/absolute-1.ar | FileCheck %s -DPATH=%/t/

These tests must be run in %t/foo. cd %t is included on each line to make debugging this test case easier.

Test that modules can be added with absolute paths when the archive is created using a relative path

RUN: cd %t/foo && llvm-ar rTc bar/absolute-2.ar %t/foo/elf.o %t/delete.o %t/foo/bar/elf.o
RUN: cd %t/foo && llvm-ar dT bar/absolute-2.ar %t/delete.o

RUN: FileCheck -input-file=%t/foo/bar/absolute-2.ar --check-prefixes=THIN,CHECK %s -DPATH=%/t/
RUN: llvm-ar t %t/foo/bar/absolute-2.ar | FileCheck %s -DPATH=%/t/

Test that modules can be added with relative paths when the archive is created using a relative path

RUN: cd %t/foo && llvm-ar rTc ../relative-1.ar elf.o ../delete.o bar/elf.o
RUN: cd %t/foo && llvm-ar dT ../relative-1.ar delete.o

RUN: FileCheck -input-file=%t/relative-1.ar --check-prefixes=THIN,CHECK %s -DPATH=
RUN: llvm-ar t %t/relative-1.ar | FileCheck %s -DPATH=%/t/

Test that modules can be added with relative paths when the archive is created using a absolute path

RUN: cd %t/foo && llvm-ar rTc %t/relative-2.ar elf.o ../delete.o bar/elf.o
RUN: cd %t/foo && llvm-ar dT %t/relative-2.ar delete.o

RUN: FileCheck -input-file=%t/relative-2.ar --check-prefixes=THIN,CHECK %s -DPATH=
RUN: llvm-ar t %t/relative-2.ar | FileCheck %s -DPATH=%/t/

THIN: !<thin>

CHECK-NOT: delete.o
CHECK: {{^}}[[PATH]]foo/elf.o
CHECK: {{^}}[[PATH]]foo/bar/elf.o
