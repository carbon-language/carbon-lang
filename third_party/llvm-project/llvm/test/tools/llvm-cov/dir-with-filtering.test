RUN: llvm-profdata merge %S/Inputs/dir-with-filtering.proftext -o %t.profdata

// Test TEXT both files

RUN: llvm-cov show %S/Inputs/dir-with-filtering.covmapping -o %t.text -instr-profile %t.profdata -path-equivalence=/tmp,%S/Inputs -name=main -name=f2

RUN: FileCheck -input-file=%t.text/index.txt %s -check-prefix=TEXT-INDEX
TEXT-INDEX: dir-with-filtering1.cpp 1 0 100.00% 1 0 100.00% 4 0 100.00%
TEXT-INDEX: dir-with-filtering2.cpp 1 1 0.00% 1 1 0.00% 3 3 0.00%

RUN: FileCheck -input-file=%t.text/coverage/tmp/dir-with-filtering1.cpp.txt %s -check-prefix=TEXT-FILE1
TEXT-FILE1: Coverage Report
TEXT-FILE1-NOT: _Z2f1v:
TEXT-FILE1: main:
TEXT-FILE1-NEXT: {{.*}}int main()
TEXT-FILE1-NOT: _Z2f1v:

RUN: FileCheck -input-file=%t.text/coverage/tmp/dir-with-filtering2.cpp.txt %s -check-prefix=TEXT-FILE2
TEXT-FILE2: Coverage Report
TEXT-FILE2-NOT: _Z2f3v:
TEXT-FILE2: _Z2f2v:
TEXT-FILE2-NEXT: {{.*}}int f2()
TEXT-FILE2-NOT: _Z2f3v:

// Test TEXT one file

RUN: llvm-cov show %S/Inputs/dir-with-filtering.covmapping -o %t.text_one_file -instr-profile %t.profdata -path-equivalence=/tmp,%S/Inputs -name=main -name=f2 %S/Inputs/dir-with-filtering1.cpp

RUN: FileCheck -input-file=%t.text_one_file/index.txt %s -check-prefix=TEXT-INDEX-ONE-FILE
TEXT-INDEX-ONE-FILE: dir-with-filtering1.cpp 1 0 100.00% 1 0 100.00% 4 0 100.00%
TEXT-INDEX-ONE-FILE-NOT: dir-with-filtering2.cpp

RUN: FileCheck -input-file=%t.text_one_file/coverage/tmp/dir-with-filtering1.cpp.txt %s -check-prefix=TEXT-FILE1

// Test TEXT index file with all functions in one file filtered out

RUN: llvm-cov show %S/Inputs/dir-with-filtering.covmapping -o %t.text_one_func -instr-profile %t.profdata -path-equivalence=/tmp,%S/Inputs -name=main
RUN: FileCheck -input-file=%t.text_one_func/index.txt %s -check-prefix=TEXT-INDEX-ONE-FUNC

TEXT-INDEX-ONE-FUNC-NOT: Files which contain no functions
TEXT-INDEX-ONE-FUNC-NOT: dir-with-filtering2.cpp

// Test HTML both files

RUN: llvm-profdata merge %S/Inputs/dir-with-filtering.proftext -o %t.profdata
RUN: llvm-cov show %S/Inputs/dir-with-filtering.covmapping -format html -o %t.html -instr-profile %t.profdata -path-equivalence=/tmp,%S/Inputs -name=main -name=f2

RUN: FileCheck -input-file=%t.html/index.html %s -check-prefix=HTML-INDEX
HTML-INDEX: <h2>Coverage Report</h2>
HTML-INDEX: dir-with-filtering1.cpp{{.*}}100.00% (1/1){{.*}}100.00% (4/4){{.*}}100.00% (1/1)
HTML-INDEX: dir-with-filtering2.cpp{{.*}}0.00% (0/1){{.*}}0.00% (0/3){{.*}}0.00% (0/1)

RUN: FileCheck -input-file=%t.html/coverage/tmp/dir-with-filtering1.cpp.html %s -check-prefix=HTML-FILE1
HTML-FILE1-NOT: <pre>f1</pre>
HTML-FILE1: <pre>main</pre>
HTML-FILE1-NOT: <pre>f1</pre>
HTML-FILE1: int main()
HTML-FILE1-NOT: <pre>f1</pre>

RUN: FileCheck -input-file=%t.html/coverage/tmp/dir-with-filtering2.cpp.html %s -check-prefix=HTML-FILE2
HTML-FILE2-NOT: <pre>f3</pre>
HTML-FILE2: <pre>_Z2f2v</pre>
HTML-FILE2-NOT: <pre>f3</pre>
HTML-FILE2: int f2()
HTML-FILE2-NOT: <pre>f3</pre>

// Test HTML one file

RUN: llvm-profdata merge %S/Inputs/dir-with-filtering.proftext -o %t.profdata
RUN: llvm-cov show %S/Inputs/dir-with-filtering.covmapping -format html -o %t.html_one_file -instr-profile %t.profdata -path-equivalence=/tmp,%S/Inputs -name=main -name=f2 %S/Inputs/dir-with-filtering1.cpp

RUN: FileCheck -input-file=%t.html_one_file/index.html %s -check-prefix=HTML-INDEX-ONE-FILE
HTML-INDEX-ONE-FILE: <h2>Coverage Report</h2>
HTML-INDEX-ONE-FILE: dir-with-filtering1.cpp{{.*}}100.00% (1/1){{.*}}100.00% (4/4){{.*}}100.00% (1/1)
HTML-INDEX-ONE-FILE-NOT: dir-with-filtering2.cpp

RUN: FileCheck -input-file=%t.html_one_file/coverage/tmp/dir-with-filtering1.cpp.html %s -check-prefix=HTML-FILE1

// Test HTML index file with all functions in one file filtered out

RUN: llvm-cov show %S/Inputs/dir-with-filtering.covmapping -format html -o %t.html_one_func -instr-profile %t.profdata -path-equivalence=/tmp,%S/Inputs -name=main
RUN: FileCheck -input-file=%t.html_one_func/index.html %s -check-prefix=HTML-INDEX-ONE-FUNC

HTML-INDEX-ONE-FUNC-NOT: Files which contain no functions
HTML-INDEX-ONE-FUNC-NOT: dir-with-filtering2.cpp
