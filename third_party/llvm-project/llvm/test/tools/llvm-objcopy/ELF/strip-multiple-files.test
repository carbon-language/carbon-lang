# RUN: yaml2obj %s -o %t.o

# Run llvm-strip normally. This will create a stripped object file for later
# tests so we only have to run FileCheck on it once.
# RUN: cp %t.o %t.1.o
# RUN: llvm-strip --keep-symbol=foo %t.1.o -o %t.stripped.o
# RUN: llvm-readobj --symbols %t.stripped.o | FileCheck %s

# llvm-strip on two files:
# RUN: cp %t.o %t.1.o
# RUN: cp %t.o %t.2.o
# RUN: llvm-strip --keep-symbol=foo %t.1.o %t.2.o
# RUN: cmp %t.1.o %t.stripped.o
# RUN: cmp %t.2.o %t.stripped.o

# llvm-strip on three files:
# RUN: cp %t.o %t.1.o
# RUN: cp %t.o %t.2.o
# RUN: cp %t.o %t.3.o
# RUN: llvm-strip --keep-symbol=foo %t.1.o %t.2.o %t.3.o
# RUN: cmp %t.1.o %t.stripped.o
# RUN: cmp %t.2.o %t.stripped.o
# RUN: cmp %t.3.o %t.stripped.o

# -o cannot be used with multiple input files
# RUN: cp %t.o %t.1.o
# RUN: cp %t.o %t.2.o
# RUN: not llvm-strip --keep-symbol=foo -o %t.stripped.o %t.1.o %t.2.o 2>&1 \
# RUN:   | FileCheck %s --check-prefix=BAD-O-FLAG

!ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  Type:            ET_REL
  Machine:         EM_X86_64
Sections:
  - Name:            .text
    Type:            SHT_PROGBITS
    Flags:           [ SHF_ALLOC, SHF_EXECINSTR ]
Symbols:
  - Name:     foo
    Type:     STT_FUNC
    Section:  .text
    Value:    0x1234
    Size:     8
  - Name:     bar
    Type:     STT_FUNC
    Section:  .text
    Value:    0x5678
    Size:     8

# CHECK:      Symbols [
# CHECK-NEXT:   Symbol {
# CHECK-NEXT:     Name:
# CHECK-NEXT:     Value: 0x0
# CHECK-NEXT:     Size: 0
# CHECK-NEXT:     Binding: Local
# CHECK-NEXT:     Type: None
# CHECK-NEXT:     Other: 0
# CHECK-NEXT:     Section: Undefined
# CHECK-NEXT:   }
# CHECK-NEXT:   Symbol {
# CHECK-NEXT:     Name: foo
# CHECK-NEXT:     Value: 0x1234
# CHECK-NEXT:     Size: 8
# CHECK-NEXT:     Binding: Local
# CHECK-NEXT:     Type: Function
# CHECK-NEXT:     Other: 0
# CHECK-NEXT:     Section: .text
# CHECK-NEXT:   }
# CHECK-NEXT: ]

# BAD-O-FLAG: multiple input files cannot be used in combination with -o
