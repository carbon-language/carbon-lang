# mips64el has a special encoding of the r_info relocation field.
# Test that we support both endianness.

# RUN: yaml2obj %s -DENDIANNESS=ELFDATA2LSB -o %t1-le
# RUN: llvm-objcopy %t1-le %t2-le
# RUN: llvm-readobj --relocations %t2-le | FileCheck %s

# RUN: yaml2obj %s -DENDIANNESS=ELFDATA2MSB -o %t1-be
# RUN: llvm-objcopy %t1-be %t2-be
# RUN: llvm-readobj --relocations %t2-be | FileCheck %s

!ELF
FileHeader:
  Class:   ELFCLASS64
  Data:    [[ENDIANNESS]]
  Type:    ET_REL
  Machine: EM_MIPS
Sections:
  - Name: .text
    Type: SHT_PROGBITS
  - Name: .rela.text
    Type: SHT_RELA
    Relocations:
      - Offset: 8
        Symbol: foo
        Type:   R_MIPS_JALR
Symbols:
  - Name:    foo
    Type:    STT_FUNC
    Section: .text

# CHECK:      Relocations [
# CHECK-NEXT:   Section (2) .rela.text {
# CHECK-NEXT:     0x8 R_MIPS_JALR/R_MIPS_NONE/R_MIPS_NONE foo 0x0
# CHECK-NEXT:   }
# CHECK-NEXT: ]
