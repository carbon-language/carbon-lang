# RUN: yaml2obj %s -o %t
# RUN: llvm-objcopy --discard-all -K foo --keep-symbol bar %t %t2
# RUN: llvm-objcopy -K foo -N foo -N bar --keep-symbol bar -N baz %t %t3
# RUN: llvm-objcopy --discard-all --regex -K '^ba.*' %t %t4
# RUN: llvm-readobj --symbols %t2 | FileCheck %s
# RUN: llvm-readobj --symbols %t3 | FileCheck %s
# RUN: llvm-readobj --symbols %t4 | FileCheck %s --check-prefix=REGEX

# RUN: echo 'foo' > %t.symbols
# RUN: echo 'bar' >> %t.symbols
# RUN: echo '.* # no regex without --regex' >> %t.symbols
# RUN: llvm-objcopy --discard-all --keep-symbols %t.symbols %t %t5
# RUN: llvm-objcopy -K foo -N foo -N bar --keep-symbols %t.symbols -N baz %t %t6
# RUN: llvm-readobj --symbols %t5 | FileCheck %s
# RUN: llvm-readobj --symbols %t6 | FileCheck %s

# RUN: echo 'f.*' > %t.symbols.regex
# RUN: echo '.*ar' >> %t.symbols.regex
# RUN: llvm-objcopy --discard-all --keep-symbols %t.symbols.regex --regex %t %t7
# RUN: cmp %t6 %t7

!ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  Type:            ET_REL
  Machine:         EM_X86_64
Sections:
  - Name:            .text
    Type:            SHT_PROGBITS
    Flags:           [ SHF_ALLOC, SHF_EXECINSTR ]
    Address:         0x1000
    AddressAlign:    0x0000000000000010
    Size:            64
Symbols:
  - Name:     foo
    Type:     STT_FUNC
    Section:  .text
    Value:    0x1000
    Size:     8
  - Name:     bar
    Type:     STT_FUNC
    Section:  .text
    Value:    0x1008
    Size:     8
  - Name:     baz
    Type:     STT_FUNC
    Section:  .text
    Value:    0x1010
    Size:     8

#CHECK: Symbols [
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name:
#CHECK-NEXT:    Value: 0x0
#CHECK-NEXT:    Size: 0
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: None
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: Undefined
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: foo
#CHECK-NEXT:    Value: 0x1000
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: bar
#CHECK-NEXT:    Value: 0x1008
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#CHECK-NEXT:]

#REGEX: Symbols [
#REGEX-NOT: foo
#REGEX: Name: bar
#REGEX: Name: baz
#REGEX: ]
