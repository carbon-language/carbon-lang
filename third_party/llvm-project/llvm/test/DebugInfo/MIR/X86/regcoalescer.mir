# RUN: llc -O1 -filetype=asm -mtriple x86_64-unknown-linux-gnu -mcpu=x86-64 -o - %s  -start-before=simple-register-coalescing -stop-after=simple-register-coalescing | FileCheck %s

--- |
  target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-unknown-linux-gnu"

  define i32 @main() local_unnamed_addr !dbg !14 {
  entry:
    %shl = shl i32 undef, undef, !dbg !19
    tail call void @llvm.dbg.value(metadata i32 %shl, metadata !18, metadata !DIExpression()), !dbg !20
    ret i32 %shl, !dbg !21
  }

  declare void @llvm.dbg.value(metadata, metadata, metadata)

  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!12, !13}

  !0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.0", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !2)
  !1 = !DIFile(filename: "bar.c", directory: "")
  !2 = !{}
  !7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
  !12 = !{i32 2, !"Debug Info Version", i32 3}
  !13 = !{i32 1, !"wchar_size", i32 4}
  !14 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 12, type: !15, isLocal: false, isDefinition: true, scopeLine: 12, isOptimized: true, unit: !0, retainedNodes: !17)
  !15 = !DISubroutineType(types: !16)
  !16 = !{!7}
  !17 = !{!18}
  !18 = !DILocalVariable(name: "bazinga", scope: !14, file: !1, line: 13, type: !7)
  !19 = !DILocalVariable(name: "bazinga2", scope: !14, file: !1, line: 13, type: !7)
  !20 = !DILocation(line: 14, column: 11, scope: !14)
  !21 = !DILocation(line: 13, column: 7, scope: !14)
  !22 = !DILocation(line: 16, column: 3, scope: !14)

...
---
name:            main
alignment:       16
registers:
  - { id: 0, class: gr32, preferred-register: '' }
body:             |
  bb.0.entry:
    %0 = MOV32r0 implicit-def dead $eflags, debug-location !20
    DBG_VALUE %0, _, !18, !DIExpression(), debug-location !21
    DBG_VALUE %0, _, !19, !DIExpression(), debug-location !22
    $eax = COPY killed %0, debug-location !22
    RET 0, killed $eax, debug-location !22

...

# CHECK: $eax = MOV32r0
# CHECK-NEXT: DBG_VALUE $eax
# CHECK-NEXT: DBG_VALUE $eax
