# Tests the data flow tracer.
REQUIRES: linux, x86_64

# Disabling due to dfs$ prefix to .dfsan suffix change in DFSan.
# TODO(kcc): re-enable.
RUN: false
XFAIL: *

# Build the tracer and the test.
DISABLED: %no_fuzzer_cpp_compiler -c -fno-sanitize=all -fsanitize=dataflow %S/../../lib/fuzzer/dataflow/DataFlow.cpp -o  %t-DataFlow.o
DISABLED: %no_fuzzer_cpp_compiler -c -fno-sanitize=all -fPIC                %S/../../lib/fuzzer/dataflow/DataFlowCallbacks.cpp -o  %t-DataFlowCallbacks.o
DISABLED: %no_fuzzer_cpp_compiler    -fno-sanitize=all -fsanitize=dataflow -fsanitize-coverage=trace-pc-guard,pc-table,bb,trace-cmp   %S/OnlySomeBytesTest.cpp     %t-DataFlow*.o -o %t-DFT
DISABLED: %cpp_compiler %S/OnlySomeBytesTest.cpp -o %t-Fuzz

# Test that the fork mode can collect and use the DFT
DISABLED: rm -rf %t && mkdir %t
DISABLED: not %t-Fuzz -collect_data_flow=%t-DFT -use_value_profile=1 -runs=100000000 -fork=20 2> %t/log
DISABLED: grep BINGO %t/log
