#
# Test framework and SDK search paths.
#   myFrameworks is not an absolute path, so it should not by found in SDK
#   /Custom/Frameworks should be found in SDK
#   /opt/Frameworks should not be found in SDK
#   /System/Library/Frameworks is implicit and should be in SDK
#
# RUN: ld64.lld.darwinold -arch x86_64 -r -test_file_usage -v \
# RUN:        -path_exists myFrameworks \
# RUN:        -path_exists myFrameworks/my.framework/my \
# RUN:        -path_exists /opt/Frameworks \
# RUN:        -path_exists /opt/Frameworks/other.framework/other \
# RUN:        -path_exists /Custom/Frameworks \
# RUN:        -path_exists /Custom/Frameworks/Bar.framework/Bar \
# RUN:        -path_exists /System/Library/Frameworks \
# RUN:        -path_exists /System/Library/Frameworks/Foo.framework/Foo \
# RUN:        -path_exists /SDK/myFrameworks \
# RUN:        -path_exists /SDK/myFrameworks/my.framework/my \
# RUN:        -path_exists /SDK/Custom/Frameworks \
# RUN:        -path_exists /SDK/Custom/Frameworks/Bar.framework/Bar \
# RUN:        -path_exists /SDK/System/Library/Frameworks \
# RUN:        -path_exists /SDK/System/Library/Frameworks/Foo.framework/Foo \
# RUN:        -syslibroot /SDK \
# RUN:        -FmyFrameworks \
# RUN:        -F/Custom/Frameworks \
# RUN:        -F/opt/Frameworks \
# RUN:        -framework my \
# RUN:        -framework Bar \
# RUN:        -framework Foo \
# RUN:        -framework other \
# RUN: 2>&1 | FileCheck %s

# CHECK:        Framework search paths:
# CHECK-NEXT:     myFrameworks
# CHECK-NEXT:     /SDK/Custom/Frameworks
# CHECK-NEXT:     /opt/Frameworks
# CHECK-NEXT:     /SDK/System/Library/Frameworks
# CHECK: Found framework myFrameworks/my.framework/my
# CHECK: Found framework /SDK/Custom/Frameworks/Bar.framework/Bar
# CHECK: Found framework /SDK/System/Library/Frameworks/Foo.framework/Foo
# CHECK: Found framework /opt/Frameworks/other.framework/other
