namespace std {
template <typename _Tp, typename _Alloc = int>
struct vector {
  static void func() { vector *i, *j; i - j; }
};

struct bit_iterator { ~bit_iterator() {} };

inline void operator-(int __x, const bit_iterator &__y) {
}

template <typename _Alloc>
struct vector<bool, _Alloc> : bit_iterator {
  typedef bit_iterator iterator;
};

} // namespace std
