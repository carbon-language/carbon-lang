# Create a fake resource_dir so that the test can find the headers.
# RUN: rm -rf %/t
# RUN: mkdir -p %t/include/ && touch %t/include/foo.h
# RUN: clangd -lit-test -resource-dir=%t < %s | FileCheck -strict-whitespace %s
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":123,"rootPath":"clangd","capabilities":{},"trace":"off"}}
---
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"test:///main.cpp","languageId":"cpp","version":1,"text":"#include <foo.h>"}}}
---
{"jsonrpc":"2.0","id":2,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"test:///main.cpp"}}}
#      CHECK:  "id": 2,
# CHECK-NEXT:  "jsonrpc": "2.0",
# CHECK-NEXT:  "result": [
# CHECK-NEXT:    {
# CHECK-NEXT:      "range": {
# CHECK-NEXT:        "end": {
# CHECK-NEXT:          "character": 16,
# CHECK-NEXT:          "line": 0
# CHECK-NEXT:        },
# CHECK-NEXT:        "start": {
# CHECK-NEXT:          "character": 9,
# CHECK-NEXT:          "line": 0
# CHECK-NEXT:        }
# CHECK-NEXT:      },
# CHECK-NEXT:      "target": "file://{{.*}}/foo.h"
# CHECK-NEXT:    }
# CHECK-NEXT:  ]
# CHECK-NEXT:}

---
{"jsonrpc":"2.0","id":3,"method":"shutdown"}
---
{"jsonrpc":"2.0","method":"exit"}
