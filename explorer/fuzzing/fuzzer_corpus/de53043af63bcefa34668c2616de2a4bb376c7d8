compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    function {
      name {
        name: "F"
      }
      deduced_parameters {
        name: "T"
        type {
          call {
            function {
              identifier {
                name: "ImplicitAs"
              }
            }
            argument {
              tuple_literal {
                fields {
                  type_type_literal {
                  }
                }
              }
            }
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "x"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Expression
        type {
          type_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              identifier {
                name: "x"
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "v"
                type {
                  expression_pattern {
                    expression {
                      operator {
                        op: As
                        arguments {
                          tuple_literal {
                            fields {
                              int_type_literal {
                              }
                            }
                            fields {
                              int_type_literal {
                              }
                            }
                          }
                        }
                        arguments {
                          type_type_literal {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            init {
              tuple_literal {
                fields {
                  int_literal {
                    value: 1
                  }
                }
                fields {
                  int_literal {
                    value: 2
                  }
                }
              }
            }
            is_returned: false
          }
        }
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "w"
                type {
                  expression_pattern {
                    expression {
                      call {
                        function {
                          identifier {
                            name: "F"
                          }
                        }
                        argument {
                          tuple_literal {
                            fields {
                              tuple_literal {
                                fields {
                                  int_type_literal {
                                  }
                                }
                                fields {
                                  int_type_literal {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            init {
              tuple_literal {
                fields {
                  int_literal {
                    value: 3
                  }
                }
                fields {
                  int_literal {
                    value: 4
                  }
                }
              }
            }
            is_returned: false
          }
        }
        statements {
          assign {
            lhs {
              identifier {
                name: "v"
              }
            }
            rhs {
              identifier {
                name: "w"
              }
            }
            op: Plain
          }
        }
        statements {
          return_expression_statement {
            expression {
              index {
                object {
                  identifier {
                    name: "v"
                  }
                }
                offset {
                  int_literal {
                    value: 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
