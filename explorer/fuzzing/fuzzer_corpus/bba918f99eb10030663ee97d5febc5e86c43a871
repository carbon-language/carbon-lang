compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    function {
      name: "Main"
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "t"
                type {
                  auto_pattern {
                  }
                }
              }
            }
            init {
              tuple_literal {
                fields {
                  int_literal {
                    value: 1
                  }
                }
                fields {
                  int_literal {
                    value: 2
                  }
                }
                fields {
                  int_literal {
                    value: 3
                  }
                }
                fields {
                  int_literal {
                    value: 4
                  }
                }
              }
            }
          }
        }
        statements {
          match {
            expression {
              identifier {
                name: "t"
              }
            }
            clauses {
              pattern {
                tuple_pattern {
                  fields {
                    binding_pattern {
                      name: "_"
                      type {
                        expression_pattern {
                          expression {
                            int_type_literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  fields {
                    binding_pattern {
                      name: "_"
                      type {
                        auto_pattern {
                        }
                      }
                    }
                  }
                  fields {
                    binding_pattern {
                      name: "x"
                      type {
                        expression_pattern {
                          expression {
                            int_type_literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  fields {
                    binding_pattern {
                      name: "y"
                      type {
                        auto_pattern {
                        }
                      }
                    }
                  }
                }
              }
              statement {
                return_statement {
                  expression {
                    operator {
                      op: Sub
                      arguments {
                        operator {
                          op: Sub
                          arguments {
                            identifier {
                              name: "y"
                            }
                          }
                          arguments {
                            identifier {
                              name: "x"
                            }
                          }
                        }
                      }
                      arguments {
                        int_literal {
                          value: 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          return_statement {
            expression {
              int_literal {
                value: 1
              }
            }
          }
        }
      }
    }
  }
}
