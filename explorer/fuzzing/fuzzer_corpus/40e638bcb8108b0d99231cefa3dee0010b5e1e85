compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    class_declaration {
      name {
        name: "Point"
      }
      members {
        variable {
          binding {
            name: "x"
            type {
              expression_pattern {
                expression {
                  int_type_literal {
                  }
                }
              }
            }
          }
        }
      }
      members {
        variable {
          binding {
            name: "y"
            type {
              expression_pattern {
                expression {
                  int_type_literal {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "GetX"
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "p"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "Point"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              simple_member_access {
                field: "x"
                object {
                  identifier {
                    name: "p"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              operator {
                op: Sub
                arguments {
                  call {
                    function {
                      identifier {
                        name: "GetX"
                      }
                    }
                    argument {
                      tuple_literal {
                        fields {
                          struct_literal {
                            fields {
                              name: "x"
                              expression {
                                int_literal {
                                  value: 1
                                }
                              }
                            }
                            fields {
                              name: "y"
                              expression {
                                int_literal {
                                  value: 2
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                arguments {
                  int_literal {
                    value: 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
