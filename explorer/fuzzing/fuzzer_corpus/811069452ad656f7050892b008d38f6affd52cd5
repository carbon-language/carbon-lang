compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    function {
      name {
        name: "CompareEqualValues"
      }
      deduced_parameters {
        name: "T"
        type {
          call {
            function {
              identifier {
                name: "EqWith"
              }
            }
            argument {
              tuple_literal {
                fields {
                  designator {
                    name: "Self"
                  }
                }
              }
            }
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "format"
            type {
              expression_pattern {
                expression {
                  string_type_literal {
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "a"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "b"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Omitted
      }
      body {
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      if_expression {
                        condition {
                          operator {
                            op: Eq
                            arguments {
                              identifier {
                                name: "a"
                              }
                            }
                            arguments {
                              identifier {
                                name: "b"
                              }
                            }
                          }
                        }
                        then_expression {
                          int_literal {
                            value: 1
                          }
                        }
                        else_expression {
                          int_literal {
                            value: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      if_expression {
                        condition {
                          operator {
                            op: NotEq
                            arguments {
                              identifier {
                                name: "a"
                              }
                            }
                            arguments {
                              identifier {
                                name: "b"
                              }
                            }
                          }
                        }
                        then_expression {
                          int_literal {
                            value: 0
                          }
                        }
                        else_expression {
                          int_literal {
                            value: 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "CompareDifferentValues"
      }
      deduced_parameters {
        name: "U"
        type {
          call {
            function {
              identifier {
                name: "EqWith"
              }
            }
            argument {
              tuple_literal {
                fields {
                  designator {
                    name: "Self"
                  }
                }
              }
            }
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "format"
            type {
              expression_pattern {
                expression {
                  string_type_literal {
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "a"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "U"
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "b"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "U"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Omitted
      }
      body {
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      if_expression {
                        condition {
                          operator {
                            op: Eq
                            arguments {
                              identifier {
                                name: "a"
                              }
                            }
                            arguments {
                              identifier {
                                name: "b"
                              }
                            }
                          }
                        }
                        then_expression {
                          int_literal {
                            value: 0
                          }
                        }
                        else_expression {
                          int_literal {
                            value: 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      if_expression {
                        condition {
                          operator {
                            op: NotEq
                            arguments {
                              identifier {
                                name: "a"
                              }
                            }
                            arguments {
                              identifier {
                                name: "b"
                              }
                            }
                          }
                        }
                        then_expression {
                          int_literal {
                            value: 1
                          }
                        }
                        else_expression {
                          int_literal {
                            value: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "CompareAll"
      }
      deduced_parameters {
        name: "V"
        type {
          call {
            function {
              identifier {
                name: "EqWith"
              }
            }
            argument {
              tuple_literal {
                fields {
                  designator {
                    name: "Self"
                  }
                }
              }
            }
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "format"
            type {
              expression_pattern {
                expression {
                  string_type_literal {
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "a"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "V"
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "b"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "V"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Omitted
      }
      body {
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareEqualValues"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      identifier {
                        name: "a"
                      }
                    }
                    fields {
                      identifier {
                        name: "a"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareEqualValues"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      identifier {
                        name: "b"
                      }
                    }
                    fields {
                      identifier {
                        name: "b"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareDifferentValues"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      identifier {
                        name: "a"
                      }
                    }
                    fields {
                      identifier {
                        name: "b"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareDifferentValues"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      identifier {
                        name: "format"
                      }
                    }
                    fields {
                      identifier {
                        name: "b"
                      }
                    }
                    fields {
                      identifier {
                        name: "a"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareAll"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      string_literal {
                        value: "bool: {0}"
                      }
                    }
                    fields {
                      bool_literal {
                        value: false
                      }
                    }
                    fields {
                      bool_literal {
                        value: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareAll"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      string_literal {
                        value: "string: {0}"
                      }
                    }
                    fields {
                      string_literal {
                        value: "hello"
                      }
                    }
                    fields {
                      string_literal {
                        value: "world"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CompareAll"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      string_literal {
                        value: "int: {0}"
                      }
                    }
                    fields {
                      int_literal {
                        value: 1
                      }
                    }
                    fields {
                      int_literal {
                        value: 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          return_expression_statement {
            expression {
              int_literal {
                value: 0
              }
            }
          }
        }
      }
    }
  }
}
