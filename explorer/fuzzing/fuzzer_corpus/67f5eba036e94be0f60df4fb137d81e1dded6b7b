compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    function {
      name: "Main"
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "t"
                type {
                  auto_pattern {
                  }
                }
              }
            }
            init {
              tuple_literal {
                fields {
                  tuple_literal {
                    fields {
                      int_literal {
                        value: 1
                      }
                    }
                    fields {
                      int_literal {
                        value: 2
                      }
                    }
                  }
                }
                fields {
                  tuple_literal {
                    fields {
                      int_literal {
                        value: 3
                      }
                    }
                    fields {
                      int_literal {
                        value: 4
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          match {
            expression {
              identifier {
                name: "t"
              }
            }
            clauses {
              pattern {
                tuple_pattern {
                  fields {
                    tuple_pattern {
                      fields {
                        binding_pattern {
                          name: "a"
                          type {
                            auto_pattern {
                            }
                          }
                        }
                      }
                      fields {
                        binding_pattern {
                          name: "b"
                          type {
                            auto_pattern {
                            }
                          }
                        }
                      }
                    }
                  }
                  fields {
                    binding_pattern {
                      name: "c"
                      type {
                        auto_pattern {
                        }
                      }
                    }
                  }
                }
              }
              statement {
                return_statement {
                  expression {
                    operator {
                      op: Add
                      arguments {
                        operator {
                          op: Sub
                          arguments {
                            operator {
                              op: Add
                              arguments {
                                operator {
                                  op: Sub
                                  arguments {
                                    identifier {
                                      name: "a"
                                    }
                                  }
                                  arguments {
                                    identifier {
                                      name: "b"
                                    }
                                  }
                                }
                              }
                              arguments {
                                index {
                                  object {
                                    identifier {
                                      name: "c"
                                    }
                                  }
                                  offset {
                                    int_literal {
                                      value: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                          arguments {
                            index {
                              object {
                                identifier {
                                  name: "c"
                                }
                              }
                              offset {
                                int_literal {
                                  value: 1
                                }
                              }
                            }
                          }
                        }
                      }
                      arguments {
                        int_literal {
                          value: 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          return_statement {
            expression {
              int_literal {
                value: 1
              }
            }
          }
        }
      }
    }
  }
}
