compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    interface {
      name: "HasValueParam"
      members {
        function {
          name: "Go"
          me_pattern {
            binding_pattern {
              name: "me"
              type {
                expression_pattern {
                  expression {
                    identifier {
                      name: "Self"
                    }
                  }
                }
              }
            }
          }
          param_pattern {
          }
          return_term {
            kind: Expression
            type {
              identifier {
                name: "T"
              }
            }
          }
        }
      }
      self {
        name: "Self"
        type {
          type_type_literal {
          }
        }
      }
    }
  }
  declarations {
    impl {
      kind: InternalImpl
      impl_type {
        tuple_literal {
        }
      }
      interface {
        call {
          function {
            identifier {
              name: "HasValueParam"
            }
          }
          argument {
            tuple_literal {
              fields {
                int_type_literal {
                }
              }
              fields {
                int_literal {
                  value: 5
                }
              }
            }
          }
        }
      }
      members {
        function {
          name: "Go"
          me_pattern {
            binding_pattern {
              name: "me"
              type {
                expression_pattern {
                  expression {
                    identifier {
                      name: "Self"
                    }
                  }
                }
              }
            }
          }
          param_pattern {
          }
          return_term {
            kind: Expression
            type {
              int_type_literal {
              }
            }
          }
          body {
            statements {
              return_statement {
                expression {
                  int_literal {
                    value: 42
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name: "Main"
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_statement {
            expression {
              call {
                function {
                  compound_member_access {
                    object {
                      tuple_literal {
                      }
                    }
                    path {
                      simple_member_access {
                        field: "Go"
                        object {
                          call {
                            function {
                              identifier {
                                name: "HasValueParam"
                              }
                            }
                            argument {
                              tuple_literal {
                                fields {
                                  int_type_literal {
                                  }
                                }
                                fields {
                                  int_literal {
                                    value: 5
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                argument {
                  tuple_literal {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
