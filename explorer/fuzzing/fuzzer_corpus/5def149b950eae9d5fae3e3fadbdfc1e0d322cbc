compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    class_declaration {
      name: "C"
      members {
        function {
          name: "F"
          param_pattern {
          }
          return_term {
            kind: Omitted
          }
          body {
          }
        }
      }
      members {
        function {
          name: "G"
          me_pattern {
            binding_pattern {
              name: "me"
              type {
                expression_pattern {
                  expression {
                    identifier {
                      name: "Self"
                    }
                  }
                }
              }
            }
          }
          param_pattern {
          }
          return_term {
            kind: Omitted
          }
          body {
          }
        }
      }
    }
  }
  declarations {
    function {
      name: "H"
      deduced_parameters {
        name: "T"
        type {
          type_type_literal {
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "x"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Omitted
      }
      body {
      }
    }
  }
  declarations {
    function {
      name: "Main"
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "H"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      simple_member_access {
                        field: "F"
                        object {
                          identifier {
                            name: "C"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "H"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      simple_member_access {
                        field: "G"
                        object {
                          identifier {
                            name: "C"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          return_statement {
            expression {
              int_literal {
                value: 0
              }
            }
          }
        }
      }
    }
  }
}
