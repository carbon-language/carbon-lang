compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    interface {
      name: "Similar"
      self {
        name: "Self"
        type {
          type_type_literal {
          }
        }
      }
    }
  }
  declarations {
    impl {
      kind: InternalImpl
      impl_type {
        identifier {
          name: "T"
        }
      }
      interface {
        call {
          function {
            identifier {
              name: "Similar"
            }
          }
          argument {
            tuple_literal {
              fields {
                identifier {
                  name: "T"
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    impl {
      kind: InternalImpl
      impl_type {
        int_type_literal {
        }
      }
      interface {
        call {
          function {
            identifier {
              name: "Similar"
            }
          }
          argument {
            tuple_literal {
              fields {
                identifier {
                  name: "T"
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name: "CheckSimilar"
      deduced_parameters {
        name: "T"
        type {
          type_type_literal {
          }
        }
      }
      deduced_parameters {
        name: "U"
        type {
          call {
            function {
              identifier {
                name: "Similar"
              }
            }
            argument {
              tuple_literal {
                fields {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "a"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "b"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "U"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Omitted
      }
      body {
      }
    }
  }
  declarations {
    function {
      name: "Main"
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "n"
                type {
                  expression_pattern {
                    expression {
                      int_type_literal {
                      }
                    }
                  }
                }
              }
            }
            init {
              int_literal {
                value: 0
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CheckSimilar"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      bool_literal {
                        value: true
                      }
                    }
                    fields {
                      bool_literal {
                        value: false
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "CheckSimilar"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      bool_literal {
                        value: true
                      }
                    }
                    fields {
                      identifier {
                        name: "n"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          return_statement {
            expression {
              int_literal {
                value: 0
              }
            }
          }
        }
      }
    }
  }
}
