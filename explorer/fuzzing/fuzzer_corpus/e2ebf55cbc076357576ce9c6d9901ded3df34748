compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    namespace {
      name {
        name: "N"
      }
    }
  }
  declarations {
    interface {
      name {
        qualifiers: "N"
        name: "Interface"
      }
    }
  }
  declarations {
    class_declaration {
      name {
        qualifiers: "N"
        name: "A"
      }
      type_params {
        fields {
          generic_binding {
            name: "T"
            type {
              identifier {
                name: "Interface"
              }
            }
          }
        }
      }
    }
  }
  declarations {
    interface {
      name {
        qualifiers: "N"
        name: "B"
      }
    }
  }
  declarations {
    constraint {
      name {
        qualifiers: "N"
        name: "C"
      }
    }
  }
  declarations {
    mixin {
      name {
        qualifiers: "N"
        name: "D"
      }
      self {
        name: "Self"
        type {
          type_type_literal {
          }
        }
      }
    }
  }
  declarations {
    choice {
      name {
        qualifiers: "N"
        name: "E"
      }
    }
  }
  declarations {
    function {
      name {
        qualifiers: "N"
        name: "F"
      }
      deduced_parameters {
        name: "T"
        type {
          identifier {
            name: "Interface"
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "a"
            type {
              expression_pattern {
                expression {
                  call {
                    function {
                      identifier {
                        name: "A"
                      }
                    }
                    argument {
                      tuple_literal {
                        fields {
                          identifier {
                            name: "T"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Omitted
      }
      body {
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              int_literal {
                value: 0
              }
            }
          }
        }
      }
    }
  }
}
