compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    namespace {
      name {
        name: "N"
      }
    }
  }
  declarations {
    function {
      name {
        name: "OuterI32"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          type_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              int_type_literal {
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "One"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              int_literal {
                value: 1
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        qualifiers: "N"
        name: "I32"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          type_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              int_type_literal {
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        qualifiers: "N"
        name: "Five"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          call {
            function {
              identifier {
                name: "I32"
              }
            }
            argument {
              tuple_literal {
              }
            }
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              int_literal {
                value: 5
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        qualifiers: "N"
        name: "Six"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          call {
            function {
              identifier {
                name: "OuterI32"
              }
            }
            argument {
              tuple_literal {
              }
            }
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              operator {
                op: Add
                arguments {
                  call {
                    function {
                      identifier {
                        name: "Five"
                      }
                    }
                    argument {
                      tuple_literal {
                      }
                    }
                  }
                }
                arguments {
                  call {
                    function {
                      identifier {
                        name: "One"
                      }
                    }
                    argument {
                      tuple_literal {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              call {
                function {
                  simple_member_access {
                    field: "Six"
                    object {
                      identifier {
                        name: "N"
                      }
                    }
                  }
                }
                argument {
                  tuple_literal {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
