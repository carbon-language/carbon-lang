compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    function {
      name {
        name: "F"
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "n"
            type {
              expression_pattern {
                expression {
                  int_type_literal {
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "p"
            type {
              expression_pattern {
                expression {
                  operator {
                    op: Ptr
                    arguments {
                      int_type_literal {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        fields {
          binding_pattern {
            name: "q"
            type {
              expression_pattern {
                expression {
                  operator {
                    op: Ptr
                    arguments {
                      operator {
                        op: Ptr
                        arguments {
                          operator {
                            op: Ptr
                            arguments {
                              int_type_literal {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Expression
        type {
          operator {
            op: Ptr
            arguments {
              int_type_literal {
              }
            }
          }
        }
      }
      body {
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "a"
                type {
                  expression_pattern {
                    expression {
                      int_type_literal {
                      }
                    }
                  }
                }
              }
            }
            init {
              operator {
                op: Mul
                arguments {
                  identifier {
                    name: "n"
                  }
                }
                arguments {
                  operator {
                    op: Deref
                    arguments {
                      identifier {
                        name: "p"
                      }
                    }
                  }
                }
              }
            }
            is_returned: false
          }
        }
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "b"
                type {
                  expression_pattern {
                    expression {
                      int_type_literal {
                      }
                    }
                  }
                }
              }
            }
            init {
              operator {
                op: Mul
                arguments {
                  identifier {
                    name: "a"
                  }
                }
                arguments {
                  identifier {
                    name: "n"
                  }
                }
              }
            }
            is_returned: false
          }
        }
        statements {
          assign {
            lhs {
              operator {
                op: Deref
                arguments {
                  identifier {
                    name: "p"
                  }
                }
              }
            }
            rhs {
              operator {
                op: Mul
                arguments {
                  identifier {
                    name: "b"
                  }
                }
                arguments {
                  operator {
                    op: Deref
                    arguments {
                      identifier {
                        name: "p"
                      }
                    }
                  }
                }
              }
            }
            op: Plain
          }
        }
        statements {
          assign {
            lhs {
              operator {
                op: Deref
                arguments {
                  operator {
                    op: Deref
                    arguments {
                      identifier {
                        name: "q"
                      }
                    }
                  }
                }
              }
            }
            rhs {
              identifier {
                name: "p"
              }
            }
            op: Plain
          }
        }
        statements {
          return_expression_statement {
            expression {
              operator {
                op: Deref
                arguments {
                  operator {
                    op: Deref
                    arguments {
                      identifier {
                        name: "q"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              int_literal {
                value: 0
              }
            }
          }
        }
      }
    }
  }
}
