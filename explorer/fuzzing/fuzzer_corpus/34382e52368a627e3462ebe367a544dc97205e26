compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    class_declaration {
      name {
        name: "C"
      }
      members {
        variable {
          binding {
            name: "n"
            type {
              expression_pattern {
                expression {
                  int_type_literal {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name {
        name: "Main"
      }
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          variable_definition {
            pattern {
              binding_pattern {
                name: "c"
                type {
                  expression_pattern {
                    expression {
                      identifier {
                        name: "C"
                      }
                    }
                  }
                }
              }
            }
            init {
              struct_literal {
                fields {
                  name: "n"
                  expression {
                    int_literal {
                      value: 1
                    }
                  }
                }
              }
            }
            is_returned: false
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      string_literal {
                        value: "Before: {0}"
                      }
                    }
                    fields {
                      simple_member_access {
                        field: "n"
                        object {
                          identifier {
                            name: "c"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  compound_member_access {
                    object {
                      identifier {
                        name: "c"
                      }
                    }
                    path {
                      simple_member_access {
                        field: "Op"
                        object {
                          call {
                            function {
                              identifier {
                                name: "AssignWith"
                              }
                            }
                            argument {
                              tuple_literal {
                                fields {
                                  struct_type_literal {
                                    fields {
                                      name: "n"
                                      expression {
                                        int_type_literal {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      struct_literal {
                        fields {
                          name: "n"
                          expression {
                            int_literal {
                              value: 2
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      string_literal {
                        value: "Interface: {0}"
                      }
                    }
                    fields {
                      simple_member_access {
                        field: "n"
                        object {
                          identifier {
                            name: "c"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          assign {
            lhs {
              identifier {
                name: "c"
              }
            }
            rhs {
              struct_literal {
                fields {
                  name: "n"
                  expression {
                    int_literal {
                      value: 3
                    }
                  }
                }
              }
            }
            op: Plain
          }
        }
        statements {
          expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "Print"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      string_literal {
                        value: "Op: {0}"
                      }
                    }
                    fields {
                      simple_member_access {
                        field: "n"
                        object {
                          identifier {
                            name: "c"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statements {
          return_expression_statement {
            expression {
              int_literal {
                value: 0
              }
            }
          }
        }
      }
    }
  }
}
