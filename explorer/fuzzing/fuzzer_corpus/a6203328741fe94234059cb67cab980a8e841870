compilation_unit {
  package_statement {
    package_name: "ExplorerTest"
  }
  is_api: true
  declarations {
    function {
      name: "DoNegate"
      deduced_parameters {
        name: "T"
        type {
          where {
            base {
              identifier {
                name: "Negate"
              }
            }
            clauses {
              equals {
                lhs {
                  designator {
                    name: "Result"
                  }
                }
                rhs {
                  designator {
                    name: "Self"
                  }
                }
              }
            }
          }
        }
      }
      param_pattern {
        fields {
          binding_pattern {
            name: "x"
            type {
              expression_pattern {
                expression {
                  identifier {
                    name: "T"
                  }
                }
              }
            }
          }
        }
      }
      return_term {
        kind: Expression
        type {
          identifier {
            name: "T"
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              operator {
                op: Neg
                arguments {
                  identifier {
                    name: "x"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarations {
    function {
      name: "Main"
      param_pattern {
      }
      return_term {
        kind: Expression
        type {
          int_type_literal {
          }
        }
      }
      body {
        statements {
          return_expression_statement {
            expression {
              call {
                function {
                  identifier {
                    name: "DoNegate"
                  }
                }
                argument {
                  tuple_literal {
                    fields {
                      int_literal {
                        value: 3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
