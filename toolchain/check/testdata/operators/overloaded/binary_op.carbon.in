// Part of the Carbon Language project, under the Apache License v2.0 with LLVM
// Exceptions. See /LICENSE for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// AUTOUPDATE

HEADER

// --- prelude.carbon

package Carbon api;

interface INTERFACE {
  fn Op[self: Self](other: Self) -> Self;
}
interface INTERFACEAssign {
  fn Op[addr self: Self*](other: Self);
}

// --- user.carbon

package User api;

import Carbon;

class C {};

impl C as Carbon.INTERFACE {
  fn Op[self: C](other: C) -> C {
    return {};
  }
}
impl C as Carbon.INTERFACEAssign {
  fn Op[addr self: C*](other: C) {}
}

fn TestOp(a: C, b: C) -> C {
  return a OP b;
}

fn TestAssign(a: C*, b: C) {
  *a OP= b;
}

// --- fail_no_impl.carbon

package FailNoImpl api;

import Carbon;

class D {};

fn TestOp(a: D, b: D) -> D {
  return a OP b;
}

fn TestAssign(a: D*, b: D) {
  *a OP= b;
}

// --- fail_no_impl_for_args.carbon

package FailNoImplForArgs api;

import Carbon;

class C {};

impl C as Carbon.INTERFACE {
  fn Op[self: C](other: C) -> C {
    return {};
  }
}

class D {};

fn TestRhsBad(a: C, b: D) -> C {
  return a OP b;
}

fn TestLhsBad(a: D, b: C) -> C {
  return a OP b;
}
