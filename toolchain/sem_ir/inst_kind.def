// Part of the Carbon Language project, under the Apache License v2.0 with LLVM
// Exceptions. See /LICENSE for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// This is an X-macro header. It does not use `#include` guards, and instead is
// designed to be `#include`ed after the x-macro is defined in order for its
// inclusion to expand to the desired output. Macro definitions are cleaned up
// at the end of this file.
//
// This macro should be defined before including this header:
// - CARBON_SEM_IR_INST_KIND(Name)
//   Invoked for each kind of semantic instruction.
//
// The invocation of the above macro will be wrapped in one macro from each of
// the following sets, which by default expand to their argument:
//
// Whether the instruction can define a type:
// - CARBON_SEM_IR_INST_KIND_TYPE(...)
//   Invoked for each instruction that is always of type `type`, and might
//   define a type constant.
// - CARBON_SEM_IR_INST_KIND_MAYBE_TYPE(...)
//   Invoked for each instruction that is sometimes of type `type`, and might
//   define a type constant.
// - CARBON_SEM_IR_INST_KIND_NOT_TYPE(...)
//   Invoked for each instruction that can never define a type constant. Note
//   that such instructions can still have type `type`, but are not the
//   canonical definition of any type.
//
// Whether the instruction can define a constant, see `InstConstantKind`:
// - CARBON_SEM_IR_INST_KIND_CONSTANT_NEVER(...)
//   Invoked when `constant_kind()` is `InstConstantKind::Never`.
// - CARBON_SEM_IR_INST_KIND_CONSTANT_SYMBOLIC_ONLY(...)
//   Invoked when `constant_kind()` is `InstConstantKind::SymbolicOnly`.
// - CARBON_SEM_IR_INST_KIND_CONSTANT_CONDITIONAL(...)
//   Invoked when `constant_kind()` is `InstConstantKind::Conditional`.
// - CARBON_SEM_IR_INST_KIND_CONSTANT_ALWAYS(...)
//   Invoked when `constant_kind()` is `InstConstantKind::Always`.
//
// Defining these is optional.

#ifndef CARBON_SEM_IR_INST_KIND
#error "Must define the x-macro to use this file."
#endif

#ifndef CARBON_SEM_IR_INST_KIND_NOT_TYPE
#define CARBON_SEM_IR_INST_KIND_NOT_TYPE(...) __VA_ARGS__
#endif
#ifndef CARBON_SEM_IR_INST_KIND_MAYBE_TYPE
#define CARBON_SEM_IR_INST_KIND_MAYBE_TYPE(...) __VA_ARGS__
#endif
#ifndef CARBON_SEM_IR_INST_KIND_TYPE
#define CARBON_SEM_IR_INST_KIND_TYPE(...) __VA_ARGS__
#endif

#ifndef CARBON_SEM_IR_INST_KIND_CONSTANT_NEVER
#define CARBON_SEM_IR_INST_KIND_CONSTANT_NEVER(...) __VA_ARGS__
#endif
#ifndef CARBON_SEM_IR_INST_KIND_CONSTANT_SYMBOLIC_ONLY
#define CARBON_SEM_IR_INST_KIND_CONSTANT_SYMBOLIC_ONLY(...) __VA_ARGS__
#endif
#ifndef CARBON_SEM_IR_INST_KIND_CONSTANT_CONDITIONAL
#define CARBON_SEM_IR_INST_KIND_CONSTANT_CONDITIONAL(...) __VA_ARGS__
#endif
#ifndef CARBON_SEM_IR_INST_KIND_CONSTANT_ALWAYS
#define CARBON_SEM_IR_INST_KIND_CONSTANT_ALWAYS(...) __VA_ARGS__
#endif

#define CARBON_SEM_IR_INST_KIND_IMPL(Name, IsType, IsConstant) \
  CARBON_SEM_IR_INST_KIND_##IsType(                            \
      CARBON_SEM_IR_INST_KIND_##IsConstant(CARBON_SEM_IR_INST_KIND(Name)))

// For each instruction kind declared here there is a matching definition in
// `typed_insts.h`.
CARBON_SEM_IR_INST_KIND_IMPL(AdaptDecl, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(AddrOf, NOT_TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(AddrPattern, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ArrayIndex, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ArrayInit, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ArrayType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(AsCompatible, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(Assign, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(AssociatedConstantDecl, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(AssociatedEntity, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(AssociatedEntityType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(BaseDecl, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(BindAlias, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(BindName, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(BindSymbolicName, MAYBE_TYPE,
                             CONSTANT_SYMBOLIC_ONLY)
CARBON_SEM_IR_INST_KIND_IMPL(BindValue, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(BlockArg, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(BoolLiteral, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(BoundMethod, NOT_TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(Branch, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(BranchIf, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(BranchWithArg, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(Builtin, TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(Call, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ClassDecl, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ClassElementAccess, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ClassInit, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ClassType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(ConstType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(Converted, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(Deref, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(FacetTypeAccess, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(FieldDecl, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(FloatLiteral, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(FloatType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(FunctionDecl, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(ImplDecl, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ImportRefUnloaded, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ImportRefLoaded, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ImportRefUsed, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(InitializeFrom, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(InterfaceDecl, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(InterfaceType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(InterfaceWitness, NOT_TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(InterfaceWitnessAccess, MAYBE_TYPE,
                             CONSTANT_SYMBOLIC_ONLY)
CARBON_SEM_IR_INST_KIND_IMPL(IntLiteral, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(IntType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(NameRef, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(Namespace, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(Param, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(PointerType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(RealLiteral, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(ReturnExpr, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(Return, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(SpliceBlock, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(StringLiteral, NOT_TYPE, CONSTANT_ALWAYS)
CARBON_SEM_IR_INST_KIND_IMPL(StructAccess, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(StructInit, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(StructLiteral, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(StructType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(StructTypeField, NOT_TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(StructValue, NOT_TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(TemporaryStorage, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(Temporary, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(TupleAccess, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(TupleIndex, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(TupleInit, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(TupleLiteral, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(TupleType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(TupleValue, NOT_TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(UnaryOperatorNot, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(UnboundElementType, TYPE, CONSTANT_CONDITIONAL)
CARBON_SEM_IR_INST_KIND_IMPL(ValueAsRef, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(ValueOfInitializer, NOT_TYPE, CONSTANT_NEVER)
CARBON_SEM_IR_INST_KIND_IMPL(VarStorage, NOT_TYPE, CONSTANT_NEVER)

#undef CARBON_SEM_IR_INST_KIND_TYPE
#undef CARBON_SEM_IR_INST_KIND_MAYBE_TYPE
#undef CARBON_SEM_IR_INST_KIND_NOT_TYPE

#undef CARBON_SEM_IR_INST_KIND_CONSTANT_NEVER
#undef CARBON_SEM_IR_INST_KIND_CONSTANT_SYMBOLIC_ONLY
#undef CARBON_SEM_IR_INST_KIND_CONSTANT_CONDITIONAL
#undef CARBON_SEM_IR_INST_KIND_CONSTANT_ALWAYS

#undef CARBON_SEM_IR_INST_KIND_IMPL
#undef CARBON_SEM_IR_INST_KIND
