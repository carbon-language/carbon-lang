; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -mtriple=powerpc64-linux-gnu -mcpu=pwr8 -mattr=+vsx -slp-vectorizer < %s | FileCheck %s

%struct.A = type { i8*, i8* }

define i64 @foo(%struct.A* nocapture readonly %this) {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[END_I:%.*]] = getelementptr inbounds [[STRUCT_A:%.*]], %struct.A* [[THIS:%.*]], i64 0, i32 1
; CHECK-NEXT:    [[TMP0:%.*]] = bitcast i8** [[END_I]] to i64*
; CHECK-NEXT:    [[TMP1:%.*]] = load i64, i64* [[TMP0]], align 8
; CHECK-NEXT:    [[TMP2:%.*]] = bitcast %struct.A* [[THIS]] to i64*
; CHECK-NEXT:    [[TMP3:%.*]] = load i64, i64* [[TMP2]], align 8
; CHECK-NEXT:    [[SUB_PTR_SUB_I:%.*]] = sub i64 [[TMP1]], [[TMP3]]
; CHECK-NEXT:    [[CMP:%.*]] = icmp sgt i64 [[SUB_PTR_SUB_I]], 9
; CHECK-NEXT:    br i1 [[CMP]], label [[RETURN:%.*]], label [[LOR_LHS_FALSE:%.*]]
; CHECK:       lor.lhs.false:
; CHECK-NEXT:    [[TMP4:%.*]] = inttoptr i64 [[TMP3]] to i8*
; CHECK-NEXT:    [[TMP5:%.*]] = inttoptr i64 [[TMP1]] to i8*
; CHECK-NEXT:    [[CMP2:%.*]] = icmp ugt i8* [[TMP5]], [[TMP4]]
; CHECK-NEXT:    [[DOT:%.*]] = select i1 [[CMP2]], i64 2, i64 -1
; CHECK-NEXT:    ret i64 [[DOT]]
; CHECK:       return:
; CHECK-NEXT:    ret i64 2
;
entry:
  %end.i = getelementptr inbounds %struct.A, %struct.A* %this, i64 0, i32 1
  %0 = bitcast i8** %end.i to i64*
  %1 = load i64, i64* %0, align 8
  %2 = bitcast %struct.A* %this to i64*
  %3 = load i64, i64* %2, align 8
  %sub.ptr.sub.i = sub i64 %1, %3
  %cmp = icmp sgt i64 %sub.ptr.sub.i, 9
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:
  %4 = inttoptr i64 %3 to i8*
  %5 = inttoptr i64 %1 to i8*
  %cmp2 = icmp ugt i8* %5, %4
  %. = select i1 %cmp2, i64 2, i64 -1
  ret i64 %.

return:
  ret i64 2
}

