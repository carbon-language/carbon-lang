# RUN: llc -verify-machineinstrs -start-after=prologepilog -filetype=obj -o - %s | llvm-dwarfdump -v --debug-info - | FileCheck %s
# CHECK: .debug_info contents:
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location {{.*}}         (DW_OP_reg1 RDX, DW_OP_bit_piece 0x8 0x8)
# CHECK-NEXT: DW_AT_name {{.*}}"dh"
--- |
  ; Manually created after:
  ; char f(int i) {
  ;   char dh = i>>8;
  ;   return dh;
  ; }

  target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-apple-macosx10.12.0"
  
  define signext i8 @f(i32 %i) local_unnamed_addr #0 !dbg !7 {
  entry:
    tail call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !13, metadata !15), !dbg !16
    %shr1 = lshr i32 %i, 8, !dbg !17
    %conv = trunc i32 %shr1 to i8, !dbg !18
    tail call void @llvm.dbg.value(metadata i8 %conv, i64 0, metadata !14, metadata !15), !dbg !19
    ret i8 %conv, !dbg !20
  }
  
  declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #0
  
  attributes #0 = { nounwind readnone }
  
  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!3, !4, !5}
  !llvm.ident = !{!6}
  
  !0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 4.0.0 (trunk 288677) (llvm/trunk 288679)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
  !1 = !DIFile(filename: "t.c", directory: "/")
  !2 = !{}
  !3 = !{i32 2, !"Dwarf Version", i32 4}
  !4 = !{i32 2, !"Debug Info Version", i32 3}
  !5 = !{i32 1, !"PIC Level", i32 2}
  !6 = !{!"clang version 4.0.0 (trunk 288677) (llvm/trunk 288679)"}
  !7 = distinct !DISubprogram(name: "f", scope: !1, file: !1, line: 1, type: !8, isLocal: false, isDefinition: true, scopeLine: 1, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !12)
  !8 = !DISubroutineType(types: !9)
  !9 = !{!10, !11}
  !10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
  !11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
  !12 = !{!13, !14}
  !13 = !DILocalVariable(name: "i", arg: 1, scope: !7, file: !1, line: 1, type: !11)
  !14 = !DILocalVariable(name: "dh", scope: !7, file: !1, line: 2, type: !10)
  !15 = !DIExpression()
  !16 = !DILocation(line: 1, column: 12, scope: !7)
  !17 = !DILocation(line: 2, column: 14, scope: !7)
  !18 = !DILocation(line: 2, column: 13, scope: !7)
  !19 = !DILocation(line: 2, column: 8, scope: !7)
  !20 = !DILocation(line: 3, column: 3, scope: !7)

...
---
name:            f
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
tracksRegLiveness: true
liveins:         
  - { reg: '$edi' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       8
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
fixedStack:      
  - { id: 0, type: spill-slot, offset: -16, size: 8, alignment: 16 }
body:             |
  bb.0.entry:
    liveins: $edi, $rbp
  
    frame-setup PUSH64r killed $rbp, implicit-def $rsp, implicit $rsp
    CFI_INSTRUCTION def_cfa_offset 16
    CFI_INSTRUCTION offset $rbp, -16
    $rbp = frame-setup MOV64rr $rsp
    CFI_INSTRUCTION def_cfa_register $rbp
    DBG_VALUE $dh, _, !14, !15, debug-location !16
    $edi = SHR32ri killed $edi, 8, implicit-def dead $eflags, debug-location !17
    $eax = MOVSX32rr8 $dil, implicit killed $edi, debug-location !20
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !20
    RETQ $eax, debug-location !20

...
