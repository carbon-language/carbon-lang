## Show that llvm-objcopy and llvm-strip emit errors when attempting to modify
## archives containing unrecognized files, and do not modify anything. We use
## --strip-debug so that the section should be removed, and a difference
## detectable, if the file were modified.

# RUN: yaml2obj %s -o %t.o
# RUN: rm -f %t.a
# RUN: llvm-ar rc %t.a %t.o %s
# RUN: cp %t.a %t1.a
# RUN: cp %t.a %t2.a

# RUN: not llvm-objcopy --strip-debug %t1.a 2>&1 | FileCheck %s -DARCHIVE=%t1.a
# RUN: not llvm-strip --strip-debug %t2.a 2>&1 | FileCheck %s -DARCHIVE=%t2.a
## Verify that the archive was not modified, if any member couldn't be recognized.
# RUN: cmp %t.a %t1.a
# RUN: cmp %t.a %t2.a

# CHECK: error: '[[ARCHIVE]](archive-unknown-members.test)': The file was not recognized as a valid object file

# RUN: rm -f %t.thin1.a %t.thin2.a
# RUN: cp %t.o %t1.o
# RUN: cp %t.o %t2.o
# RUN: llvm-ar rcT %t.thin1.a %t1.o %s
# RUN: llvm-ar rcT %t.thin2.a %t2.o %s

# RUN: not llvm-objcopy --strip-debug %/t.thin1.a 2>&1 \
# RUN:   | FileCheck %s --check-prefix=THIN -DARCHIVE=%/t.thin1.a -DMEMBER=%/s
# RUN: not llvm-strip --strip-debug %/t.thin2.a 2>&1 \
# RUN:   | FileCheck %s --check-prefix=THIN -DARCHIVE=%/t.thin2.a -DMEMBER=%/s
## Verify that the first member was not modified, if a later member could not
## be recognized.
# RUN: cmp %t.o %t1.o
# RUN: cmp %t.o %t2.o

# THIN: error: '[[ARCHIVE]]([[MEMBER]])': The file was not recognized as a valid object file

--- !ELF
FileHeader:
  Class:   ELFCLASS64
  Data:    ELFDATA2LSB
  Type:    ET_EXEC
  Machine: EM_X86_64
Sections:
  - Name: .debug_foo
    Type: SHT_PROGBITS
