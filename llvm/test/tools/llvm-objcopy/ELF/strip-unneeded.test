# RUN: yaml2obj %s -o %t
# RUN: cp %t %t1
# RUN: llvm-objcopy --strip-unneeded %t %t2
## Verify that llvm-objcopy has not modified the input.
# RUN: cmp %t %t1
# RUN: llvm-readobj --symbols %t2 | FileCheck %s

## Verify that --keep-file-symbols works together with --strip-unneeded
# RUN: llvm-objcopy --keep-file-symbols --strip-unneeded %t %t2b
# RUN: llvm-readobj --symbols %t2b | FileCheck %s --check-prefixes=CHECK,FILESYM

# RUN: llvm-objcopy --strip-unneeded-symbol=bar \
# RUN:              %t %t3
# RUN: llvm-readobj --symbols %t3 | FileCheck %s --check-prefixes=STRIP-BAR,REMAIN

# RUN: llvm-objcopy --regex --strip-unneeded-symbol='.*' %t %t4
# RUN: cmp %t2 %t4

## Verify that --strip-unneeded-symbols removes all unneeded symbols listed in
## the file, but not those that aren't.
## In this case, fileSymbol isn't mentioned (so isn't removed), barbaz is
## mentioned, but isn't removed (because it is needed) and bar, foobar and
## foobaz are mentioned and removed.
# RUN: echo " bar # bar " > %t.list.txt
# RUN: echo "foobar" >> %t.list.txt
# RUN: echo "foobaz" >> %t.list.txt
# RUN: echo " # comment " >> %t.list.txt
# RUN: echo "barbaz" >> %t.list.txt
# RUN: llvm-objcopy --strip-unneeded-symbols %t.list.txt %t %t5
# RUN: cmp %t2b %t5

# RUN: echo " .* # * - remove all " > %t.list2.txt
# RUN: llvm-objcopy --regex --strip-unneeded-symbols %t.list2.txt %t %t6
# RUN: cmp %t2 %t6

## Verify that llvm-strip modifies the symbol table the same way.
# RUN: llvm-strip --strip-unneeded %t
# RUN: cmp %t %t2

!ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  Type:            ET_REL
  Machine:         EM_X86_64
Sections:
  - Name:            .text
    Type:            SHT_PROGBITS
    Flags:           [ SHF_ALLOC, SHF_EXECINSTR ]
    Address:         0x1000
    AddressAlign:    0x0000000000000010
    Size:            64
  - Name:            .group
    Type:            SHT_GROUP
    Link:            .symtab
    AddressAlign:    0x0000000000000004
    Info:            barfoo
    Members:
      - SectionOrType:   GRP_COMDAT
      - SectionOrType:   .text
  - Name:            .rel.text
    Type:            SHT_REL
    Link:            .symtab
    Info:            .text
    Relocations:
      - Offset: 0x1000
        Symbol: foo
        Type:   R_X86_64_PC32
Symbols:
  - Name:     foo
    Type:     STT_FUNC
    Section:  .text
    Value:    0x1000
    Size:     8
  - Name:     bar
    Type:     STT_FUNC
    Size:     8
    Section:  .text
    Value:    0x1008
  - Name:     barfoo
    Type:     STT_FUNC
    Size:     8
    Section:  .text
    Value:    0x1010
  - Name:     fileSymbol
    Type:     STT_FILE
    Index:    SHN_ABS
  - Name:     sectionSymbol
    Type:     STT_SECTION
  - Name:     foobar
    Type:     STT_FUNC
    Binding:  STB_GLOBAL
  - Name:     barbaz
    Type:     STT_FUNC
    Size:     8
    Section:  .text
    Value:    0x1020
    Binding:  STB_GLOBAL
  - Name:     baz
    Type:     STT_FUNC
    Size:     8
    Section:  .text
    Value:    0x1018
    Binding:  STB_WEAK
  - Name:     foobaz
    Type:     STT_FUNC
    Binding:  STB_WEAK

#CHECK: Symbols [
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name:
#CHECK-NEXT:    Value: 0x0
#CHECK-NEXT:    Size: 0
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: None
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: Undefined
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: foo
#CHECK-NEXT:    Value: 0x1000
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: barfoo
#CHECK-NEXT:    Value: 0x1010
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#FILESYM-NEXT:Symbol {
#FILESYM-NEXT:  Name: fileSymbol
#FILESYM-NEXT:  Value: 0x0
#FILESYM-NEXT:  Size: 0
#FILESYM-NEXT:  Binding: Local
#FILESYM-NEXT:  Type: File
#FILESYM-NEXT:  Other: 0
#FILESYM-NEXT:  Section: Absolute
#FILESYM-NEXT:}
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: sectionSymbol
#CHECK-NEXT:    Value: 0x0
#CHECK-NEXT:    Size: 0
#CHECK-NEXT:    Binding: Local
#CHECK-NEXT:    Type: Section
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: Undefined
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: barbaz
#CHECK-NEXT:    Value: 0x1020
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Global
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#CHECK-NEXT:  Symbol {
#CHECK-NEXT:    Name: baz
#CHECK-NEXT:    Value: 0x1018
#CHECK-NEXT:    Size: 8
#CHECK-NEXT:    Binding: Weak
#CHECK-NEXT:    Type: Function
#CHECK-NEXT:    Other: 0
#CHECK-NEXT:    Section: .text
#CHECK-NEXT:  }
#CHECK-NEXT:]


#STRIP-BAR-NOT: Name: bar ({{.*}})
#REMAIN: Name: foobar
#REMAIN: Name: foobaz
