--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            7
  Column:          13
Function:        'f()'
Args:
  - String:          'Specialized function '
  - Function:        '"Swift.CountableRange.init(uncheckedBounds:)"'
  - String:          ' with type '
  - FuncType:        '(Int, Int, @thin CountableRange<Int>.Type) -> CountableRange<Int>'
...
--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            7
  Column:          12
Function:        'f()'
Args:
  - String:          'Specialized function '
  - Function:        '"Swift.Collection<>.makeIterator()"'
  - String:          ' with type '
  - FuncType:        '(@in_guaranteed CountableRange<Int>) -> IndexingIterator<CountableRange<Int>>'
...
--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            7
  Column:          9
Function:        'f()'
Args:
  - String:          'Specialized function '
  - Function:        '"Swift.IndexingIterator.next()"'
  - String:          ' with type '
  - FuncType:        '(@inout IndexingIterator<CountableRange<Int>>) -> Optional<Int>'
...
--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            8
  Column:          12
Function:        'f()'
Args:
  - String:          'Specialized function '
  - Function:        '"Swift._allocateUninitializedArray<A>(_:)"'
  - String:          ' with type '
  - FuncType:        '(Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer)'
...
--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            8
  Column:          12
Function:        'f()'
Args:
  - String:          'Specialized function '
  - Function:        '"Swift.Array.subscript.getter"'
  - String:          ' with type '
  - FuncType:        '(Int, @guaranteed Array<Int>) -> Int'
...
--- !Passed
Pass:            sil-inliner
Name:            sil.Inlined
DebugLoc:
  File:            s.swift
  Line:            7
  Column:          13
Function:        'f()'
Args:
  - Callee:          '"specialized Swift.CountableRange.init(uncheckedBounds:)"'
    DebugLoc:
      File:            blah.swift
      Line:            6
      Column:          6
  - String:          ' inlined into '
  - Caller:          '"s.f()"'
    DebugLoc:
      File:            s.swift
      Line:            6
      Column:          6
  - String:          ' (cost = '
  - Cost:            '0'
  - String:          ', benefit = '
  - Benefit:         '20'
  - String:          ')'
...
--- !Passed
Pass:            sil-inliner
Name:            sil.Inlined
DebugLoc:
  File:            s.swift
  Line:            8
  Column:          12
Function:        'f()'
Args:
  - Callee:          '"specialized Swift.Array.subscript.getter"'
  - String:          ' inlined into '
  - Caller:          '"s.f()"'
    DebugLoc:
      File:            s.swift
      Line:            6
      Column:          6
  - String:          ' (cost = '
  - Cost:            '3'
  - String:          ', benefit = '
  - Benefit:         '52'
  - String:          ')'
...
--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            4
  Column:          17
Function:        main
Args:
  - String:          'Specialized function '
  - Function:        '"Swift._allocateUninitializedArray<A>(_:)"'
  - String:          ' with type '
  - FuncType:        '(Builtin.Word) -> (@owned Array<Int>, Builtin.RawPointer)'
...
--- !Passed
Pass:            sil-generic-specializer
Name:            sil.Specialized
DebugLoc:
  File:            s.swift
  Line:            4
  Column:          16
Function:        main
Args:
  - String:          'Specialized function '
  - Function:        '"Swift.Array.init(arrayLiteral:)"'
  - String:          ' with type '
  - FuncType:        '(@owned Array<Int>, @thin Array<Int>.Type) -> @owned Array<Int>'
...
--- !Passed
Pass:            sil-inliner
Name:            sil.Inlined
DebugLoc:
  File:            s.swift
  Line:            4
  Column:          16
Function:        main
Args:
  - Callee:          '"specialized Swift.Array.init(arrayLiteral:)"'
  - String:          ' inlined into '
  - Caller:          '"main"'
  - String:          ' (cost = '
  - Cost:            '0'
  - String:          ', benefit = '
  - Benefit:         '20'
  - String:          ')'
...
--- !Passed
Pass:            sil-inliner
Name:            sil.Inlined
DebugLoc:
  File:            s.swift
  Line:            12
  Column:          1
Function:        main
Args:
  - Callee:          '"s.f()"'
    DebugLoc:
      File:            s.swift
      Line:            6
      Column:          6
  - String:          ' inlined into '
  - Caller:          '"main"'
  - String:          ' (cost = '
  - Cost:            '20'
  - String:          ', benefit = '
  - Benefit:         '20'
  - String:          ')'
...
